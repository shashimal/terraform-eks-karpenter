{
  "version": 4,
  "terraform_version": "1.5.4",
  "serial": 771,
  "lineage": "faf8b8cf-1b15-81d7-5d12-c41a1874a3d7",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter",
            "name": "eks-karpenter",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYXAtc291dGhlYXN0LTEuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFTSUEzUkxYWE1GVzVHSFBaRlhTJTJGMjAyNDA2MTUlMkZhcC1zb3V0aGVhc3QtMSUyRnN0cyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNjE1VDAxMTkzMlomWC1BbXotRXhwaXJlcz0wJlgtQW16LVNlY3VyaXR5LVRva2VuPUlRb0piM0pwWjJsdVgyVmpFQm9hQ1hWekxXVmhjM1F0TVNKR01FUUNJRzRqakdsJTJGZ2RLZnlqcjJHaGdPMDJkeWRVZzk5c09tMXJ1eXpIVTgybXRnQWlCcWYzJTJCOUpZTE1RTkJaR0lYdmV1dDIzRHJkZUw3b212R1JGTjlOeXZjJTJCc0NyNUFnaXklMkYlMkYlMkYlMkYlMkYlMkYlMkYlMkYlMkYlMkY4QkVBRWFERGM1TXpJd09UUXpNRE00TVNJTSUyQnM1SzZ6NGRFYVJBYVpkbUtzMEM3NmxzVFk0N2UxWnMlMkJORXFiN0Z3VExYSXFJU2cwOTRYOW5xN2kzekJtZmxiRXVNcjkyUlNFN2tRcE5VYjZ0U2QzZG5TY1hieGg1WDBCSkJYMEROOUo0eUxhS0E1JTJGa2pwc00zSGpoUG0xakpBNHR6RmhENEd5NkdnWCUyQjZqU3hXMSUyQlRNblIxUldNa1ZrTGRnSXBoJTJGZnFZZXglMkZtRVJRTW9DdklXNFFuTjd0TWttSVFXZExxdU1qWUhLTUJCUEYxNUhJNGhCVSUyQlNpb1FBNURIb05RJTJGQlhPelZZcERtdktROWhyYW10WFlYMUclMkJxS0tzM2xZcElhTiUyRmY4U3VyQ3l4OTIlMkJXWENXRURIR0RubEpBWURmJTJCTndIMlFCMmxrR3ZTTllLN252YVJqUXR6RWRpQVNWckxjNHJwMWV3UyUyQnR1V0MxeTE4USUyQk9ZVUlyd2xkZUtWZnRLaHBYd3IyVEJGMjh3MVJqVjBDWVV6QzByMFFKOVg3Sm1QOGR6RTRUUE9TWVhhU2xzRXlVT1E3YyUyQkpEMGlhQUZyTGpGbU9wV3B5JTJGVVdKTlVBOFZFZ2NkJTJCcmh3NHpzTnYwNldxQldrVWNmTUluVnM3TUdPcWdCcExZdllIbW5QdDh0TFdoNVFGd2U3S2U4NWRWOE54eWZuWlN1UiUyRiUyRlN1a1cwQ2RXN3N6WlVXSmgyV0J5JTJGaGNLQlJRSlhpc3IxamdSSkMwbWtkdDExV2tBdnd4ZGhPWGl2UTd4JTJGVWRZU3FyNVh0N1J0SGJxY0xiQ0VNa0UzMUJTak5ISHVrV3FiVnFYbHc5Y0FLTTdrbUl0JTJGZWpsOXlHcnlJZXpGbmRRWU1YNUp1WU5FaTBHNHNwQ29NVHJBUmN5ME1GOThpejdUSnVWbXBibyUyRlZwZVFVYTR0RGhyQlU1MU0mWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT0yZWIzYzQ0ZmVlYzQ1N2U2NjJlY2EzOTI5OTJkZjliNTc5ZGFjYWVlYWFlN2Q3OWVkZmYwNTc4MzkzMGU0ZDdm"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "ec2_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::793209430381:role/eks-karpenter-workers",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-06-15T00:14:49Z",
            "description": "IAM Role for the workers in EKS Cluster named eks-karpenter",
            "force_detach_policies": true,
            "id": "eks-karpenter-workers",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
              "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
            ],
            "max_session_duration": 3600,
            "name": "eks-karpenter-workers",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA3RLXXMFW4MDJRVVDL"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter-workers-20240615001451212400000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "eks-karpenter-workers"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current"
          ]
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter-workers-20240615001450937600000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "eks-karpenter-workers"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current"
          ]
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter-workers-20240615001451592700000009",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "eks-karpenter-workers"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current"
          ]
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter-workers-20240615001451219100000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
            "role": "eks-karpenter-workers"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "793209430381",
            "arn": "arn:aws:sts::793209430381:assumed-role/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/duleendra",
            "id": "793209430381",
            "user_id": "AROA3RLXXMFW7OKQ7N53R:duleendra"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sts::793209430381:assumed-role/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/duleendra",
            "id": "arn:aws:sts::793209430381:assumed-role/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/duleendra",
            "issuer_arn": "arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b",
            "issuer_id": "AROA3RLXXMFW7OKQ7N53R",
            "issuer_name": "AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b",
            "session_name": "duleendra"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:26:04Z",
                "not_before": "2022-08-23T22:26:04Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129356476704345391986644047206454194698629",
                "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF8DCCBNigAwIBAgIQDamQCKah7opt0RleD4ItxDANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI0MDQwMTAwMDAwMFoXDTI1MDQzMDIzNTk1OVowLTEr\nMCkGA1UEAwwiKi5la3MuYXAtc291dGhlYXN0LTEuYW1hem9uYXdzLmNvbTCCASIw\nDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPGtDYH02PDXZe1bvUqKtrvhWU12\nbl5oiaPDeSW7Ku4l/Kx0DayxT3KxYgVkrEXzb89QIjkmhi7h1p+bz0omnoETkDWx\nmcSjqlgcy4dUrerVvyuqHq1v8toY46ocrg2TEi5wkMYdYHsTe3v9cWTFqfihUYuK\n5M+J+nz/X9b6d9wNgndncFvJbG+iMvXpDoiQMSe877EeTAMTaWzbNJUcio680KHv\nSUSHYek4WBQjj971qjQAhpjIjPdRsFEkOe8JP8RRzRT1W+JuXJ4RQsv3gqUz109Q\nkTSLAels6lINoFKoMP6w9V3SGMKi6CgCbzA48wWGnR3mF1Zybx96wUJyIUUCAwEA\nAaOCAvswggL3MB8GA1UdIwQYMBaAFFXZGF/SHMwB4Vi0vqvZVUIB1y4CMB0GA1Ud\nDgQWBBTZEZkAUhzneoPNb42GbNzZRUixxDAtBgNVHREEJjAkgiIqLmVrcy5hcC1z\nb3V0aGVhc3QtMS5hbWF6b25hd3MuY29tMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA4G\nA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwOwYD\nVR0fBDQwMjAwoC6gLIYqaHR0cDovL2NybC5yMm0wMy5hbWF6b250cnVzdC5jb20v\ncjJtMDMuY3JsMHUGCCsGAQUFBwEBBGkwZzAtBggrBgEFBQcwAYYhaHR0cDovL29j\nc3AucjJtMDMuYW1hem9udHJ1c3QuY29tMDYGCCsGAQUFBzAChipodHRwOi8vY3J0\nLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0wMy5jZXIwDAYDVR0TAQH/BAIwADCC\nAX4GCisGAQQB1nkCBAIEggFuBIIBagFoAHYATnWjJ1yaEMM4W2zU3z9S6x3w4I4b\njWnAsfpksWKaOd8AAAGOmuubIQAABAMARzBFAiEAvTiRTJcRjaYUlst91CXp3lN6\nxKAuAsLtWlqEwpFiTCQCIAcDBZlC9F2qv3SIS6HxtR5I1+KEwWmP/FqswF6lhvzz\nAHYAfVkeEuF4KnscYWd8Xv340IdcFKBOlZ65Ay/ZDowuebgAAAGOmuua5QAABAMA\nRzBFAiBMFlnC7tcIpdaDWVKnoAv62p9wbhFv8zs3oEJ//P7gBQIhAJCfZcNbs4vx\nGrKzbnumJhitXx3oNxNxb9QN7D2SfLTXAHYA5tIxY0B3jMEQQQbXcbnOwdJA9paE\nhvu6hzId/R43jlAAAAGOmuua9wAABAMARzBFAiAFx41E0LUPkH22N+wL4Vhs2uLW\nwQyut8F1sWDjkA6dZwIhAKl4rg1i81k/1fZWiAiE2oCNEI83R8fCxpnrR4IUyDAm\nMA0GCSqGSIb3DQEBCwUAA4IBAQBRvtmPzZGhtkZlXtyx3Ehv28TmR3GM6ZtZKUVv\nd6sX6PfeDyUiTDYi5E3rt2jIXXbDMYRkfvVpttDoB16qYcbOUtzrtm+KExucoEuk\nTRBDSvP6UXts5ZK7o99OSJNj/HlhDk5Es8/U5np6wMktgyJheOOgbTY9ESfd+HlX\nEVzit0HowmUx/JqgrXTjz8HCY3jv0qnXzKRhMJbpSHumNPT3SkmjDvFpKLGM3Iuc\nIALNLWNmNPgb4NG/KeTNG5DiUQqh+DD4co700y9mBHlHcy7/dTfUHffriuewywDN\nWcOjwp2gUUNGe3hQ6wn+xgzAFW72pm4Po/gLTAAquWkwltuM\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "not_after": "2025-04-30T23:59:59Z",
                "not_before": "2024-04-01T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "18160383466674793335714870580784278980",
                "sha1_fingerprint": "6c7cbbf15a5fca539f1811afece60f202c697cc4",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.ap-southeast-1.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "02f0b3f30424129b8a14276375b6aebec81a5e17",
            "url": "https://oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:ap-southeast-1:793209430381:log-group:/aws/eks/eks-karpenter/cluster",
            "id": "/aws/eks/eks-karpenter/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/eks-karpenter/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/eks-karpenter/cluster",
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "Name": "/aws/eks/eks-karpenter/cluster",
              "karpenter.sh/discovery": "eks-karpenter"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_ec2_tag",
      "name": "cluster_primary_security_group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "karpenter.sh/discovery",
          "schema_version": 0,
          "attributes": {
            "id": "sg-0bfaabc6d2b1a35fa,karpenter.sh/discovery",
            "key": "karpenter.sh/discovery",
            "resource_id": "sg-0bfaabc6d2b1a35fa",
            "value": "eks-karpenter"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_access_entry",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster_creator",
          "schema_version": 0,
          "attributes": {
            "access_entry_arn": "arn:aws:eks:ap-southeast-1:793209430381:access-entry/eks-karpenter/role/793209430381/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/e8c80ca3-3e9f-4fb9-501d-a6cda3b78eae",
            "cluster_name": "eks-karpenter",
            "created_at": "2024-06-15T00:22:48Z",
            "id": "eks-karpenter:arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b",
            "kubernetes_groups": [],
            "modified_at": "2024-06-15T00:22:48Z",
            "principal_arn": "arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b",
            "tags": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "timeouts": null,
            "type": "STANDARD",
            "user_name": "arn:aws:sts::793209430381:assumed-role/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/{{SessionName}}"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_access_policy_association",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster_creator_admin",
          "schema_version": 0,
          "attributes": {
            "access_scope": [
              {
                "namespaces": [],
                "type": "cluster"
              }
            ],
            "associated_at": "2024-06-15 00:22:49.499 +0000 UTC",
            "cluster_name": "eks-karpenter",
            "id": "eks-karpenter#arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "modified_at": "2024-06-15 00:22:49.499 +0000 UTC",
            "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "principal_arn": "arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:ap-southeast-1:793209430381:cluster/eks-karpenter",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZmhKdHgwMTh3djB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBMk1UVXdNREUwTVRoYUZ3MHpOREEyTVRNd01ERTVNVGhhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM0bGZQMTBUV203VE9KQkVDMThGV3M3VmErTkExMDkvQU56Y1ZtbldiNitxazZLVWQ0UWRlRHFGejgKLzJtSFlDcytkalJ5OWdmTjVNZ1FHbkl2RjhyZE5Rb29qUzFlZ1czZHBnYkY5bjdIUjVIRFJjUUVST2VpOThXKwpjaUdKYSsxQ1ZxZ0lsamxhMnhsKy8xL1FmbGRNOVc3QzZxLzRnZ1RsS2FIZnhGaGFkREIwS2dCVkxYNW4rMjUxCjYwa2p6ZGVvM1VZWk5WaUtkS05Nd3JhejcvcWNyRUNjSTVmUGVvTmFNN1FOWlFSN3BNQVVnY0NEVXJXd21GRWcKZUZsV1lGSDVZMHEwZUhNYVJERm1UMVowVXdXTnVYQkZDSzd1QVVVMDcvRVdnU1FNMjhwMGpPQ2kzd0FFdTFDWQpJUmlYcVRObXAxMVRWYmR5QUJVU0gxMHJEU1h2QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRdkprcE9XQXR5Qi9CMmFJaXhKQlB0V0l2eWZqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ013ZXNwNHI3UgpSTUl2dFJ6bVNUYW1Ibi8rSVFSWnFGSVc4dmtYdGdwRlVvRHllSGZ4blNidW9ObFd6QStSZzY3SkpvYm5QR3Q3ClpXQVdDS0ZHbVVlSFlRTVNzc2RuZTV6ek1ZSVJTY3Y1eW9JL2xKSEcxbTVFNzA0Z2Fnalp3aDNWd0tzNk84VVIKa1h4NDJQUjM0OWlGYUZUY2JjYThCbk94VzhicThkbEJSOUdkbGM3SFlRS3IzREpmR0NQWldOVTZIbnNSLzF1NgpuMkF5YzB6bk9BTWV0WkozMFhoZ04yTDRDUGVCNERtTUFVajRVVTB6aW9Hc2VJcUhyQ0h6Vmw5ZlZYQis3dG5YCmhnUXVJeVhTcjZqblpEYUtHQU52ZE9lSjZ6aXIvQ1pSandKTHU5bXZYc3lTNjR6RjlyTzNYWEl1UVFOeDR3eWoKVTErWW9GWUdiZFdFCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-06-15 00:15:15.081 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:ap-southeast-1:793209430381:key/4642a46e-d529-4380-8692-b0f24ef7e552"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://8D344D945A4B14661C93EAD315517536.gr7.ap-southeast-1.eks.amazonaws.com",
            "id": "eks-karpenter",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "eks-karpenter",
            "outpost_config": [],
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::793209430381:role/eks-karpenter-cluster-20240615001448487300000002",
            "status": "ACTIVE",
            "tags": {
              "karpenter.sh/discovery": "eks-karpenter",
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "karpenter.sh/discovery": "eks-karpenter",
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "version": "1.29",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0bfaabc6d2b1a35fa",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0dde8d3bbb3b7c48f"
                ],
                "subnet_ids": [
                  "subnet-008ee45c040760f01",
                  "subnet-0870db52464bc8e5a",
                  "subnet-0c89a6236d81ebeb6"
                ],
                "vpc_id": "vpc-0045450fd1200b1a6"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::793209430381:oidc-provider/oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::793209430381:oidc-provider/oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536",
            "tags": {
              "Name": "eks-karpenter-eks-irsa",
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "Name": "eks-karpenter-eks-irsa",
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::793209430381:policy/eks-karpenter-cluster-ClusterEncryption20240615001512670100000011",
            "attachment_count": 1,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::793209430381:policy/eks-karpenter-cluster-ClusterEncryption20240615001512670100000011",
            "name": "eks-karpenter-cluster-ClusterEncryption20240615001512670100000011",
            "name_prefix": "eks-karpenter-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:ap-southeast-1:793209430381:key/4642a46e-d529-4380-8692-b0f24ef7e552\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA3RLXXMFWRIBPQD3VZ",
            "tags": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "karpenter.sh/discovery": "eks-karpenter"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::793209430381:role/eks-karpenter-cluster-20240615001448487300000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-06-15T00:14:49Z",
            "description": "",
            "force_detach_policies": true,
            "id": "eks-karpenter-cluster-20240615001448487300000002",
            "inline_policy": [
              {
                "name": "eks-karpenter-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::793209430381:policy/eks-karpenter-cluster-ClusterEncryption20240615001512670100000011",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "eks-karpenter-cluster-20240615001448487300000002",
            "name_prefix": "eks-karpenter-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "unique_id": "AROA3RLXXMFWXRY2IV6IJ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter-cluster-20240615001448487300000002-20240615001513937500000012",
            "policy_arn": "arn:aws:iam::793209430381:policy/eks-karpenter-cluster-ClusterEncryption20240615001512670100000011",
            "role": "eks-karpenter-cluster-20240615001448487300000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter-cluster-20240615001448487300000002-2024061500145231900000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "eks-karpenter-cluster-20240615001448487300000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "eks-karpenter-cluster-20240615001448487300000002-2024061500145228860000000a",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "eks-karpenter-cluster-20240615001448487300000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:security-group/sg-0dde8d3bbb3b7c48f",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0dde8d3bbb3b7c48f",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-099847809f336744d"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "eks-karpenter-cluster-2024061500150114570000000e",
            "name_prefix": "eks-karpenter-cluster-",
            "owner_id": "793209430381",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-karpenter-cluster",
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "Name": "eks-karpenter-cluster",
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:security-group/sg-099847809f336744d",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-099847809f336744d",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0dde8d3bbb3b7c48f"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0dde8d3bbb3b7c48f"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0dde8d3bbb3b7c48f"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0dde8d3bbb3b7c48f"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0dde8d3bbb3b7c48f"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0dde8d3bbb3b7c48f"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "eks-karpenter-node-2024061500150116430000000f",
            "name_prefix": "eks-karpenter-node-",
            "owner_id": "793209430381",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-karpenter-node",
              "karpenter.sh/discovery": "eks-karpenter",
              "kubernetes.io/cluster/eks-karpenter": "owned"
            },
            "tags_all": {
              "Name": "eks-karpenter-node",
              "karpenter.sh/discovery": "eks-karpenter",
              "kubernetes.io/cluster/eks-karpenter": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-2414438158",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0dde8d3bbb3b7c48f",
            "security_group_rule_id": "sgr-007bb06326c2f7643",
            "self": false,
            "source_security_group_id": "sg-099847809f336744d",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-2637969529",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-0a3048b6fc39afcbf",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-1643163179",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-0662d503dc1d940ac",
            "self": false,
            "source_security_group_id": "sg-0dde8d3bbb3b7c48f",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-3803452410",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-0a66b984773379c7f",
            "self": false,
            "source_security_group_id": "sg-0dde8d3bbb3b7c48f",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-737571948",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-09572ef9bbb6e3005",
            "self": false,
            "source_security_group_id": "sg-0dde8d3bbb3b7c48f",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-950683725",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-034294755cac3e271",
            "self": false,
            "source_security_group_id": "sg-0dde8d3bbb3b7c48f",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-1544256390",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-06a026fcc5c51dae9",
            "self": false,
            "source_security_group_id": "sg-0dde8d3bbb3b7c48f",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-1948351583",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-00150a06179c1b635",
            "self": false,
            "source_security_group_id": "sg-0dde8d3bbb3b7c48f",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-2395178643",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-0c407b14fbba2056d",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-1988855437",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-024787c9938282bcf",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-3537118562",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-099847809f336744d",
            "security_group_rule_id": "sgr-0a26d0f7d2ef32ebe",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-06-15T00:23:18Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZmhKdHgwMTh3djB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBMk1UVXdNREUwTVRoYUZ3MHpOREEyTVRNd01ERTVNVGhhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM0bGZQMTBUV203VE9KQkVDMThGV3M3VmErTkExMDkvQU56Y1ZtbldiNitxazZLVWQ0UWRlRHFGejgKLzJtSFlDcytkalJ5OWdmTjVNZ1FHbkl2RjhyZE5Rb29qUzFlZ1czZHBnYkY5bjdIUjVIRFJjUUVST2VpOThXKwpjaUdKYSsxQ1ZxZ0lsamxhMnhsKy8xL1FmbGRNOVc3QzZxLzRnZ1RsS2FIZnhGaGFkREIwS2dCVkxYNW4rMjUxCjYwa2p6ZGVvM1VZWk5WaUtkS05Nd3JhejcvcWNyRUNjSTVmUGVvTmFNN1FOWlFSN3BNQVVnY0NEVXJXd21GRWcKZUZsV1lGSDVZMHEwZUhNYVJERm1UMVowVXdXTnVYQkZDSzd1QVVVMDcvRVdnU1FNMjhwMGpPQ2kzd0FFdTFDWQpJUmlYcVRObXAxMVRWYmR5QUJVU0gxMHJEU1h2QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRdkprcE9XQXR5Qi9CMmFJaXhKQlB0V0l2eWZqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ013ZXNwNHI3UgpSTUl2dFJ6bVNUYW1Ibi8rSVFSWnFGSVc4dmtYdGdwRlVvRHllSGZ4blNidW9ObFd6QStSZzY3SkpvYm5QR3Q3ClpXQVdDS0ZHbVVlSFlRTVNzc2RuZTV6ek1ZSVJTY3Y1eW9JL2xKSEcxbTVFNzA0Z2Fnalp3aDNWd0tzNk84VVIKa1h4NDJQUjM0OWlGYUZUY2JjYThCbk94VzhicThkbEJSOUdkbGM3SFlRS3IzREpmR0NQWldOVTZIbnNSLzF1NgpuMkF5YzB6bk9BTWV0WkozMFhoZ04yTDRDUGVCNERtTUFVajRVVTB6aW9Hc2VJcUhyQ0h6Vmw5ZlZYQis3dG5YCmhnUXVJeVhTcjZqblpEYUtHQU52ZE9lSjZ6aXIvQ1pSandKTHU5bXZYc3lTNjR6RjlyTzNYWEl1UVFOeDR3eWoKVTErWW9GWUdiZFdFCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://8D344D945A4B14661C93EAD315517536.gr7.ap-southeast-1.eks.amazonaws.com",
              "cluster_name": "eks-karpenter",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.29"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "793209430381",
            "arn": "arn:aws:sts::793209430381:assumed-role/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/duleendra",
            "id": "793209430381",
            "user_id": "AROA3RLXXMFW7OKQ7N53R:duleendra"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:ap-southeast-1:793209430381:nodegroup/eks-karpenter/karpenter-2024061500231863300000001c/26c80ca3-79d8-0c84-5043-522bfefa3747",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "eks-karpenter",
            "disk_size": 0,
            "force_update_version": null,
            "id": "eks-karpenter:karpenter-2024061500231863300000001c",
            "instance_types": [
              "t3.medium"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-03a47ec02b8115cd4",
                "name": "karpenter-2024061500231842410000001a",
                "version": "1"
              }
            ],
            "node_group_name": "karpenter-2024061500231863300000001c",
            "node_group_name_prefix": "karpenter-",
            "node_role_arn": "arn:aws:iam::793209430381:role/karpenter-eks-node-group-20240615001448486700000001",
            "release_version": "1.29.3-20240605",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-karpenter-2024061500231863300000001c-26c80ca3-79d8-0c84-5043-522bfefa3747"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 3,
                "min_size": 2
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-008ee45c040760f01",
              "subnet-0870db52464bc8e5a",
              "subnet-0c89a6236d81ebeb6"
            ],
            "tags": {
              "Name": "karpenter",
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "Name": "karpenter",
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.29"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::793209430381:role/karpenter-eks-node-group-20240615001448486700000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-06-15T00:14:49Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "karpenter-eks-node-group-20240615001448486700000001",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "karpenter-eks-node-group-20240615001448486700000001",
            "name_prefix": "karpenter-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "unique_id": "AROA3RLXXMFWYJLLCOYE5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "karpenter-eks-node-group-20240615001448486700000001-20240615001451233800000008",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "karpenter-eks-node-group-20240615001448486700000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "karpenter-eks-node-group-20240615001448486700000001-20240615001450915400000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "karpenter-eks-node-group-20240615001448486700000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "karpenter-eks-node-group-20240615001448486700000001-20240615001450908400000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "karpenter-eks-node-group-20240615001448486700000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:launch-template/lt-03a47ec02b8115cd4",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for karpenter EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-03a47ec02b8115cd4",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "karpenter-2024061500231842410000001a",
            "name_prefix": "karpenter-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "karpenter",
                  "karpenter.sh/discovery": "eks-karpenter"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "karpenter",
                  "karpenter.sh/discovery": "eks-karpenter"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "karpenter",
                  "karpenter.sh/discovery": "eks-karpenter"
                }
              }
            ],
            "tags": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "tags_all": {
              "karpenter.sh/discovery": "eks-karpenter"
            },
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-099847809f336744d"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"karpenter\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "955942406443066635",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "793209430381",
            "arn": "arn:aws:sts::793209430381:assumed-role/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/duleendra",
            "id": "793209430381",
            "user_id": "AROA3RLXXMFW7OKQ7N53R:duleendra"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3078149261",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::793209430381:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::793209430381:role/eks-karpenter-cluster-20240615001448487300000002\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Default\",\"Effect\":\"Allow\",\"Action\":\"kms:*\",\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::793209430381:root\"}},{\"Sid\":\"KeyAdministration\",\"Effect\":\"Allow\",\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b\"}},{\"Sid\":\"KeyUsage\",\"Effect\":\"Allow\",\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::793209430381:role/eks-karpenter-cluster-20240615001448487300000002\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::793209430381:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::793209430381:role/eks-karpenter-cluster-20240615001448487300000002"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-southeast-1:793209430381:alias/eks/eks-karpenter",
            "id": "alias/eks/eks-karpenter",
            "name": "alias/eks/eks-karpenter",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:ap-southeast-1:793209430381:key/4642a46e-d529-4380-8692-b0f24ef7e552",
            "target_key_id": "4642a46e-d529-4380-8692-b0f24ef7e552"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-southeast-1:793209430381:key/4642a46e-d529-4380-8692-b0f24ef7e552",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "eks-karpenter cluster encryption key",
            "enable_key_rotation": true,
            "id": "4642a46e-d529-4380-8692-b0f24ef7e552",
            "is_enabled": true,
            "key_id": "4642a46e-d529-4380-8692-b0f24ef7e552",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::793209430381:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::793209430381:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::793209430381:role/eks-karpenter-cluster-20240615001448487300000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "rotation_period_in_days": 365,
            "tags": {
              "karpenter.sh/discovery": "eks-karpenter",
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "karpenter.sh/discovery": "eks-karpenter",
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.karpenter",
      "mode": "managed",
      "type": "helm_release",
      "name": "karpenter",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "karpenter",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "karpenter",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.34.6",
                "chart": "karpenter",
                "first_deployed": 1718410999,
                "last_deployed": 1718410999,
                "name": "karpenter",
                "namespace": "karpenter",
                "notes": "",
                "revision": 1,
                "values": "{\"controller\":{\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"2Gi\"},\"requests\":{\"cpu\":1,\"memory\":\"2Gi\"}}},\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::793209430381:role/KarpenterController-20240615002250406000000017\"}},\"settings\":{\"clusterEndpoint\":\"https://8D344D945A4B14661C93EAD315517536.gr7.ap-southeast-1.eks.amazonaws.com\",\"clusterName\":\"eks-karpenter\",\"interruptionQueue\":\"Karpenter-eks-karpenter\"}}",
                "version": "v0.34.6"
              }
            ],
            "name": "karpenter",
            "namespace": "karpenter",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://public.ecr.aws/karpenter",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": true,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "settings:\n  clusterName: eks-karpenter\n  clusterEndpoint: https://8D344D945A4B14661C93EAD315517536.gr7.ap-southeast-1.eks.amazonaws.com\n  interruptionQueue: Karpenter-eks-karpenter\nserviceAccount:\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::793209430381:role/KarpenterController-20240615002250406000000017\ncontroller:\n  resources:\n    requests:\n      cpu: 1\n      memory: 2Gi\n    limits:\n      cpu: 1\n      memory: 2Gi\n"
            ],
            "verify": false,
            "version": "v0.34.6",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter-crds.data.http.yaml_file",
            "module.karpenter.module.karpenter-crds.kubectl_manifest.crd",
            "module.karpenter.module.karpenter-crds.null_resource.status_check",
            "module.karpenter.module.karpenter.aws_iam_role.controller",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.controller_assume_role",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "karpenter_nodeclass",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "default",
          "schema_version": 1,
          "attributes": {
            "api_version": "karpenter.k8s.aws/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/karpenter.k8s.aws/v1beta1/ec2nodeclasses/default",
            "ignore_fields": null,
            "kind": "EC2NodeClass",
            "live_manifest_incluster": "1205043128627f03531d393d464d4a504fdf5b2fb8a2e197dcc7f82f3c7ec9a7",
            "live_uid": "61ec2b57-76e4-4578-95b7-5ef90a60a645",
            "name": "default",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "61ec2b57-76e4-4578-95b7-5ef90a60a645",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: karpenter.k8s.aws/v1beta1\nkind: EC2NodeClass\nmetadata:\n  name: default\nspec:\n  # required, resolves a default ami and userdata\n  amiFamily: Bottlerocket\n\n  # required, discovers subnets to attach to instances\n  subnetSelectorTerms:\n    - \"tags\":\n        \"kubernetes.io/role/internal-elb\": \"1\"\n    \n\n  # required, discovers security groups to attach to instances\n  securityGroupSelectorTerms:\n    - \"id\": \"sg-0bfaabc6d2b1a35fa\"\n    \n\n  # required, IAM role to use for the node identity\n  role: eks-karpenter-workers\n\n  # optional, discovers amis to override the amiFamily's default\n  \n\n  # optional, overrides autogenerated userdata with a merge semantic\n  \n\n  # optional, propagates tags to underlying EC2 resources\n  \n  tags:\n    \"eks:cluster-name\": \"eks-karpenter\"\n    \"karpenter.sh/discovery\": \"eks-karpenter\"\n    \n  \n\n  # optional, configures IMDS for the instance, defaults to https://karpenter.sh/docs/concepts/nodeclasses/#specmetadataoptions\n  \n  metadataOptions:\n    \"httpEndpoint\": \"enabled\"\n    \"httpProtocolIPv6\": \"disabled\"\n    \"httpPutResponseHopLimit\": 1\n    \"httpTokens\": \"required\"\n    \n  \n\n  # optional, configures storage devices for the instance\n\n  blockDeviceMappings:\n    - \"deviceName\": \"/dev/xvda\"\n      \"ebs\":\n        \"deleteOnTermination\": true\n        \"encrypted\": true\n        \"kmsKeyID\": null\n        \"volumeSize\": \"5Gi\"\n        \"volumeType\": \"gp3\"\n    - \"deviceName\": \"/dev/xvdb\"\n      \"ebs\":\n        \"deleteOnTermination\": true\n        \"encrypted\": true\n        \"kmsKeyID\": null\n        \"volumeSize\": \"50Gi\"\n        \"volumeType\": \"gp3\"\n    \n  \n",
            "yaml_body_parsed": "apiVersion: karpenter.k8s.aws/v1beta1\nkind: EC2NodeClass\nmetadata:\n  name: default\nspec:\n  amiFamily: Bottlerocket\n  blockDeviceMappings:\n  - deviceName: /dev/xvda\n    ebs:\n      deleteOnTermination: true\n      encrypted: true\n      kmsKeyID: null\n      volumeSize: 5Gi\n      volumeType: gp3\n  - deviceName: /dev/xvdb\n    ebs:\n      deleteOnTermination: true\n      encrypted: true\n      kmsKeyID: null\n      volumeSize: 50Gi\n      volumeType: gp3\n  metadataOptions:\n    httpEndpoint: enabled\n    httpProtocolIPv6: disabled\n    httpPutResponseHopLimit: 1\n    httpTokens: required\n  role: eks-karpenter-workers\n  securityGroupSelectorTerms:\n  - id: sg-0bfaabc6d2b1a35fa\n  subnetSelectorTerms:\n  - tags:\n      kubernetes.io/role/internal-elb: \"1\"\n  tags:\n    eks:cluster-name: eks-karpenter\n    karpenter.sh/discovery: eks-karpenter\n",
            "yaml_incluster": "1205043128627f03531d393d464d4a504fdf5b2fb8a2e197dcc7f82f3c7ec9a7"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.karpenter.module.karpenter-crds.data.http.yaml_file",
            "module.karpenter.module.karpenter-crds.kubectl_manifest.crd",
            "module.karpenter.module.karpenter-crds.null_resource.status_check"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "karpenter_nodepool",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "default",
          "schema_version": 1,
          "attributes": {
            "api_version": "karpenter.sh/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/karpenter.sh/v1beta1/nodepools/default",
            "ignore_fields": null,
            "kind": "NodePool",
            "live_manifest_incluster": "a3d5f798381481b305ce94658588e534909af3f9024ed91507950a7c7c6ed687",
            "live_uid": "94a793d4-dc5a-4eed-af03-bc766aa7c9c8",
            "name": "default",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "94a793d4-dc5a-4eed-af03-bc766aa7c9c8",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: karpenter.sh/v1beta1\nkind: NodePool\nmetadata:\n  name: default\nspec:\n  # Template section that describes how to template out NodeClaim resources that Karpenter will provision\n  # Karpenter will consider this template to be the minimum requirements needed to provision a Node using this NodePool\n  # It will overlay this NodePool with Pods that need to schedule to further constrain the NodeClaims\n  # Karpenter will provision to launch new Nodes for the cluster\n  template:\n    metadata:\n      # Labels are arbitrary key-values that are applied to all nodes\n      \n      # Annotations are arbitrary key-values that are applied to all nodes\n      \n    spec:\n      # References the Cloud Provider's NodeClass resource, see your cloud provider specific documentation\n      nodeClassRef:\n        name: default\n\n      # Provisioned nodes will have these taints\n      # Taints may prevent pods from scheduling if they are not tolerated by the pod.\n      \n\n      # Provisioned nodes will have these taints, but pods do not need to tolerate these taints to be provisioned by this\n      # NodePool. These taints are expected to be temporary and some other entity (e.g. a DaemonSet) is responsible for\n      # removing the taint after it has finished initializing the node.\n      \n\n\n      # Requirements that constrain the parameters of provisioned nodes.\n      # These requirements are combined with pod.spec.topologySpreadConstraints, pod.spec.affinity.nodeAffinity, pod.spec.affinity.podAffinity, and pod.spec.nodeSelector rules.\n      # Operators { In, NotIn, Exists, DoesNotExist, Gt, and Lt } are supported.\n      # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#operators\n      requirements:\n        - key: \"karpenter.k8s.aws/instance-category\"\n          operator: \"In\"\n          values:\n          - \"m\"\n        - key: \"karpenter.k8s.aws/instance-cpu\"\n          operator: \"In\"\n          values:\n          - \"2\"\n        - key: \"karpenter.k8s.aws/instance-generation\"\n          operator: \"In\"\n          values:\n          - \"1\"\n        - key: \"karpenter.sh/capacity-type\"\n          operator: \"In\"\n          values:\n          - \"on-demand\"\n        - key: \"kubernetes.io/arch\"\n          operator: \"In\"\n          values:\n          - \"amd64\"\n        - key: \"kubernetes.io/os\"\n          operator: \"In\"\n          values:\n          - \"linux\"\n        \n\n      # Karpenter provides the ability to specify a few additional Kubelet args.\n      # These are all optional and provide support for additional customization and use cases.\n      # kubelet:\n      #   clusterDNS: [\"10.0.1.100\"]\n      #   containerRuntime: containerd\n      #   systemReserved:\n      #     cpu: 100m\n      #     memory: 100Mi\n      #     ephemeral-storage: 1Gi\n      #   kubeReserved:\n      #     cpu: 200m\n      #     memory: 100Mi\n      #     ephemeral-storage: 3Gi\n      #   evictionHard:\n      #     memory.available: 5%\n      #     nodefs.available: 10%\n      #     nodefs.inodesFree: 10%\n      #   evictionSoft:\n      #     memory.available: 500Mi\n      #     nodefs.available: 15%\n      #     nodefs.inodesFree: 15%\n      #   evictionSoftGracePeriod:\n      #     memory.available: 1m\n      #     nodefs.available: 1m30s\n      #     nodefs.inodesFree: 2m\n      #   evictionMaxPodGracePeriod: 60\n      #   imageGCHighThresholdPercent: 85\n      #   imageGCLowThresholdPercent: 80\n      #   cpuCFSQuota: true\n      #   podsPerCore: 2\n      #   maxPods: 20\n\n  # Disruption section which describes the ways in which Karpenter can disrupt and replace Nodes\n  # Configuration in this section constrains how aggressive Karpenter can be with performing operations\n  # like rolling Nodes due to them hitting their maximum lifetime (expiry) or scaling down nodes to reduce cluster cost\n  disruption:\n    # Describes which types of Nodes Karpenter should consider for consolidation\n    # If using 'WhenUnderutilized', Karpenter will consider all nodes for consolidation and attempt to remove or replace Nodes when it discovers that the Node is underutilized and could be changed to reduce cost\n    # If using `WhenEmpty`, Karpenter will only consider nodes for consolidation that contain no workload pods. Defaults to 'WhenUnderutilized'\n    consolidationPolicy: WhenUnderutilized\n\n    # The amount of time Karpenter should wait after discovering a consolidation decision\n    # This value can currently only be set when the consolidationPolicy is 'WhenEmpty'\n    # You can choose to disable consolidation entirely by setting the string value 'Never' here\n    \n\n    # The amount of time a Node can live on the cluster before being removed\n    # Avoiding long-running Nodes helps to reduce security vulnerabilities as well as to reduce the chance of issues that can plague Nodes with long uptimes such as file fragmentation or memory leaks from system processes\n    # You can choose to disable expiration entirely by setting the string value 'Never' here. Defaults to 720h (30 days)\n    expireAfter: 168h\n\n    # Budgets control the speed Karpenter can scale down nodes.\n    # Karpenter will respect the minimum of the currently active budgets, and will round up\n    # when considering percentages. Duration and Schedule must be set together.\n    budgets:\n    - nodes: \"10%\"\n    \n\n  # Resource limits constrain the total size of the cluster.\n  # Limits prevent Karpenter from creating new instances once the limit is exceeded.\n  limits:\n    cpu: \"1000\"\n    memory: 1000Gi\n\n  # Priority given to the NodePool when the scheduler considers which NodePool\n  # to select. Higher weights indicate higher priority when comparing NodePools.\n  # Specifying no weight is equivalent to specifying a weight of 0. Defaults to 10\n  weight: 10\n",
            "yaml_body_parsed": "apiVersion: karpenter.sh/v1beta1\nkind: NodePool\nmetadata:\n  name: default\nspec:\n  disruption:\n    budgets:\n    - nodes: 10%\n    consolidationPolicy: WhenUnderutilized\n    expireAfter: 168h\n  limits:\n    cpu: \"1000\"\n    memory: 1000Gi\n  template:\n    metadata: null\n    spec:\n      nodeClassRef:\n        name: default\n      requirements:\n      - key: karpenter.k8s.aws/instance-category\n        operator: In\n        values:\n        - m\n      - key: karpenter.k8s.aws/instance-cpu\n        operator: In\n        values:\n        - \"2\"\n      - key: karpenter.k8s.aws/instance-generation\n        operator: In\n        values:\n        - \"1\"\n      - key: karpenter.sh/capacity-type\n        operator: In\n        values:\n        - on-demand\n      - key: kubernetes.io/arch\n        operator: In\n        values:\n        - amd64\n      - key: kubernetes.io/os\n        operator: In\n        values:\n        - linux\n  weight: 10\n",
            "yaml_incluster": "a3d5f798381481b305ce94658588e534909af3f9024ed91507950a7c7c6ed687"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.karpenter.module.karpenter-crds.data.http.yaml_file",
            "module.karpenter.module.karpenter-crds.kubectl_manifest.crd",
            "module.karpenter.module.karpenter-crds.null_resource.status_check"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "793209430381",
            "arn": "arn:aws:sts::793209430381:assumed-role/AWSReservedSSO_AWSAdministratorAccess_8714ae55d666de9b/duleendra",
            "id": "793209430381",
            "user_id": "AROA3RLXXMFW7OKQ7N53R:duleendra"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3098089354",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowScopedEC2InstanceActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RunInstances\",\n        \"ec2:CreateFleet\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*::snapshot/*\",\n        \"arn:aws:ec2:*::image/*\",\n        \"arn:aws:ec2:*:*:subnet/*\",\n        \"arn:aws:ec2:*:*:spot-instances-request/*\",\n        \"arn:aws:ec2:*:*:security-group/*\",\n        \"arn:aws:ec2:*:*:launch-template/*\"\n      ]\n    },\n    {\n      \"Sid\": \"AllowScopedEC2InstanceActionsWithTags\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RunInstances\",\n        \"ec2:CreateLaunchTemplate\",\n        \"ec2:CreateFleet\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:spot-instances-request/*\",\n        \"arn:aws:ec2:*:*:network-interface/*\",\n        \"arn:aws:ec2:*:*:launch-template/*\",\n        \"arn:aws:ec2:*:*:instance/*\",\n        \"arn:aws:ec2:*:*:fleet/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\": \"owned\"\n        },\n        \"StringLike\": {\n          \"aws:RequestTag/karpenter.sh/nodepool\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowScopedResourceCreationTagging\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:spot-instances-request/*\",\n        \"arn:aws:ec2:*:*:network-interface/*\",\n        \"arn:aws:ec2:*:*:launch-template/*\",\n        \"arn:aws:ec2:*:*:instance/*\",\n        \"arn:aws:ec2:*:*:fleet/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\": \"owned\",\n          \"ec2:CreateAction\": [\n            \"RunInstances\",\n            \"CreateFleet\",\n            \"CreateLaunchTemplate\"\n          ]\n        },\n        \"StringLike\": {\n          \"aws:RequestTag/karpenter.sh/nodepool\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowScopedResourceTagging\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n      \"Condition\": {\n        \"ForAllValues:StringEquals\": {\n          \"aws:TagKeys\": [\n            \"karpenter.sh/nodeclaim\",\n            \"Name\"\n          ]\n        },\n        \"StringEquals\": {\n          \"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\": \"owned\"\n        },\n        \"StringLike\": {\n          \"aws:ResourceTag/karpenter.sh/nodepool\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowScopedDeletion\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:TerminateInstances\",\n        \"ec2:DeleteLaunchTemplate\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:launch-template/*\",\n        \"arn:aws:ec2:*:*:instance/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\": \"owned\"\n        },\n        \"StringLike\": {\n          \"aws:ResourceTag/karpenter.sh/nodepool\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowRegionalReadActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSpotPriceHistory\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeLaunchTemplates\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeInstanceTypes\",\n        \"ec2:DescribeInstanceTypeOfferings\",\n        \"ec2:DescribeImages\",\n        \"ec2:DescribeAvailabilityZones\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestedRegion\": \"ap-southeast-1\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowSSMReadActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:GetParameter\",\n      \"Resource\": \"arn:aws:ssm:ap-southeast-1::parameter/aws/service/*\"\n    },\n    {\n      \"Sid\": \"AllowPricingReadActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"pricing:GetProducts\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"AllowInterruptionQueueActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sqs:ReceiveMessage\",\n        \"sqs:GetQueueUrl\",\n        \"sqs:GetQueueAttributes\",\n        \"sqs:DeleteMessage\"\n      ],\n      \"Resource\": \"arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter\"\n    },\n    {\n      \"Sid\": \"AllowPassingInstanceRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:PassRole\",\n      \"Resource\": \"arn:aws:iam::793209430381:role/eks-karpenter-workers\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:PassedToService\": \"ec2.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowScopedInstanceProfileCreationActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateInstanceProfile\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\": \"owned\",\n          \"aws:RequestTag/topology.kubernetes.io/region\": \"ap-southeast-1\"\n        },\n        \"StringLike\": {\n          \"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowScopedInstanceProfileTagActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:TagInstanceProfile\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\": \"owned\",\n          \"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\": \"owned\",\n          \"aws:ResourceTag/topology.kubernetes.io/region\": \"ap-southeast-1\"\n        },\n        \"StringLike\": {\n          \"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass\": \"*\",\n          \"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowScopedInstanceProfileActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:RemoveRoleFromInstanceProfile\",\n        \"iam:DeleteInstanceProfile\",\n        \"iam:AddRoleToInstanceProfile\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\": \"owned\",\n          \"aws:ResourceTag/topology.kubernetes.io/region\": \"ap-southeast-1\"\n        },\n        \"StringLike\": {\n          \"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass\": \"*\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowInstanceProfileReadActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:GetInstanceProfile\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"AllowAPIServerEndpointDiscovery\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"eks:DescribeCluster\",\n      \"Resource\": \"arn:aws:eks:ap-southeast-1:793209430381:cluster/eks-karpenter\"\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AllowScopedEC2InstanceActions\",\"Effect\":\"Allow\",\"Action\":[\"ec2:RunInstances\",\"ec2:CreateFleet\"],\"Resource\":[\"arn:aws:ec2:*::snapshot/*\",\"arn:aws:ec2:*::image/*\",\"arn:aws:ec2:*:*:subnet/*\",\"arn:aws:ec2:*:*:spot-instances-request/*\",\"arn:aws:ec2:*:*:security-group/*\",\"arn:aws:ec2:*:*:launch-template/*\"]},{\"Sid\":\"AllowScopedEC2InstanceActionsWithTags\",\"Effect\":\"Allow\",\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:spot-instances-request/*\",\"arn:aws:ec2:*:*:network-interface/*\",\"arn:aws:ec2:*:*:launch-template/*\",\"arn:aws:ec2:*:*:instance/*\",\"arn:aws:ec2:*:*:fleet/*\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\"},\"StringLike\":{\"aws:RequestTag/karpenter.sh/nodepool\":\"*\"}}},{\"Sid\":\"AllowScopedResourceCreationTagging\",\"Effect\":\"Allow\",\"Action\":\"ec2:CreateTags\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:spot-instances-request/*\",\"arn:aws:ec2:*:*:network-interface/*\",\"arn:aws:ec2:*:*:launch-template/*\",\"arn:aws:ec2:*:*:instance/*\",\"arn:aws:ec2:*:*:fleet/*\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"ec2:CreateAction\":[\"RunInstances\",\"CreateFleet\",\"CreateLaunchTemplate\"]},\"StringLike\":{\"aws:RequestTag/karpenter.sh/nodepool\":\"*\"}}},{\"Sid\":\"AllowScopedResourceTagging\",\"Effect\":\"Allow\",\"Action\":\"ec2:CreateTags\",\"Resource\":\"arn:aws:ec2:*:*:instance/*\",\"Condition\":{\"ForAllValues:StringEquals\":{\"aws:TagKeys\":[\"karpenter.sh/nodeclaim\",\"Name\"]},\"StringEquals\":{\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\"},\"StringLike\":{\"aws:ResourceTag/karpenter.sh/nodepool\":\"*\"}}},{\"Sid\":\"AllowScopedDeletion\",\"Effect\":\"Allow\",\"Action\":[\"ec2:TerminateInstances\",\"ec2:DeleteLaunchTemplate\"],\"Resource\":[\"arn:aws:ec2:*:*:launch-template/*\",\"arn:aws:ec2:*:*:instance/*\"],\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\"},\"StringLike\":{\"aws:ResourceTag/karpenter.sh/nodepool\":\"*\"}}},{\"Sid\":\"AllowRegionalReadActions\",\"Effect\":\"Allow\",\"Action\":[\"ec2:DescribeSubnets\",\"ec2:DescribeSpotPriceHistory\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeLaunchTemplates\",\"ec2:DescribeInstances\",\"ec2:DescribeInstanceTypes\",\"ec2:DescribeInstanceTypeOfferings\",\"ec2:DescribeImages\",\"ec2:DescribeAvailabilityZones\"],\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestedRegion\":\"ap-southeast-1\"}}},{\"Sid\":\"AllowSSMReadActions\",\"Effect\":\"Allow\",\"Action\":\"ssm:GetParameter\",\"Resource\":\"arn:aws:ssm:ap-southeast-1::parameter/aws/service/*\"},{\"Sid\":\"AllowPricingReadActions\",\"Effect\":\"Allow\",\"Action\":\"pricing:GetProducts\",\"Resource\":\"*\"},{\"Sid\":\"AllowInterruptionQueueActions\",\"Effect\":\"Allow\",\"Action\":[\"sqs:ReceiveMessage\",\"sqs:GetQueueUrl\",\"sqs:GetQueueAttributes\",\"sqs:DeleteMessage\"],\"Resource\":\"arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter\"},{\"Sid\":\"AllowPassingInstanceRole\",\"Effect\":\"Allow\",\"Action\":\"iam:PassRole\",\"Resource\":\"arn:aws:iam::793209430381:role/eks-karpenter-workers\",\"Condition\":{\"StringEquals\":{\"iam:PassedToService\":\"ec2.amazonaws.com\"}}},{\"Sid\":\"AllowScopedInstanceProfileCreationActions\",\"Effect\":\"Allow\",\"Action\":\"iam:CreateInstanceProfile\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:RequestTag/topology.kubernetes.io/region\":\"ap-southeast-1\"},\"StringLike\":{\"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass\":\"*\"}}},{\"Sid\":\"AllowScopedInstanceProfileTagActions\",\"Effect\":\"Allow\",\"Action\":\"iam:TagInstanceProfile\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:ResourceTag/topology.kubernetes.io/region\":\"ap-southeast-1\"},\"StringLike\":{\"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass\":\"*\",\"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass\":\"*\"}}},{\"Sid\":\"AllowScopedInstanceProfileActions\",\"Effect\":\"Allow\",\"Action\":[\"iam:RemoveRoleFromInstanceProfile\",\"iam:DeleteInstanceProfile\",\"iam:AddRoleToInstanceProfile\"],\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:ResourceTag/topology.kubernetes.io/region\":\"ap-southeast-1\"},\"StringLike\":{\"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass\":\"*\"}}},{\"Sid\":\"AllowInstanceProfileReadActions\",\"Effect\":\"Allow\",\"Action\":\"iam:GetInstanceProfile\",\"Resource\":\"*\"},{\"Sid\":\"AllowAPIServerEndpointDiscovery\",\"Effect\":\"Allow\",\"Action\":\"eks:DescribeCluster\",\"Resource\":\"arn:aws:eks:ap-southeast-1:793209430381:cluster/eks-karpenter\"}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:CreateFleet",
                  "ec2:RunInstances"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:launch-template/*",
                  "arn:aws:ec2:*:*:security-group/*",
                  "arn:aws:ec2:*:*:spot-instances-request/*",
                  "arn:aws:ec2:*:*:subnet/*",
                  "arn:aws:ec2:*::image/*",
                  "arn:aws:ec2:*::snapshot/*"
                ],
                "sid": "AllowScopedEC2InstanceActions"
              },
              {
                "actions": [
                  "ec2:CreateFleet",
                  "ec2:CreateLaunchTemplate",
                  "ec2:RunInstances"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:RequestTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/karpenter.sh/nodepool"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:fleet/*",
                  "arn:aws:ec2:*:*:instance/*",
                  "arn:aws:ec2:*:*:launch-template/*",
                  "arn:aws:ec2:*:*:network-interface/*",
                  "arn:aws:ec2:*:*:spot-instances-request/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": "AllowScopedEC2InstanceActionsWithTags"
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "RunInstances",
                      "CreateFleet",
                      "CreateLaunchTemplate"
                    ],
                    "variable": "ec2:CreateAction"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:RequestTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/karpenter.sh/nodepool"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:fleet/*",
                  "arn:aws:ec2:*:*:instance/*",
                  "arn:aws:ec2:*:*:launch-template/*",
                  "arn:aws:ec2:*:*:network-interface/*",
                  "arn:aws:ec2:*:*:spot-instances-request/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": "AllowScopedResourceCreationTagging"
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "ForAllValues:StringEquals",
                    "values": [
                      "karpenter.sh/nodeclaim",
                      "Name"
                    ],
                    "variable": "aws:TagKeys"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:ResourceTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:ResourceTag/karpenter.sh/nodepool"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:instance/*"
                ],
                "sid": "AllowScopedResourceTagging"
              },
              {
                "actions": [
                  "ec2:DeleteLaunchTemplate",
                  "ec2:TerminateInstances"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:ResourceTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:ResourceTag/karpenter.sh/nodepool"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:instance/*",
                  "arn:aws:ec2:*:*:launch-template/*"
                ],
                "sid": "AllowScopedDeletion"
              },
              {
                "actions": [
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeImages",
                  "ec2:DescribeInstanceTypeOfferings",
                  "ec2:DescribeInstanceTypes",
                  "ec2:DescribeInstances",
                  "ec2:DescribeLaunchTemplates",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSpotPriceHistory",
                  "ec2:DescribeSubnets"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "ap-southeast-1"
                    ],
                    "variable": "aws:RequestedRegion"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AllowRegionalReadActions"
              },
              {
                "actions": [
                  "ssm:GetParameter"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ssm:ap-southeast-1::parameter/aws/service/*"
                ],
                "sid": "AllowSSMReadActions"
              },
              {
                "actions": [
                  "pricing:GetProducts"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AllowPricingReadActions"
              },
              {
                "actions": [
                  "sqs:DeleteMessage",
                  "sqs:GetQueueAttributes",
                  "sqs:GetQueueUrl",
                  "sqs:ReceiveMessage"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter"
                ],
                "sid": "AllowInterruptionQueueActions"
              },
              {
                "actions": [
                  "iam:PassRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "ec2.amazonaws.com"
                    ],
                    "variable": "iam:PassedToService"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:iam::793209430381:role/eks-karpenter-workers"
                ],
                "sid": "AllowPassingInstanceRole"
              },
              {
                "actions": [
                  "iam:CreateInstanceProfile"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "ap-southeast-1"
                    ],
                    "variable": "aws:RequestTag/topology.kubernetes.io/region"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:RequestTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/karpenter.k8s.aws/ec2nodeclass"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AllowScopedInstanceProfileCreationActions"
              },
              {
                "actions": [
                  "iam:TagInstanceProfile"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "ap-southeast-1"
                    ],
                    "variable": "aws:ResourceTag/topology.kubernetes.io/region"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:RequestTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:ResourceTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/karpenter.k8s.aws/ec2nodeclass"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AllowScopedInstanceProfileTagActions"
              },
              {
                "actions": [
                  "iam:AddRoleToInstanceProfile",
                  "iam:DeleteInstanceProfile",
                  "iam:RemoveRoleFromInstanceProfile"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "ap-southeast-1"
                    ],
                    "variable": "aws:ResourceTag/topology.kubernetes.io/region"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:ResourceTag/kubernetes.io/cluster/eks-karpenter"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AllowScopedInstanceProfileActions"
              },
              {
                "actions": [
                  "iam:GetInstanceProfile"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AllowInstanceProfileReadActions"
              },
              {
                "actions": [
                  "eks:DescribeCluster"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:eks:ap-southeast-1:793209430381:cluster/eks-karpenter"
                ],
                "sid": "AllowAPIServerEndpointDiscovery"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "controller_assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "49212595",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:TagSession\",\n        \"sts:AssumeRole\"\n      ],\n      \"Principal\": {\n        \"Service\": \"pods.eks.amazonaws.com\"\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::793209430381:oidc-provider/oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:sub\": \"system:serviceaccount:karpenter:karpenter\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}},{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Principal\":{\"Federated\":\"arn:aws:iam::793209430381:oidc-provider/oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536\"},\"Condition\":{\"StringEquals\":{\"oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:aud\":\"sts.amazonaws.com\",\"oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:sub\":\"system:serviceaccount:karpenter:karpenter\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole",
                  "sts:TagSession"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "pods.eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              },
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:karpenter:karpenter"
                    ],
                    "variable": "oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::793209430381:oidc-provider/oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "queue",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1767467572",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"SqsWrite\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sqs:SendMessage\",\n      \"Resource\": \"arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter\",\n      \"Principal\": {\n        \"Service\": [\n          \"sqs.amazonaws.com\",\n          \"events.amazonaws.com\"\n        ]\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"SqsWrite\",\"Effect\":\"Allow\",\"Action\":\"sqs:SendMessage\",\"Resource\":\"arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter\",\"Principal\":{\"Service\":[\"sqs.amazonaws.com\",\"events.amazonaws.com\"]}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sqs:SendMessage"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "events.amazonaws.com",
                      "sqs.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [
                  "arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter"
                ],
                "sid": "SqsWrite"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Asia Pacific (Singapore)",
            "endpoint": "ec2.ap-southeast-1.amazonaws.com",
            "id": "ap-southeast-1",
            "name": "ap-southeast-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_cloudwatch_event_rule",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "health_event",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:events:ap-southeast-1:793209430381:rule/KarpenterHealthEvent-20240615002250367700000013",
            "description": "Karpenter interrupt - AWS health event",
            "event_bus_name": "default",
            "event_pattern": "{\"detail-type\":[\"AWS Health Event\"],\"source\":[\"aws.health\"]}",
            "force_destroy": false,
            "id": "KarpenterHealthEvent-20240615002250367700000013",
            "is_enabled": true,
            "name": "KarpenterHealthEvent-20240615002250367700000013",
            "name_prefix": "KarpenterHealthEvent-",
            "role_arn": "",
            "schedule_expression": "",
            "state": "ENABLED",
            "tags": {
              "ClusterName": "eks-karpenter"
            },
            "tags_all": {
              "ClusterName": "eks-karpenter"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "instance_rebalance",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:events:ap-southeast-1:793209430381:rule/KarpenterInstanceRebalance-20240615002250367700000014",
            "description": "Karpenter interrupt - EC2 instance rebalance recommendation",
            "event_bus_name": "default",
            "event_pattern": "{\"detail-type\":[\"EC2 Instance Rebalance Recommendation\"],\"source\":[\"aws.ec2\"]}",
            "force_destroy": false,
            "id": "KarpenterInstanceRebalance-20240615002250367700000014",
            "is_enabled": true,
            "name": "KarpenterInstanceRebalance-20240615002250367700000014",
            "name_prefix": "KarpenterInstanceRebalance-",
            "role_arn": "",
            "schedule_expression": "",
            "state": "ENABLED",
            "tags": {
              "ClusterName": "eks-karpenter"
            },
            "tags_all": {
              "ClusterName": "eks-karpenter"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "instance_state_change",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:events:ap-southeast-1:793209430381:rule/KarpenterInstanceStateChange-20240615002250367700000015",
            "description": "Karpenter interrupt - EC2 instance state-change notification",
            "event_bus_name": "default",
            "event_pattern": "{\"detail-type\":[\"EC2 Instance State-change Notification\"],\"source\":[\"aws.ec2\"]}",
            "force_destroy": false,
            "id": "KarpenterInstanceStateChange-20240615002250367700000015",
            "is_enabled": true,
            "name": "KarpenterInstanceStateChange-20240615002250367700000015",
            "name_prefix": "KarpenterInstanceStateChange-",
            "role_arn": "",
            "schedule_expression": "",
            "state": "ENABLED",
            "tags": {
              "ClusterName": "eks-karpenter"
            },
            "tags_all": {
              "ClusterName": "eks-karpenter"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "spot_interrupt",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:events:ap-southeast-1:793209430381:rule/KarpenterSpotInterrupt-20240615002250367700000016",
            "description": "Karpenter interrupt - EC2 spot instance interruption warning",
            "event_bus_name": "default",
            "event_pattern": "{\"detail-type\":[\"EC2 Spot Instance Interruption Warning\"],\"source\":[\"aws.ec2\"]}",
            "force_destroy": false,
            "id": "KarpenterSpotInterrupt-20240615002250367700000016",
            "is_enabled": true,
            "name": "KarpenterSpotInterrupt-20240615002250367700000016",
            "name_prefix": "KarpenterSpotInterrupt-",
            "role_arn": "",
            "schedule_expression": "",
            "state": "ENABLED",
            "tags": {
              "ClusterName": "eks-karpenter"
            },
            "tags_all": {
              "ClusterName": "eks-karpenter"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_cloudwatch_event_target",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "health_event",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter",
            "batch_target": [],
            "dead_letter_config": [],
            "ecs_target": [],
            "event_bus_name": "default",
            "force_destroy": false,
            "http_target": [],
            "id": "KarpenterHealthEvent-20240615002250367700000013-KarpenterInterruptionQueueTarget",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "redshift_target": [],
            "retry_policy": [],
            "role_arn": "",
            "rule": "KarpenterHealthEvent-20240615002250367700000013",
            "run_command_targets": [],
            "sagemaker_pipeline_target": [],
            "sqs_target": [],
            "target_id": "KarpenterInterruptionQueueTarget"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_cloudwatch_event_rule.this",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "instance_rebalance",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter",
            "batch_target": [],
            "dead_letter_config": [],
            "ecs_target": [],
            "event_bus_name": "default",
            "force_destroy": false,
            "http_target": [],
            "id": "KarpenterInstanceRebalance-20240615002250367700000014-KarpenterInterruptionQueueTarget",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "redshift_target": [],
            "retry_policy": [],
            "role_arn": "",
            "rule": "KarpenterInstanceRebalance-20240615002250367700000014",
            "run_command_targets": [],
            "sagemaker_pipeline_target": [],
            "sqs_target": [],
            "target_id": "KarpenterInterruptionQueueTarget"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_cloudwatch_event_rule.this",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "instance_state_change",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter",
            "batch_target": [],
            "dead_letter_config": [],
            "ecs_target": [],
            "event_bus_name": "default",
            "force_destroy": false,
            "http_target": [],
            "id": "KarpenterInstanceStateChange-20240615002250367700000015-KarpenterInterruptionQueueTarget",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "redshift_target": [],
            "retry_policy": [],
            "role_arn": "",
            "rule": "KarpenterInstanceStateChange-20240615002250367700000015",
            "run_command_targets": [],
            "sagemaker_pipeline_target": [],
            "sqs_target": [],
            "target_id": "KarpenterInterruptionQueueTarget"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_cloudwatch_event_rule.this",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "spot_interrupt",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter",
            "batch_target": [],
            "dead_letter_config": [],
            "ecs_target": [],
            "event_bus_name": "default",
            "force_destroy": false,
            "http_target": [],
            "id": "KarpenterSpotInterrupt-20240615002250367700000016-KarpenterInterruptionQueueTarget",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "redshift_target": [],
            "retry_policy": [],
            "role_arn": "",
            "rule": "KarpenterSpotInterrupt-20240615002250367700000016",
            "run_command_targets": [],
            "sagemaker_pipeline_target": [],
            "sqs_target": [],
            "target_id": "KarpenterInterruptionQueueTarget"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_cloudwatch_event_rule.this",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_eks_access_entry",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "access_entry_arn": "arn:aws:eks:ap-southeast-1:793209430381:access-entry/eks-karpenter/role/793209430381/eks-karpenter-workers/48c80ca3-a5de-29ae-bfbf-9420bbf8d00c",
            "cluster_name": "eks-karpenter",
            "created_at": "2024-06-15T00:23:41Z",
            "id": "eks-karpenter:arn:aws:iam::793209430381:role/eks-karpenter-workers",
            "kubernetes_groups": [
              "system:nodes"
            ],
            "modified_at": "2024-06-15T00:23:41Z",
            "principal_arn": "arn:aws:iam::793209430381:role/eks-karpenter-workers",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "type": "EC2_LINUX",
            "user_name": "system:node:{{EC2PrivateDNSName}}"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_iam_role.node",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.karpenter.module.karpenter.aws_sqs_queue_policy.this",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.node_assume_role",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.queue",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::793209430381:policy/KarpenterController-20240615002315789500000018",
            "attachment_count": 1,
            "description": "Karpenter controller IAM policy",
            "id": "arn:aws:iam::793209430381:policy/KarpenterController-20240615002315789500000018",
            "name": "KarpenterController-20240615002315789500000018",
            "name_prefix": "KarpenterController-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateFleet\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*::snapshot/*\",\"arn:aws:ec2:*::image/*\",\"arn:aws:ec2:*:*:subnet/*\",\"arn:aws:ec2:*:*:spot-instances-request/*\",\"arn:aws:ec2:*:*:security-group/*\",\"arn:aws:ec2:*:*:launch-template/*\"],\"Sid\":\"AllowScopedEC2InstanceActions\"},{\"Action\":[\"ec2:RunInstances\",\"ec2:CreateLaunchTemplate\",\"ec2:CreateFleet\"],\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\"},\"StringLike\":{\"aws:RequestTag/karpenter.sh/nodepool\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:spot-instances-request/*\",\"arn:aws:ec2:*:*:network-interface/*\",\"arn:aws:ec2:*:*:launch-template/*\",\"arn:aws:ec2:*:*:instance/*\",\"arn:aws:ec2:*:*:fleet/*\"],\"Sid\":\"AllowScopedEC2InstanceActionsWithTags\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"ec2:CreateAction\":[\"RunInstances\",\"CreateFleet\",\"CreateLaunchTemplate\"]},\"StringLike\":{\"aws:RequestTag/karpenter.sh/nodepool\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:spot-instances-request/*\",\"arn:aws:ec2:*:*:network-interface/*\",\"arn:aws:ec2:*:*:launch-template/*\",\"arn:aws:ec2:*:*:instance/*\",\"arn:aws:ec2:*:*:fleet/*\"],\"Sid\":\"AllowScopedResourceCreationTagging\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"ForAllValues:StringEquals\":{\"aws:TagKeys\":[\"karpenter.sh/nodeclaim\",\"Name\"]},\"StringEquals\":{\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\"},\"StringLike\":{\"aws:ResourceTag/karpenter.sh/nodepool\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:instance/*\",\"Sid\":\"AllowScopedResourceTagging\"},{\"Action\":[\"ec2:TerminateInstances\",\"ec2:DeleteLaunchTemplate\"],\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\"},\"StringLike\":{\"aws:ResourceTag/karpenter.sh/nodepool\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:launch-template/*\",\"arn:aws:ec2:*:*:instance/*\"],\"Sid\":\"AllowScopedDeletion\"},{\"Action\":[\"ec2:DescribeSubnets\",\"ec2:DescribeSpotPriceHistory\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeLaunchTemplates\",\"ec2:DescribeInstances\",\"ec2:DescribeInstanceTypes\",\"ec2:DescribeInstanceTypeOfferings\",\"ec2:DescribeImages\",\"ec2:DescribeAvailabilityZones\"],\"Condition\":{\"StringEquals\":{\"aws:RequestedRegion\":\"ap-southeast-1\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AllowRegionalReadActions\"},{\"Action\":\"ssm:GetParameter\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ssm:ap-southeast-1::parameter/aws/service/*\",\"Sid\":\"AllowSSMReadActions\"},{\"Action\":\"pricing:GetProducts\",\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AllowPricingReadActions\"},{\"Action\":[\"sqs:ReceiveMessage\",\"sqs:GetQueueUrl\",\"sqs:GetQueueAttributes\",\"sqs:DeleteMessage\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter\",\"Sid\":\"AllowInterruptionQueueActions\"},{\"Action\":\"iam:PassRole\",\"Condition\":{\"StringEquals\":{\"iam:PassedToService\":\"ec2.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::793209430381:role/eks-karpenter-workers\",\"Sid\":\"AllowPassingInstanceRole\"},{\"Action\":\"iam:CreateInstanceProfile\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:RequestTag/topology.kubernetes.io/region\":\"ap-southeast-1\"},\"StringLike\":{\"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AllowScopedInstanceProfileCreationActions\"},{\"Action\":\"iam:TagInstanceProfile\",\"Condition\":{\"StringEquals\":{\"aws:RequestTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:ResourceTag/topology.kubernetes.io/region\":\"ap-southeast-1\"},\"StringLike\":{\"aws:RequestTag/karpenter.k8s.aws/ec2nodeclass\":\"*\",\"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AllowScopedInstanceProfileTagActions\"},{\"Action\":[\"iam:RemoveRoleFromInstanceProfile\",\"iam:DeleteInstanceProfile\",\"iam:AddRoleToInstanceProfile\"],\"Condition\":{\"StringEquals\":{\"aws:ResourceTag/kubernetes.io/cluster/eks-karpenter\":\"owned\",\"aws:ResourceTag/topology.kubernetes.io/region\":\"ap-southeast-1\"},\"StringLike\":{\"aws:ResourceTag/karpenter.k8s.aws/ec2nodeclass\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AllowScopedInstanceProfileActions\"},{\"Action\":\"iam:GetInstanceProfile\",\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AllowInstanceProfileReadActions\"},{\"Action\":\"eks:DescribeCluster\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:eks:ap-southeast-1:793209430381:cluster/eks-karpenter\",\"Sid\":\"AllowAPIServerEndpointDiscovery\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA3RLXXMFWROQ3VUEW2",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_iam_role.node",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.karpenter.module.karpenter.data.aws_caller_identity.current",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.controller",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.node_assume_role",
            "module.karpenter.module.karpenter.data.aws_partition.current",
            "module.karpenter.module.karpenter.data.aws_region.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::793209430381:role/KarpenterController-20240615002250406000000017",
            "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:TagSession\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"pods.eks.amazonaws.com\"}},{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:aud\":\"sts.amazonaws.com\",\"oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536:sub\":\"system:serviceaccount:karpenter:karpenter\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::793209430381:oidc-provider/oidc.eks.ap-southeast-1.amazonaws.com/id/8D344D945A4B14661C93EAD315517536\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-06-15T00:22:50Z",
            "description": "Karpenter controller IAM role",
            "force_detach_policies": true,
            "id": "KarpenterController-20240615002250406000000017",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::793209430381:policy/KarpenterController-20240615002315789500000018"
            ],
            "max_session_duration": 3600,
            "name": "KarpenterController-20240615002250406000000017",
            "name_prefix": "KarpenterController-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA3RLXXMFWRSIMIJLLF"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.controller_assume_role",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "KarpenterController-20240615002250406000000017-20240615002317155200000019",
            "policy_arn": "arn:aws:iam::793209430381:policy/KarpenterController-20240615002315789500000018",
            "role": "KarpenterController-20240615002250406000000017"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.workers",
            "data.aws_iam_policy_document.ec2_assume_role_policy",
            "data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_iam_policy.controller",
            "module.karpenter.module.karpenter.aws_iam_role.controller",
            "module.karpenter.module.karpenter.aws_iam_role.node",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.karpenter.module.karpenter.data.aws_caller_identity.current",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.controller",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.controller_assume_role",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.node_assume_role",
            "module.karpenter.module.karpenter.data.aws_partition.current",
            "module.karpenter.module.karpenter.data.aws_region.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "https://sqs.ap-southeast-1.amazonaws.com/793209430381/Karpenter-eks-karpenter",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 262144,
            "message_retention_seconds": 300,
            "name": "Karpenter-eks-karpenter",
            "name_prefix": "",
            "policy": "{\"Statement\":[{\"Action\":\"sqs:SendMessage\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"sqs.amazonaws.com\",\"events.amazonaws.com\"]},\"Resource\":\"arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter\",\"Sid\":\"SqsWrite\"}],\"Version\":\"2012-10-17\"}",
            "receive_wait_time_seconds": 0,
            "redrive_allow_policy": "",
            "redrive_policy": "",
            "sqs_managed_sse_enabled": true,
            "tags": {},
            "tags_all": {},
            "url": "https://sqs.ap-southeast-1.amazonaws.com/793209430381/Karpenter-eks-karpenter",
            "visibility_timeout_seconds": 30
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter",
      "mode": "managed",
      "type": "aws_sqs_queue_policy",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "id": "https://sqs.ap-southeast-1.amazonaws.com/793209430381/Karpenter-eks-karpenter",
            "policy": "{\"Statement\":[{\"Action\":\"sqs:SendMessage\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"sqs.amazonaws.com\",\"events.amazonaws.com\"]},\"Resource\":\"arn:aws:sqs:ap-southeast-1:793209430381:Karpenter-eks-karpenter\",\"Sid\":\"SqsWrite\"}],\"Version\":\"2012-10-17\"}",
            "queue_url": "https://sqs.ap-southeast-1.amazonaws.com/793209430381/Karpenter-eks-karpenter"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter.aws_sqs_queue.this",
            "module.karpenter.module.karpenter.data.aws_iam_policy_document.queue",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter-crds",
      "mode": "data",
      "type": "http",
      "name": "yaml_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/http\"]",
      "instances": [
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.k8s.aws_ec2nodeclasses.yaml",
          "schema_version": 0,
          "attributes": {
            "body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.15.0\n  name: ec2nodeclasses.karpenter.k8s.aws\nspec:\n  group: karpenter.k8s.aws\n  names:\n    categories:\n    - karpenter\n    kind: EC2NodeClass\n    listKind: EC2NodeClassList\n    plural: ec2nodeclasses\n    shortNames:\n    - ec2nc\n    - ec2ncs\n    singular: ec2nodeclass\n  scope: Cluster\n  versions:\n  - name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: EC2NodeClass is the Schema for the EC2NodeClass API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: |-\n              EC2NodeClassSpec is the top level specification for the AWS Karpenter Provider.\n              This will contain configuration necessary to launch instances in AWS.\n            properties:\n              amiFamily:\n                description: AMIFamily is the AMI family that instances use.\n                enum:\n                - AL2\n                - Bottlerocket\n                - Ubuntu\n                - Custom\n                - Windows2019\n                - Windows2022\n                type: string\n              amiSelectorTerms:\n                description: AMISelectorTerms is a list of or ami selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    AMISelectorTerm defines selection logic for an ami used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the ami id in EC2\n                      pattern: ami-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the ami name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    owner:\n                      description: |-\n                        Owner is the owner for the ami.\n                        You can specify a combination of AWS account IDs, \"self\", \"amazon\", and \"aws-marketplace\"\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in amiSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name) ||\n                    has(x.owner)))'\n              blockDeviceMappings:\n                description: BlockDeviceMappings to be applied to provisioned nodes.\n                items:\n                  properties:\n                    deviceName:\n                      description: The device name (for example, /dev/sdh or xvdh).\n                      type: string\n                    ebs:\n                      description: EBS contains parameters used to automatically set\n                        up EBS volumes when an instance is launched.\n                      properties:\n                        deleteOnTermination:\n                          description: DeleteOnTermination indicates whether the EBS\n                            volume is deleted on instance termination.\n                          type: boolean\n                        encrypted:\n                          description: |-\n                            Encrypted indicates whether the EBS volume is encrypted. Encrypted volumes can only\n                            be attached to instances that support Amazon EBS encryption. If you are creating\n                            a volume from a snapshot, you can't specify an encryption value.\n                          type: boolean\n                        iops:\n                          description: |-\n                            IOPS is the number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes,\n                            this represents the number of IOPS that are provisioned for the volume. For\n                            gp2 volumes, this represents the baseline performance of the volume and the\n                            rate at which the volume accumulates I/O credits for bursting.\n\n\n                            The following are the supported values for each volume type:\n\n\n                               * gp3: 3,000-16,000 IOPS\n\n\n                               * io1: 100-64,000 IOPS\n\n\n                               * io2: 100-64,000 IOPS\n\n\n                            For io1 and io2 volumes, we guarantee 64,000 IOPS only for Instances built\n                            on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).\n                            Other instance families guarantee performance up to 32,000 IOPS.\n\n\n                            This parameter is supported for io1, io2, and gp3 volumes only. This parameter\n                            is not supported for gp2, st1, sc1, or standard volumes.\n                          format: int64\n                          type: integer\n                        kmsKeyID:\n                          description: KMSKeyID (ARN) of the symmetric Key Management\n                            Service (KMS) CMK used for encryption.\n                          type: string\n                        snapshotID:\n                          description: SnapshotID is the ID of an EBS snapshot\n                          type: string\n                        throughput:\n                          description: |-\n                            Throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s.\n                            Valid Range: Minimum value of 125. Maximum value of 1000.\n                          format: int64\n                          type: integer\n                        volumeSize:\n                          allOf:\n                          - pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                          - pattern: ^((?:[1-9][0-9]{0,3}|[1-4][0-9]{4}|[5][0-8][0-9]{3}|59000)Gi|(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|[6][0-3][0-9]{3}|64000)G|([1-9]||[1-5][0-7]|58)Ti|([1-9]||[1-5][0-9]|6[0-3]|64)T)$\n                          anyOf:\n                          - type: integer\n                          - type: string\n                          description: |-\n                            VolumeSize in `Gi`, `G`, `Ti`, or `T`. You must specify either a snapshot ID or\n                            a volume size. The following are the supported volumes sizes for each volume\n                            type:\n\n\n                               * gp2 and gp3: 1-16,384\n\n\n                               * io1 and io2: 4-16,384\n\n\n                               * st1 and sc1: 125-16,384\n\n\n                               * standard: 1-1,024\n                          x-kubernetes-int-or-string: true\n                        volumeType:\n                          description: |-\n                            VolumeType of the block device.\n                            For more information, see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html)\n                            in the Amazon Elastic Compute Cloud User Guide.\n                          enum:\n                          - standard\n                          - io1\n                          - io2\n                          - gp2\n                          - sc1\n                          - st1\n                          - gp3\n                          type: string\n                      type: object\n                      x-kubernetes-validations:\n                      - message: snapshotID or volumeSize must be defined\n                        rule: has(self.snapshotID) || has(self.volumeSize)\n                    rootVolume:\n                      description: |-\n                        RootVolume is a flag indicating if this device is mounted as kubelet root dir. You can\n                        configure at most one root volume in BlockDeviceMappings.\n                      type: boolean\n                  type: object\n                maxItems: 50\n                type: array\n                x-kubernetes-validations:\n                - message: must have only one blockDeviceMappings with rootVolume\n                  rule: self.filter(x, has(x.rootVolume)?x.rootVolume==true:false).size()\n                    \u003c= 1\n              context:\n                description: |-\n                  Context is a Reserved field in EC2 APIs\n                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html\n                type: string\n              detailedMonitoring:\n                description: DetailedMonitoring controls if detailed monitoring is\n                  enabled for instances that are launched\n                type: boolean\n              instanceProfile:\n                description: |-\n                  InstanceProfile is the AWS entity that instances use.\n                  This field is mutually exclusive from role.\n                  The instance profile should already have a role assigned to it that Karpenter\n                   has PassRole permission on for instance launch using this instanceProfile to succeed.\n                type: string\n                x-kubernetes-validations:\n                - message: instanceProfile cannot be empty\n                  rule: self != ''\n              instanceStorePolicy:\n                description: InstanceStorePolicy specifies how to handle instance-store\n                  disks.\n                enum:\n                - RAID0\n                type: string\n              metadataOptions:\n                default:\n                  httpEndpoint: enabled\n                  httpProtocolIPv6: disabled\n                  httpPutResponseHopLimit: 2\n                  httpTokens: required\n                description: |-\n                  MetadataOptions for the generated launch template of provisioned nodes.\n\n\n                  This specifies the exposure of the Instance Metadata Service to\n                  provisioned EC2 nodes. For more information,\n                  see Instance Metadata and User Data\n                  (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)\n                  in the Amazon Elastic Compute Cloud User Guide.\n\n\n                  Refer to recommended, security best practices\n                  (https://aws.github.io/aws-eks-best-practices/security/docs/iam/#restrict-access-to-the-instance-profile-assigned-to-the-worker-node)\n                  for limiting exposure of Instance Metadata and User Data to pods.\n                  If omitted, defaults to httpEndpoint enabled, with httpProtocolIPv6\n                  disabled, with httpPutResponseLimit of 2, and with httpTokens\n                  required.\n                properties:\n                  httpEndpoint:\n                    default: enabled\n                    description: |-\n                      HTTPEndpoint enables or disables the HTTP metadata endpoint on provisioned\n                      nodes. If metadata options is non-nil, but this parameter is not specified,\n                      the default state is \"enabled\".\n\n\n                      If you specify a value of \"disabled\", instance metadata will not be accessible\n                      on the node.\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpProtocolIPv6:\n                    default: disabled\n                    description: |-\n                      HTTPProtocolIPv6 enables or disables the IPv6 endpoint for the instance metadata\n                      service on provisioned nodes. If metadata options is non-nil, but this parameter\n                      is not specified, the default state is \"disabled\".\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpPutResponseHopLimit:\n                    default: 2\n                    description: |-\n                      HTTPPutResponseHopLimit is the desired HTTP PUT response hop limit for\n                      instance metadata requests. The larger the number, the further instance\n                      metadata requests can travel. Possible values are integers from 1 to 64.\n                      If metadata options is non-nil, but this parameter is not specified, the\n                      default value is 2.\n                    format: int64\n                    maximum: 64\n                    minimum: 1\n                    type: integer\n                  httpTokens:\n                    default: required\n                    description: |-\n                      HTTPTokens determines the state of token usage for instance metadata\n                      requests. If metadata options is non-nil, but this parameter is not\n                      specified, the default state is \"required\".\n\n\n                      If the state is optional, one can choose to retrieve instance metadata with\n                      or without a signed token header on the request. If one retrieves the IAM\n                      role credentials without a token, the version 1.0 role credentials are\n                      returned. If one retrieves the IAM role credentials using a valid signed\n                      token, the version 2.0 role credentials are returned.\n\n\n                      If the state is \"required\", one must send a signed token header with any\n                      instance metadata retrieval requests. In this state, retrieving the IAM\n                      role credentials always returns the version 2.0 credentials; the version\n                      1.0 credentials are not available.\n                    enum:\n                    - required\n                    - optional\n                    type: string\n                type: object\n              role:\n                description: |-\n                  Role is the AWS identity that nodes use. This field is immutable.\n                  This field is mutually exclusive from instanceProfile.\n                  Marking this field as immutable avoids concerns around terminating managed instance profiles from running instances.\n                  This field may be made mutable in the future, assuming the correct garbage collection and drift handling is implemented\n                  for the old instance profiles on an update.\n                type: string\n                x-kubernetes-validations:\n                - message: role cannot be empty\n                  rule: self != ''\n                - message: immutable field changed\n                  rule: self == oldSelf\n              securityGroupSelectorTerms:\n                description: SecurityGroupSelectorTerms is a list of or security group\n                  selector terms. The terms are ORed.\n                items:\n                  description: |-\n                    SecurityGroupSelectorTerm defines selection logic for a security group used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the security group id in EC2\n                      pattern: sg-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the security group name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: securityGroupSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name)))'\n                - message: '''name'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.name) \u0026\u0026 (has(x.tags) || has(x.id)))'\n              subnetSelectorTerms:\n                description: SubnetSelectorTerms is a list of or subnet selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    SubnetSelectorTerm defines selection logic for a subnet used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the subnet id in EC2\n                      pattern: subnet-[0-9a-z]+\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: subnetSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id']\n                  rule: self.all(x, has(x.tags) || has(x.id))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in subnetSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 has(x.tags))'\n              tags:\n                additionalProperties:\n                  type: string\n                description: Tags to be applied on ec2 resources like instances and\n                  launch templates.\n                type: object\n                x-kubernetes-validations:\n                - message: empty tag keys aren't supported\n                  rule: self.all(k, k != '')\n                - message: tag contains a restricted tag matching kubernetes.io/cluster/\n                  rule: self.all(k, !k.startsWith('kubernetes.io/cluster') )\n                - message: tag contains a restricted tag matching karpenter.sh/provisioner-name\n                  rule: self.all(k, k != 'karpenter.sh/provisioner-name')\n                - message: tag contains a restricted tag matching karpenter.sh/nodepool\n                  rule: self.all(k, k != 'karpenter.sh/nodepool')\n                - message: tag contains a restricted tag matching karpenter.sh/managed-by\n                  rule: self.all(k, k !='karpenter.sh/managed-by')\n              userData:\n                description: |-\n                  UserData to be applied to the provisioned nodes.\n                  It must be in the appropriate format based on the AMIFamily in use. Karpenter will merge certain fields into\n                  this UserData to ensure nodes are being provisioned with the correct configuration.\n                type: string\n            required:\n            - amiFamily\n            - securityGroupSelectorTerms\n            - subnetSelectorTerms\n            type: object\n            x-kubernetes-validations:\n            - message: amiSelectorTerms is required when amiFamily == 'Custom'\n              rule: 'self.amiFamily == ''Custom'' ? self.amiSelectorTerms.size() !=\n                0 : true'\n            - message: must specify exactly one of ['role', 'instanceProfile']\n              rule: (has(self.role) \u0026\u0026 !has(self.instanceProfile)) || (!has(self.role)\n                \u0026\u0026 has(self.instanceProfile))\n            - message: changing from 'instanceProfile' to 'role' is not supported.\n                You must delete and recreate this node class if you want to change\n                this.\n              rule: (has(oldSelf.role) \u0026\u0026 has(self.role)) || (has(oldSelf.instanceProfile)\n                \u0026\u0026 has(self.instanceProfile))\n          status:\n            description: EC2NodeClassStatus contains the resolved state of the EC2NodeClass\n            properties:\n              amis:\n                description: |-\n                  AMI contains the current AMI values that are available to the\n                  cluster under the AMI selectors.\n                items:\n                  description: AMI contains resolved AMI selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the AMI\n                      type: string\n                    name:\n                      description: Name of the AMI\n                      type: string\n                    requirements:\n                      description: Requirements of the AMI to be utilized on an instance\n                        type\n                      items:\n                        description: |-\n                          A node selector requirement is a selector that contains values, a key, and an operator\n                          that relates the key and values.\n                        properties:\n                          key:\n                            description: The label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: |-\n                              Represents a key's relationship to a set of values.\n                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                            type: string\n                          values:\n                            description: |-\n                              An array of string values. If the operator is In or NotIn,\n                              the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                              the values array must be empty. If the operator is Gt or Lt, the values\n                              array must have a single element, which will be interpreted as an integer.\n                              This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                        - key\n                        - operator\n                        type: object\n                      type: array\n                  required:\n                  - id\n                  - requirements\n                  type: object\n                type: array\n              instanceProfile:\n                description: InstanceProfile contains the resolved instance profile\n                  for the role\n                type: string\n              securityGroups:\n                description: |-\n                  SecurityGroups contains the current Security Groups values that are available to the\n                  cluster under the SecurityGroups selectors.\n                items:\n                  description: SecurityGroup contains resolved SecurityGroup selector\n                    values utilized for node launch\n                  properties:\n                    id:\n                      description: ID of the security group\n                      type: string\n                    name:\n                      description: Name of the security group\n                      type: string\n                  required:\n                  - id\n                  type: object\n                type: array\n              subnets:\n                description: |-\n                  Subnets contains the current Subnet values that are available to the\n                  cluster under the subnet selectors.\n                items:\n                  description: Subnet contains resolved Subnet selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the subnet\n                      type: string\n                    zone:\n                      description: The associated availability zone\n                      type: string\n                  required:\n                  - id\n                  - zone\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "ca_cert_pem": null,
            "id": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.k8s.aws_ec2nodeclasses.yaml",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.15.0\n  name: ec2nodeclasses.karpenter.k8s.aws\nspec:\n  group: karpenter.k8s.aws\n  names:\n    categories:\n    - karpenter\n    kind: EC2NodeClass\n    listKind: EC2NodeClassList\n    plural: ec2nodeclasses\n    shortNames:\n    - ec2nc\n    - ec2ncs\n    singular: ec2nodeclass\n  scope: Cluster\n  versions:\n  - name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: EC2NodeClass is the Schema for the EC2NodeClass API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: |-\n              EC2NodeClassSpec is the top level specification for the AWS Karpenter Provider.\n              This will contain configuration necessary to launch instances in AWS.\n            properties:\n              amiFamily:\n                description: AMIFamily is the AMI family that instances use.\n                enum:\n                - AL2\n                - Bottlerocket\n                - Ubuntu\n                - Custom\n                - Windows2019\n                - Windows2022\n                type: string\n              amiSelectorTerms:\n                description: AMISelectorTerms is a list of or ami selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    AMISelectorTerm defines selection logic for an ami used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the ami id in EC2\n                      pattern: ami-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the ami name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    owner:\n                      description: |-\n                        Owner is the owner for the ami.\n                        You can specify a combination of AWS account IDs, \"self\", \"amazon\", and \"aws-marketplace\"\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in amiSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name) ||\n                    has(x.owner)))'\n              blockDeviceMappings:\n                description: BlockDeviceMappings to be applied to provisioned nodes.\n                items:\n                  properties:\n                    deviceName:\n                      description: The device name (for example, /dev/sdh or xvdh).\n                      type: string\n                    ebs:\n                      description: EBS contains parameters used to automatically set\n                        up EBS volumes when an instance is launched.\n                      properties:\n                        deleteOnTermination:\n                          description: DeleteOnTermination indicates whether the EBS\n                            volume is deleted on instance termination.\n                          type: boolean\n                        encrypted:\n                          description: |-\n                            Encrypted indicates whether the EBS volume is encrypted. Encrypted volumes can only\n                            be attached to instances that support Amazon EBS encryption. If you are creating\n                            a volume from a snapshot, you can't specify an encryption value.\n                          type: boolean\n                        iops:\n                          description: |-\n                            IOPS is the number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes,\n                            this represents the number of IOPS that are provisioned for the volume. For\n                            gp2 volumes, this represents the baseline performance of the volume and the\n                            rate at which the volume accumulates I/O credits for bursting.\n\n\n                            The following are the supported values for each volume type:\n\n\n                               * gp3: 3,000-16,000 IOPS\n\n\n                               * io1: 100-64,000 IOPS\n\n\n                               * io2: 100-64,000 IOPS\n\n\n                            For io1 and io2 volumes, we guarantee 64,000 IOPS only for Instances built\n                            on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).\n                            Other instance families guarantee performance up to 32,000 IOPS.\n\n\n                            This parameter is supported for io1, io2, and gp3 volumes only. This parameter\n                            is not supported for gp2, st1, sc1, or standard volumes.\n                          format: int64\n                          type: integer\n                        kmsKeyID:\n                          description: KMSKeyID (ARN) of the symmetric Key Management\n                            Service (KMS) CMK used for encryption.\n                          type: string\n                        snapshotID:\n                          description: SnapshotID is the ID of an EBS snapshot\n                          type: string\n                        throughput:\n                          description: |-\n                            Throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s.\n                            Valid Range: Minimum value of 125. Maximum value of 1000.\n                          format: int64\n                          type: integer\n                        volumeSize:\n                          allOf:\n                          - pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                          - pattern: ^((?:[1-9][0-9]{0,3}|[1-4][0-9]{4}|[5][0-8][0-9]{3}|59000)Gi|(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|[6][0-3][0-9]{3}|64000)G|([1-9]||[1-5][0-7]|58)Ti|([1-9]||[1-5][0-9]|6[0-3]|64)T)$\n                          anyOf:\n                          - type: integer\n                          - type: string\n                          description: |-\n                            VolumeSize in `Gi`, `G`, `Ti`, or `T`. You must specify either a snapshot ID or\n                            a volume size. The following are the supported volumes sizes for each volume\n                            type:\n\n\n                               * gp2 and gp3: 1-16,384\n\n\n                               * io1 and io2: 4-16,384\n\n\n                               * st1 and sc1: 125-16,384\n\n\n                               * standard: 1-1,024\n                          x-kubernetes-int-or-string: true\n                        volumeType:\n                          description: |-\n                            VolumeType of the block device.\n                            For more information, see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html)\n                            in the Amazon Elastic Compute Cloud User Guide.\n                          enum:\n                          - standard\n                          - io1\n                          - io2\n                          - gp2\n                          - sc1\n                          - st1\n                          - gp3\n                          type: string\n                      type: object\n                      x-kubernetes-validations:\n                      - message: snapshotID or volumeSize must be defined\n                        rule: has(self.snapshotID) || has(self.volumeSize)\n                    rootVolume:\n                      description: |-\n                        RootVolume is a flag indicating if this device is mounted as kubelet root dir. You can\n                        configure at most one root volume in BlockDeviceMappings.\n                      type: boolean\n                  type: object\n                maxItems: 50\n                type: array\n                x-kubernetes-validations:\n                - message: must have only one blockDeviceMappings with rootVolume\n                  rule: self.filter(x, has(x.rootVolume)?x.rootVolume==true:false).size()\n                    \u003c= 1\n              context:\n                description: |-\n                  Context is a Reserved field in EC2 APIs\n                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html\n                type: string\n              detailedMonitoring:\n                description: DetailedMonitoring controls if detailed monitoring is\n                  enabled for instances that are launched\n                type: boolean\n              instanceProfile:\n                description: |-\n                  InstanceProfile is the AWS entity that instances use.\n                  This field is mutually exclusive from role.\n                  The instance profile should already have a role assigned to it that Karpenter\n                   has PassRole permission on for instance launch using this instanceProfile to succeed.\n                type: string\n                x-kubernetes-validations:\n                - message: instanceProfile cannot be empty\n                  rule: self != ''\n              instanceStorePolicy:\n                description: InstanceStorePolicy specifies how to handle instance-store\n                  disks.\n                enum:\n                - RAID0\n                type: string\n              metadataOptions:\n                default:\n                  httpEndpoint: enabled\n                  httpProtocolIPv6: disabled\n                  httpPutResponseHopLimit: 2\n                  httpTokens: required\n                description: |-\n                  MetadataOptions for the generated launch template of provisioned nodes.\n\n\n                  This specifies the exposure of the Instance Metadata Service to\n                  provisioned EC2 nodes. For more information,\n                  see Instance Metadata and User Data\n                  (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)\n                  in the Amazon Elastic Compute Cloud User Guide.\n\n\n                  Refer to recommended, security best practices\n                  (https://aws.github.io/aws-eks-best-practices/security/docs/iam/#restrict-access-to-the-instance-profile-assigned-to-the-worker-node)\n                  for limiting exposure of Instance Metadata and User Data to pods.\n                  If omitted, defaults to httpEndpoint enabled, with httpProtocolIPv6\n                  disabled, with httpPutResponseLimit of 2, and with httpTokens\n                  required.\n                properties:\n                  httpEndpoint:\n                    default: enabled\n                    description: |-\n                      HTTPEndpoint enables or disables the HTTP metadata endpoint on provisioned\n                      nodes. If metadata options is non-nil, but this parameter is not specified,\n                      the default state is \"enabled\".\n\n\n                      If you specify a value of \"disabled\", instance metadata will not be accessible\n                      on the node.\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpProtocolIPv6:\n                    default: disabled\n                    description: |-\n                      HTTPProtocolIPv6 enables or disables the IPv6 endpoint for the instance metadata\n                      service on provisioned nodes. If metadata options is non-nil, but this parameter\n                      is not specified, the default state is \"disabled\".\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpPutResponseHopLimit:\n                    default: 2\n                    description: |-\n                      HTTPPutResponseHopLimit is the desired HTTP PUT response hop limit for\n                      instance metadata requests. The larger the number, the further instance\n                      metadata requests can travel. Possible values are integers from 1 to 64.\n                      If metadata options is non-nil, but this parameter is not specified, the\n                      default value is 2.\n                    format: int64\n                    maximum: 64\n                    minimum: 1\n                    type: integer\n                  httpTokens:\n                    default: required\n                    description: |-\n                      HTTPTokens determines the state of token usage for instance metadata\n                      requests. If metadata options is non-nil, but this parameter is not\n                      specified, the default state is \"required\".\n\n\n                      If the state is optional, one can choose to retrieve instance metadata with\n                      or without a signed token header on the request. If one retrieves the IAM\n                      role credentials without a token, the version 1.0 role credentials are\n                      returned. If one retrieves the IAM role credentials using a valid signed\n                      token, the version 2.0 role credentials are returned.\n\n\n                      If the state is \"required\", one must send a signed token header with any\n                      instance metadata retrieval requests. In this state, retrieving the IAM\n                      role credentials always returns the version 2.0 credentials; the version\n                      1.0 credentials are not available.\n                    enum:\n                    - required\n                    - optional\n                    type: string\n                type: object\n              role:\n                description: |-\n                  Role is the AWS identity that nodes use. This field is immutable.\n                  This field is mutually exclusive from instanceProfile.\n                  Marking this field as immutable avoids concerns around terminating managed instance profiles from running instances.\n                  This field may be made mutable in the future, assuming the correct garbage collection and drift handling is implemented\n                  for the old instance profiles on an update.\n                type: string\n                x-kubernetes-validations:\n                - message: role cannot be empty\n                  rule: self != ''\n                - message: immutable field changed\n                  rule: self == oldSelf\n              securityGroupSelectorTerms:\n                description: SecurityGroupSelectorTerms is a list of or security group\n                  selector terms. The terms are ORed.\n                items:\n                  description: |-\n                    SecurityGroupSelectorTerm defines selection logic for a security group used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the security group id in EC2\n                      pattern: sg-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the security group name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: securityGroupSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name)))'\n                - message: '''name'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.name) \u0026\u0026 (has(x.tags) || has(x.id)))'\n              subnetSelectorTerms:\n                description: SubnetSelectorTerms is a list of or subnet selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    SubnetSelectorTerm defines selection logic for a subnet used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the subnet id in EC2\n                      pattern: subnet-[0-9a-z]+\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: subnetSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id']\n                  rule: self.all(x, has(x.tags) || has(x.id))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in subnetSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 has(x.tags))'\n              tags:\n                additionalProperties:\n                  type: string\n                description: Tags to be applied on ec2 resources like instances and\n                  launch templates.\n                type: object\n                x-kubernetes-validations:\n                - message: empty tag keys aren't supported\n                  rule: self.all(k, k != '')\n                - message: tag contains a restricted tag matching kubernetes.io/cluster/\n                  rule: self.all(k, !k.startsWith('kubernetes.io/cluster') )\n                - message: tag contains a restricted tag matching karpenter.sh/provisioner-name\n                  rule: self.all(k, k != 'karpenter.sh/provisioner-name')\n                - message: tag contains a restricted tag matching karpenter.sh/nodepool\n                  rule: self.all(k, k != 'karpenter.sh/nodepool')\n                - message: tag contains a restricted tag matching karpenter.sh/managed-by\n                  rule: self.all(k, k !='karpenter.sh/managed-by')\n              userData:\n                description: |-\n                  UserData to be applied to the provisioned nodes.\n                  It must be in the appropriate format based on the AMIFamily in use. Karpenter will merge certain fields into\n                  this UserData to ensure nodes are being provisioned with the correct configuration.\n                type: string\n            required:\n            - amiFamily\n            - securityGroupSelectorTerms\n            - subnetSelectorTerms\n            type: object\n            x-kubernetes-validations:\n            - message: amiSelectorTerms is required when amiFamily == 'Custom'\n              rule: 'self.amiFamily == ''Custom'' ? self.amiSelectorTerms.size() !=\n                0 : true'\n            - message: must specify exactly one of ['role', 'instanceProfile']\n              rule: (has(self.role) \u0026\u0026 !has(self.instanceProfile)) || (!has(self.role)\n                \u0026\u0026 has(self.instanceProfile))\n            - message: changing from 'instanceProfile' to 'role' is not supported.\n                You must delete and recreate this node class if you want to change\n                this.\n              rule: (has(oldSelf.role) \u0026\u0026 has(self.role)) || (has(oldSelf.instanceProfile)\n                \u0026\u0026 has(self.instanceProfile))\n          status:\n            description: EC2NodeClassStatus contains the resolved state of the EC2NodeClass\n            properties:\n              amis:\n                description: |-\n                  AMI contains the current AMI values that are available to the\n                  cluster under the AMI selectors.\n                items:\n                  description: AMI contains resolved AMI selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the AMI\n                      type: string\n                    name:\n                      description: Name of the AMI\n                      type: string\n                    requirements:\n                      description: Requirements of the AMI to be utilized on an instance\n                        type\n                      items:\n                        description: |-\n                          A node selector requirement is a selector that contains values, a key, and an operator\n                          that relates the key and values.\n                        properties:\n                          key:\n                            description: The label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: |-\n                              Represents a key's relationship to a set of values.\n                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                            type: string\n                          values:\n                            description: |-\n                              An array of string values. If the operator is In or NotIn,\n                              the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                              the values array must be empty. If the operator is Gt or Lt, the values\n                              array must have a single element, which will be interpreted as an integer.\n                              This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                        - key\n                        - operator\n                        type: object\n                      type: array\n                  required:\n                  - id\n                  - requirements\n                  type: object\n                type: array\n              instanceProfile:\n                description: InstanceProfile contains the resolved instance profile\n                  for the role\n                type: string\n              securityGroups:\n                description: |-\n                  SecurityGroups contains the current Security Groups values that are available to the\n                  cluster under the SecurityGroups selectors.\n                items:\n                  description: SecurityGroup contains resolved SecurityGroup selector\n                    values utilized for node launch\n                  properties:\n                    id:\n                      description: ID of the security group\n                      type: string\n                    name:\n                      description: Name of the security group\n                      type: string\n                  required:\n                  - id\n                  type: object\n                type: array\n              subnets:\n                description: |-\n                  Subnets contains the current Subnet values that are available to the\n                  cluster under the subnet selectors.\n                items:\n                  description: Subnet contains resolved Subnet selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the subnet\n                      type: string\n                    zone:\n                      description: The associated availability zone\n                      type: string\n                  required:\n                  - id\n                  - zone\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "response_body_base64": "",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Sat, 15 Jun 2024 01:19:26 GMT",
              "Etag": "W/\"02b3cca2b41bf5a77de3205b7b4ac4b5f61d721ac60b0b3dd0e47f86ea905b69\"",
              "Expires": "Sat, 15 Jun 2024 01:24:26 GMT",
              "Source-Age": "94",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding,Origin",
              "Via": "1.1 varnish",
              "X-Cache": "HIT",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "87b40667f2267cd52bbe6ac477e9f5415785edd6",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "9091:106D0F:14F7AF:1935FE:666CD77F",
              "X-Served-By": "cache-qpg1279-QPG",
              "X-Timer": "S1718414367.862172,VS0,VE1",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.k8s.aws_ec2nodeclasses.yaml"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodeclaims.yaml",
          "schema_version": 0,
          "attributes": {
            "body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodeclaims.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n      - karpenter\n    kind: NodeClaim\n    listKind: NodeClaimList\n    plural: nodeclaims\n    singular: nodeclaim\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - jsonPath: .metadata.labels.node\\.kubernetes\\.io/instance-type\n          name: Type\n          type: string\n        - jsonPath: .metadata.labels.topology\\.kubernetes\\.io/zone\n          name: Zone\n          type: string\n        - jsonPath: .status.nodeName\n          name: Node\n          type: string\n        - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n          name: Ready\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: Age\n          type: date\n        - jsonPath: .metadata.labels.karpenter\\.sh/capacity-type\n          name: Capacity\n          priority: 1\n          type: string\n        - jsonPath: .metadata.labels.karpenter\\.sh/nodepool\n          name: NodePool\n          priority: 1\n          type: string\n        - jsonPath: .spec.nodeClassRef.name\n          name: NodeClass\n          priority: 1\n          type: string\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: NodeClaim is the Schema for the NodeClaims API\n          properties:\n            apiVersion:\n              description: |-\n                APIVersion defines the versioned schema of this representation of an object.\n                Servers should convert recognized schemas to the latest internal value, and\n                may reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n              type: string\n            kind:\n              description: |-\n                Kind is a string value representing the REST resource this object represents.\n                Servers may infer this from the endpoint the client submits requests to.\n                Cannot be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: NodeClaimSpec describes the desired state of the NodeClaim\n              properties:\n                kubelet:\n                  description: |-\n                    Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                    They are a subset of the upstream types, recognizing not all options may be supported.\n                    Wherever possible, the types and names should reflect the upstream kubelet types.\n                  properties:\n                    clusterDNS:\n                      description: |-\n                        clusterDNS is a list of IP addresses for the cluster DNS server.\n                        Note that not all providers may use all addresses.\n                      items:\n                        type: string\n                      type: array\n                    cpuCFSQuota:\n                      description: CPUCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits.\n                      type: boolean\n                    evictionHard:\n                      additionalProperties:\n                        type: string\n                        pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      description: EvictionHard is the map of signal names to quantities that define hard eviction thresholds\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    evictionMaxPodGracePeriod:\n                      description: |-\n                        EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                        response to soft eviction thresholds being met.\n                      format: int32\n                      type: integer\n                    evictionSoft:\n                      additionalProperties:\n                        type: string\n                        pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      description: EvictionSoft is the map of signal names to quantities that define soft eviction thresholds\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    evictionSoftGracePeriod:\n                      additionalProperties:\n                        type: string\n                      description: EvictionSoftGracePeriod is the map of signal names to quantities that define grace periods for each eviction signal\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    imageGCHighThresholdPercent:\n                      description: |-\n                        ImageGCHighThresholdPercent is the percent of disk usage after which image\n                        garbage collection is always run. The percent is calculated by dividing this\n                        field value by 100, so this field must be between 0 and 100, inclusive.\n                        When specified, the value must be greater than ImageGCLowThresholdPercent.\n                      format: int32\n                      maximum: 100\n                      minimum: 0\n                      type: integer\n                    imageGCLowThresholdPercent:\n                      description: |-\n                        ImageGCLowThresholdPercent is the percent of disk usage before which image\n                        garbage collection is never run. Lowest disk usage to garbage collect to.\n                        The percent is calculated by dividing this field value by 100,\n                        so the field value must be between 0 and 100, inclusive.\n                        When specified, the value must be less than imageGCHighThresholdPercent\n                      format: int32\n                      maximum: 100\n                      minimum: 0\n                      type: integer\n                    kubeReserved:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: KubeReserved contains resources reserved for Kubernetes system components.\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                          rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                        - message: kubeReserved value cannot be a negative resource quantity\n                          rule: self.all(x, !self[x].startsWith('-'))\n                    maxPods:\n                      description: |-\n                        MaxPods is an override for the maximum number of pods that can run on\n                        a worker node instance.\n                      format: int32\n                      minimum: 0\n                      type: integer\n                    podsPerCore:\n                      description: |-\n                        PodsPerCore is an override for the number of pods that can run on a worker node\n                        instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                        MaxPods is a lower value, that value will be used.\n                      format: int32\n                      minimum: 0\n                      type: integer\n                    systemReserved:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: SystemReserved contains resources reserved for OS system daemons and kernel memory.\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                          rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                        - message: systemReserved value cannot be a negative resource quantity\n                          rule: self.all(x, !self[x].startsWith('-'))\n                  type: object\n                  x-kubernetes-validations:\n                    - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent\n                      rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent) ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  : true'\n                    - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod\n                      rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true\n                    - message: evictionSoftGracePeriod OwnerKey does not have a matching evictionSoft\n                      rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e, (e in self.evictionSoft)):true\n                nodeClassRef:\n                  description: NodeClassRef is a reference to an object that defines provider specific configuration\n                  properties:\n                    apiVersion:\n                      description: API version of the referent\n                      type: string\n                    kind:\n                      description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                      type: string\n                    name:\n                      description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                      type: string\n                  required:\n                    - name\n                  type: object\n                requirements:\n                  description: Requirements are layered with GetLabels and applied to every node.\n                  items:\n                    description: |-\n                      A node selector requirement is a selector that contains values, a key, and an operator\n                      that relates the key and values.\n                    properties:\n                      key:\n                        description: The label key that the selector applies to.\n                        type: string\n                        maxLength: 316\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                        x-kubernetes-validations:\n                          - message: label domain \"kubernetes.io\" is restricted\n                            rule: self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                          - message: label domain \"k8s.io\" is restricted\n                            rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                          - message: label domain \"karpenter.sh\" is restricted\n                            rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                          - message: label \"kubernetes.io/hostname\" is restricted\n                            rule: self != \"kubernetes.io/hostname\"\n                          - message: label domain \"karpenter.k8s.aws\" is restricted\n                            rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                      operator:\n                        description: |-\n                          Represents a key's relationship to a set of values.\n                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                        type: string\n                        enum:\n                          - In\n                          - NotIn\n                          - Exists\n                          - DoesNotExist\n                          - Gt\n                          - Lt\n                      values:\n                        description: |-\n                          An array of string values. If the operator is In or NotIn,\n                          the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                          the values array must be empty. If the operator is Gt or Lt, the values\n                          array must have a single element, which will be interpreted as an integer.\n                          This array is replaced during a strategic merge patch.\n                        items:\n                          type: string\n                        type: array\n                        maxLength: 63\n                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                    required:\n                      - key\n                      - operator\n                    type: object\n                  maxItems: 30\n                  type: array\n                  x-kubernetes-validations:\n                    - message: requirements with operator 'In' must have a value defined\n                      rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 : true)'\n                    - message: requirements operator 'Gt' or 'Lt' must have a single positive integer value\n                      rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)'\n                resources:\n                  description: Resources models the resource requirements for the NodeClaim to launch\n                  properties:\n                    requests:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: Requests describes the minimum required resources for the NodeClaim to launch\n                      type: object\n                  type: object\n                startupTaints:\n                  description: |-\n                    StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                    within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                    daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                    purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                  items:\n                    description: |-\n                      The node this Taint is attached to has the \"effect\" on\n                      any pod that does not tolerate the Taint.\n                    properties:\n                      effect:\n                        description: |-\n                          Required. The effect of the taint on pods\n                          that do not tolerate the taint.\n                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                        type: string\n                        enum:\n                          - NoSchedule\n                          - PreferNoSchedule\n                          - NoExecute\n                      key:\n                        description: Required. The taint key to be applied to a node.\n                        type: string\n                        minLength: 1\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      timeAdded:\n                        description: |-\n                          TimeAdded represents the time at which the taint was added.\n                          It is only written for NoExecute taints.\n                        format: date-time\n                        type: string\n                      value:\n                        description: The taint value corresponding to the taint key.\n                        type: string\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                    required:\n                      - effect\n                      - key\n                    type: object\n                  type: array\n                taints:\n                  description: Taints will be applied to the NodeClaim's node.\n                  items:\n                    description: |-\n                      The node this Taint is attached to has the \"effect\" on\n                      any pod that does not tolerate the Taint.\n                    properties:\n                      effect:\n                        description: |-\n                          Required. The effect of the taint on pods\n                          that do not tolerate the taint.\n                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                        type: string\n                        enum:\n                          - NoSchedule\n                          - PreferNoSchedule\n                          - NoExecute\n                      key:\n                        description: Required. The taint key to be applied to a node.\n                        type: string\n                        minLength: 1\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      timeAdded:\n                        description: |-\n                          TimeAdded represents the time at which the taint was added.\n                          It is only written for NoExecute taints.\n                        format: date-time\n                        type: string\n                      value:\n                        description: The taint value corresponding to the taint key.\n                        type: string\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                    required:\n                      - effect\n                      - key\n                    type: object\n                  type: array\n              required:\n                - nodeClassRef\n                - requirements\n              type: object\n            status:\n              description: NodeClaimStatus defines the observed state of NodeClaim\n              properties:\n                allocatable:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Allocatable is the estimated allocatable capacity of the node\n                  type: object\n                capacity:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Capacity is the estimated full capacity of the node\n                  type: object\n                conditions:\n                  description: Conditions contains signals for health and readiness\n                  items:\n                    description: |-\n                      Condition defines a readiness condition for a Knative resource.\n                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties\n                    properties:\n                      lastTransitionTime:\n                        description: |-\n                          LastTransitionTime is the last time the condition transitioned from one status to another.\n                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\n                          differences (all other things held constant).\n                        type: string\n                      message:\n                        description: A human readable message indicating details about the transition.\n                        type: string\n                      reason:\n                        description: The reason for the condition's last transition.\n                        type: string\n                      severity:\n                        description: |-\n                          Severity with which to treat failures of this type of condition.\n                          When this is not specified, it defaults to Error.\n                        type: string\n                      status:\n                        description: Status of the condition, one of True, False, Unknown.\n                        type: string\n                      type:\n                        description: Type of condition.\n                        type: string\n                    required:\n                      - status\n                      - type\n                    type: object\n                  type: array\n                imageID:\n                  description: ImageID is an identifier for the image that runs on the node\n                  type: string\n                nodeName:\n                  description: NodeName is the name of the corresponding node object\n                  type: string\n                providerID:\n                  description: ProviderID of the corresponding node object\n                  type: string\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\n",
            "ca_cert_pem": null,
            "id": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodeclaims.yaml",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodeclaims.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n      - karpenter\n    kind: NodeClaim\n    listKind: NodeClaimList\n    plural: nodeclaims\n    singular: nodeclaim\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - jsonPath: .metadata.labels.node\\.kubernetes\\.io/instance-type\n          name: Type\n          type: string\n        - jsonPath: .metadata.labels.topology\\.kubernetes\\.io/zone\n          name: Zone\n          type: string\n        - jsonPath: .status.nodeName\n          name: Node\n          type: string\n        - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n          name: Ready\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: Age\n          type: date\n        - jsonPath: .metadata.labels.karpenter\\.sh/capacity-type\n          name: Capacity\n          priority: 1\n          type: string\n        - jsonPath: .metadata.labels.karpenter\\.sh/nodepool\n          name: NodePool\n          priority: 1\n          type: string\n        - jsonPath: .spec.nodeClassRef.name\n          name: NodeClass\n          priority: 1\n          type: string\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: NodeClaim is the Schema for the NodeClaims API\n          properties:\n            apiVersion:\n              description: |-\n                APIVersion defines the versioned schema of this representation of an object.\n                Servers should convert recognized schemas to the latest internal value, and\n                may reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n              type: string\n            kind:\n              description: |-\n                Kind is a string value representing the REST resource this object represents.\n                Servers may infer this from the endpoint the client submits requests to.\n                Cannot be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: NodeClaimSpec describes the desired state of the NodeClaim\n              properties:\n                kubelet:\n                  description: |-\n                    Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                    They are a subset of the upstream types, recognizing not all options may be supported.\n                    Wherever possible, the types and names should reflect the upstream kubelet types.\n                  properties:\n                    clusterDNS:\n                      description: |-\n                        clusterDNS is a list of IP addresses for the cluster DNS server.\n                        Note that not all providers may use all addresses.\n                      items:\n                        type: string\n                      type: array\n                    cpuCFSQuota:\n                      description: CPUCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits.\n                      type: boolean\n                    evictionHard:\n                      additionalProperties:\n                        type: string\n                        pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      description: EvictionHard is the map of signal names to quantities that define hard eviction thresholds\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    evictionMaxPodGracePeriod:\n                      description: |-\n                        EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                        response to soft eviction thresholds being met.\n                      format: int32\n                      type: integer\n                    evictionSoft:\n                      additionalProperties:\n                        type: string\n                        pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      description: EvictionSoft is the map of signal names to quantities that define soft eviction thresholds\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    evictionSoftGracePeriod:\n                      additionalProperties:\n                        type: string\n                      description: EvictionSoftGracePeriod is the map of signal names to quantities that define grace periods for each eviction signal\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    imageGCHighThresholdPercent:\n                      description: |-\n                        ImageGCHighThresholdPercent is the percent of disk usage after which image\n                        garbage collection is always run. The percent is calculated by dividing this\n                        field value by 100, so this field must be between 0 and 100, inclusive.\n                        When specified, the value must be greater than ImageGCLowThresholdPercent.\n                      format: int32\n                      maximum: 100\n                      minimum: 0\n                      type: integer\n                    imageGCLowThresholdPercent:\n                      description: |-\n                        ImageGCLowThresholdPercent is the percent of disk usage before which image\n                        garbage collection is never run. Lowest disk usage to garbage collect to.\n                        The percent is calculated by dividing this field value by 100,\n                        so the field value must be between 0 and 100, inclusive.\n                        When specified, the value must be less than imageGCHighThresholdPercent\n                      format: int32\n                      maximum: 100\n                      minimum: 0\n                      type: integer\n                    kubeReserved:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: KubeReserved contains resources reserved for Kubernetes system components.\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                          rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                        - message: kubeReserved value cannot be a negative resource quantity\n                          rule: self.all(x, !self[x].startsWith('-'))\n                    maxPods:\n                      description: |-\n                        MaxPods is an override for the maximum number of pods that can run on\n                        a worker node instance.\n                      format: int32\n                      minimum: 0\n                      type: integer\n                    podsPerCore:\n                      description: |-\n                        PodsPerCore is an override for the number of pods that can run on a worker node\n                        instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                        MaxPods is a lower value, that value will be used.\n                      format: int32\n                      minimum: 0\n                      type: integer\n                    systemReserved:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: SystemReserved contains resources reserved for OS system daemons and kernel memory.\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                          rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                        - message: systemReserved value cannot be a negative resource quantity\n                          rule: self.all(x, !self[x].startsWith('-'))\n                  type: object\n                  x-kubernetes-validations:\n                    - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent\n                      rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent) ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  : true'\n                    - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod\n                      rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true\n                    - message: evictionSoftGracePeriod OwnerKey does not have a matching evictionSoft\n                      rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e, (e in self.evictionSoft)):true\n                nodeClassRef:\n                  description: NodeClassRef is a reference to an object that defines provider specific configuration\n                  properties:\n                    apiVersion:\n                      description: API version of the referent\n                      type: string\n                    kind:\n                      description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                      type: string\n                    name:\n                      description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                      type: string\n                  required:\n                    - name\n                  type: object\n                requirements:\n                  description: Requirements are layered with GetLabels and applied to every node.\n                  items:\n                    description: |-\n                      A node selector requirement is a selector that contains values, a key, and an operator\n                      that relates the key and values.\n                    properties:\n                      key:\n                        description: The label key that the selector applies to.\n                        type: string\n                        maxLength: 316\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                        x-kubernetes-validations:\n                          - message: label domain \"kubernetes.io\" is restricted\n                            rule: self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                          - message: label domain \"k8s.io\" is restricted\n                            rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                          - message: label domain \"karpenter.sh\" is restricted\n                            rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                          - message: label \"kubernetes.io/hostname\" is restricted\n                            rule: self != \"kubernetes.io/hostname\"\n                          - message: label domain \"karpenter.k8s.aws\" is restricted\n                            rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                      operator:\n                        description: |-\n                          Represents a key's relationship to a set of values.\n                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                        type: string\n                        enum:\n                          - In\n                          - NotIn\n                          - Exists\n                          - DoesNotExist\n                          - Gt\n                          - Lt\n                      values:\n                        description: |-\n                          An array of string values. If the operator is In or NotIn,\n                          the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                          the values array must be empty. If the operator is Gt or Lt, the values\n                          array must have a single element, which will be interpreted as an integer.\n                          This array is replaced during a strategic merge patch.\n                        items:\n                          type: string\n                        type: array\n                        maxLength: 63\n                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                    required:\n                      - key\n                      - operator\n                    type: object\n                  maxItems: 30\n                  type: array\n                  x-kubernetes-validations:\n                    - message: requirements with operator 'In' must have a value defined\n                      rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 : true)'\n                    - message: requirements operator 'Gt' or 'Lt' must have a single positive integer value\n                      rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)'\n                resources:\n                  description: Resources models the resource requirements for the NodeClaim to launch\n                  properties:\n                    requests:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: Requests describes the minimum required resources for the NodeClaim to launch\n                      type: object\n                  type: object\n                startupTaints:\n                  description: |-\n                    StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                    within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                    daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                    purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                  items:\n                    description: |-\n                      The node this Taint is attached to has the \"effect\" on\n                      any pod that does not tolerate the Taint.\n                    properties:\n                      effect:\n                        description: |-\n                          Required. The effect of the taint on pods\n                          that do not tolerate the taint.\n                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                        type: string\n                        enum:\n                          - NoSchedule\n                          - PreferNoSchedule\n                          - NoExecute\n                      key:\n                        description: Required. The taint key to be applied to a node.\n                        type: string\n                        minLength: 1\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      timeAdded:\n                        description: |-\n                          TimeAdded represents the time at which the taint was added.\n                          It is only written for NoExecute taints.\n                        format: date-time\n                        type: string\n                      value:\n                        description: The taint value corresponding to the taint key.\n                        type: string\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                    required:\n                      - effect\n                      - key\n                    type: object\n                  type: array\n                taints:\n                  description: Taints will be applied to the NodeClaim's node.\n                  items:\n                    description: |-\n                      The node this Taint is attached to has the \"effect\" on\n                      any pod that does not tolerate the Taint.\n                    properties:\n                      effect:\n                        description: |-\n                          Required. The effect of the taint on pods\n                          that do not tolerate the taint.\n                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                        type: string\n                        enum:\n                          - NoSchedule\n                          - PreferNoSchedule\n                          - NoExecute\n                      key:\n                        description: Required. The taint key to be applied to a node.\n                        type: string\n                        minLength: 1\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      timeAdded:\n                        description: |-\n                          TimeAdded represents the time at which the taint was added.\n                          It is only written for NoExecute taints.\n                        format: date-time\n                        type: string\n                      value:\n                        description: The taint value corresponding to the taint key.\n                        type: string\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                    required:\n                      - effect\n                      - key\n                    type: object\n                  type: array\n              required:\n                - nodeClassRef\n                - requirements\n              type: object\n            status:\n              description: NodeClaimStatus defines the observed state of NodeClaim\n              properties:\n                allocatable:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Allocatable is the estimated allocatable capacity of the node\n                  type: object\n                capacity:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Capacity is the estimated full capacity of the node\n                  type: object\n                conditions:\n                  description: Conditions contains signals for health and readiness\n                  items:\n                    description: |-\n                      Condition defines a readiness condition for a Knative resource.\n                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties\n                    properties:\n                      lastTransitionTime:\n                        description: |-\n                          LastTransitionTime is the last time the condition transitioned from one status to another.\n                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\n                          differences (all other things held constant).\n                        type: string\n                      message:\n                        description: A human readable message indicating details about the transition.\n                        type: string\n                      reason:\n                        description: The reason for the condition's last transition.\n                        type: string\n                      severity:\n                        description: |-\n                          Severity with which to treat failures of this type of condition.\n                          When this is not specified, it defaults to Error.\n                        type: string\n                      status:\n                        description: Status of the condition, one of True, False, Unknown.\n                        type: string\n                      type:\n                        description: Type of condition.\n                        type: string\n                    required:\n                      - status\n                      - type\n                    type: object\n                  type: array\n                imageID:\n                  description: ImageID is an identifier for the image that runs on the node\n                  type: string\n                nodeName:\n                  description: NodeName is the name of the corresponding node object\n                  type: string\n                providerID:\n                  description: ProviderID of the corresponding node object\n                  type: string\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\n",
            "response_body_base64": "",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Sat, 15 Jun 2024 01:19:26 GMT",
              "Etag": "W/\"d380fd3022b4e8a86e07cedf479b1936ebcc2b97d06c7ff632d451eca2823729\"",
              "Expires": "Sat, 15 Jun 2024 01:24:26 GMT",
              "Source-Age": "94",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding,Origin",
              "Via": "1.1 varnish",
              "X-Cache": "HIT",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "62731d630e9f5783a754440b6f5fcdf9b64388f1",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "D770:11EC59:1079E3:13C8C0:666CD77E",
              "X-Served-By": "cache-qpg1282-QPG",
              "X-Timer": "S1718414367.860178,VS0,VE1",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodeclaims.yaml"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodepools.yaml",
          "schema_version": 0,
          "attributes": {
            "body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodepools.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n      - karpenter\n    kind: NodePool\n    listKind: NodePoolList\n    plural: nodepools\n    singular: nodepool\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - jsonPath: .spec.template.spec.nodeClassRef.name\n          name: NodeClass\n          type: string\n        - jsonPath: .spec.weight\n          name: Weight\n          priority: 1\n          type: string\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: NodePool is the Schema for the NodePools API\n          properties:\n            apiVersion:\n              description: |-\n                APIVersion defines the versioned schema of this representation of an object.\n                Servers should convert recognized schemas to the latest internal value, and\n                may reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n              type: string\n            kind:\n              description: |-\n                Kind is a string value representing the REST resource this object represents.\n                Servers may infer this from the endpoint the client submits requests to.\n                Cannot be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: |-\n                NodePoolSpec is the top level nodepool specification. Nodepools\n                launch nodes in response to pods that are unschedulable. A single nodepool\n                is capable of managing a diverse set of nodes. Node properties are determined\n                from a combination of nodepool and pod scheduling constraints.\n              properties:\n                disruption:\n                  default:\n                    consolidationPolicy: WhenUnderutilized\n                    expireAfter: 720h\n                  description: Disruption contains the parameters that relate to Karpenter's disruption logic\n                  properties:\n                    budgets:\n                      default:\n                        - nodes: 10%\n                      description: |-\n                        Budgets is a list of Budgets.\n                        If there are multiple active budgets, Karpenter uses\n                        the most restrictive value. If left undefined,\n                        this will default to one budget with a value to 10%.\n                      items:\n                        description: |-\n                          Budget defines when Karpenter will restrict the\n                          number of Node Claims that can be terminating simultaneously.\n                        properties:\n                          duration:\n                            description: |-\n                              Duration determines how long a Budget is active since each Schedule hit.\n                              Only minutes and hours are accepted, as cron does not work in seconds.\n                              If omitted, the budget is always active.\n                              This is required if Schedule is set.\n                              This regex has an optional 0s at the end since the duration.String() always adds\n                              a 0s at the end.\n                            pattern: ^((([0-9]+(h|m))|([0-9]+h[0-9]+m))(0s)?)$\n                            type: string\n                          nodes:\n                            default: 10%\n                            description: |-\n                              Nodes dictates the maximum number of NodeClaims owned by this NodePool\n                              that can be terminating at once. This is calculated by counting nodes that\n                              have a deletion timestamp set, or are actively being deleted by Karpenter.\n                              This field is required when specifying a budget.\n                              This cannot be of type intstr.IntOrString since kubebuilder doesn't support pattern\n                              checking for int nodes for IntOrString nodes.\n                              Ref: https://github.com/kubernetes-sigs/controller-tools/blob/55efe4be40394a288216dab63156b0a64fb82929/pkg/crd/markers/validation.go#L379-L388\n                            pattern: ^((100|[0-9]{1,2})%|[0-9]+)$\n                            type: string\n                          schedule:\n                            description: |-\n                              Schedule specifies when a budget begins being active, following\n                              the upstream cronjob syntax. If omitted, the budget is always active.\n                              Timezones are not supported.\n                              This field is required if Duration is set.\n                            pattern: ^(@(annually|yearly|monthly|weekly|daily|midnight|hourly))|((.+)\\s(.+)\\s(.+)\\s(.+)\\s(.+))$\n                            type: string\n                        required:\n                          - nodes\n                        type: object\n                      maxItems: 50\n                      type: array\n                      x-kubernetes-validations:\n                        - message: '''schedule'' must be set with ''duration'''\n                          rule: self.all(x, has(x.schedule) == has(x.duration))\n                    consolidateAfter:\n                      description: |-\n                        ConsolidateAfter is the duration the controller will wait\n                        before attempting to terminate nodes that are underutilized.\n                        Refer to ConsolidationPolicy for how underutilization is considered.\n                      pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                      type: string\n                    consolidationPolicy:\n                      default: WhenUnderutilized\n                      description: |-\n                        ConsolidationPolicy describes which nodes Karpenter can disrupt through its consolidation\n                        algorithm. This policy defaults to \"WhenUnderutilized\" if not specified\n                      enum:\n                        - WhenEmpty\n                        - WhenUnderutilized\n                      type: string\n                    expireAfter:\n                      default: 720h\n                      description: |-\n                        ExpireAfter is the duration the controller will wait\n                        before terminating a node, measured from when the node is created. This\n                        is useful to implement features like eventually consistent node upgrade,\n                        memory leak protection, and disruption testing.\n                      pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                      type: string\n                  type: object\n                  x-kubernetes-validations:\n                    - message: consolidateAfter cannot be combined with consolidationPolicy=WhenUnderutilized\n                      rule: 'has(self.consolidateAfter) ? self.consolidationPolicy != ''WhenUnderutilized'' || self.consolidateAfter == ''Never'' : true'\n                    - message: consolidateAfter must be specified with consolidationPolicy=WhenEmpty\n                      rule: 'self.consolidationPolicy == ''WhenEmpty'' ? has(self.consolidateAfter) : true'\n                limits:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Limits define a set of bounds for provisioning capacity.\n                  type: object\n                template:\n                  description: |-\n                    Template contains the template of possibilities for the provisioning logic to launch a NodeClaim with.\n                    NodeClaims launched from this NodePool will often be further constrained than the template specifies.\n                  properties:\n                    metadata:\n                      properties:\n                        annotations:\n                          additionalProperties:\n                            type: string\n                          description: |-\n                            Annotations is an unstructured key value map stored with a resource that may be\n                            set by external tools to store and retrieve arbitrary metadata. They are not\n                            queryable and should be preserved when modifying objects.\n                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n                          type: object\n                        labels:\n                          additionalProperties:\n                            type: string\n                            maxLength: 63\n                            pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                          description: |-\n                            Map of string keys and values that can be used to organize and categorize\n                            (scope and select) objects. May match selectors of replication controllers\n                            and services.\n                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n                          type: object\n                          maxProperties: 100\n                          x-kubernetes-validations:\n                            - message: label domain \"kubernetes.io\" is restricted\n                              rule: self.all(x, x in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\",  \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || x.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || x.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !x.find(\"^([^/]+)\").endsWith(\"kubernetes.io\"))\n                            - message: label domain \"k8s.io\" is restricted\n                              rule: self.all(x, x.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !x.find(\"^([^/]+)\").endsWith(\"k8s.io\"))\n                            - message: label domain \"karpenter.sh\" is restricted\n                              rule: self.all(x, x in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.sh\"))\n                            - message: label \"karpenter.sh/nodepool\" is restricted\n                              rule: self.all(x, x != \"karpenter.sh/nodepool\")\n                            - message: label \"kubernetes.io/hostname\" is restricted\n                              rule: self.all(x, x != \"kubernetes.io/hostname\")\n                            - message: label domain \"karpenter.k8s.aws\" is restricted\n                              rule: self.all(x, x in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\"))\n                      type: object\n                    spec:\n                      description: NodeClaimSpec describes the desired state of the NodeClaim\n                      properties:\n                        kubelet:\n                          description: |-\n                            Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                            They are a subset of the upstream types, recognizing not all options may be supported.\n                            Wherever possible, the types and names should reflect the upstream kubelet types.\n                          properties:\n                            clusterDNS:\n                              description: |-\n                                clusterDNS is a list of IP addresses for the cluster DNS server.\n                                Note that not all providers may use all addresses.\n                              items:\n                                type: string\n                              type: array\n                            cpuCFSQuota:\n                              description: CPUCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits.\n                              type: boolean\n                            evictionHard:\n                              additionalProperties:\n                                type: string\n                                pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              description: EvictionHard is the map of signal names to quantities that define hard eviction thresholds\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            evictionMaxPodGracePeriod:\n                              description: |-\n                                EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                                response to soft eviction thresholds being met.\n                              format: int32\n                              type: integer\n                            evictionSoft:\n                              additionalProperties:\n                                type: string\n                                pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              description: EvictionSoft is the map of signal names to quantities that define soft eviction thresholds\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            evictionSoftGracePeriod:\n                              additionalProperties:\n                                type: string\n                              description: EvictionSoftGracePeriod is the map of signal names to quantities that define grace periods for each eviction signal\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            imageGCHighThresholdPercent:\n                              description: |-\n                                ImageGCHighThresholdPercent is the percent of disk usage after which image\n                                garbage collection is always run. The percent is calculated by dividing this\n                                field value by 100, so this field must be between 0 and 100, inclusive.\n                                When specified, the value must be greater than ImageGCLowThresholdPercent.\n                              format: int32\n                              maximum: 100\n                              minimum: 0\n                              type: integer\n                            imageGCLowThresholdPercent:\n                              description: |-\n                                ImageGCLowThresholdPercent is the percent of disk usage before which image\n                                garbage collection is never run. Lowest disk usage to garbage collect to.\n                                The percent is calculated by dividing this field value by 100,\n                                so the field value must be between 0 and 100, inclusive.\n                                When specified, the value must be less than imageGCHighThresholdPercent\n                              format: int32\n                              maximum: 100\n                              minimum: 0\n                              type: integer\n                            kubeReserved:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: KubeReserved contains resources reserved for Kubernetes system components.\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                                  rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                                - message: kubeReserved value cannot be a negative resource quantity\n                                  rule: self.all(x, !self[x].startsWith('-'))\n                            maxPods:\n                              description: |-\n                                MaxPods is an override for the maximum number of pods that can run on\n                                a worker node instance.\n                              format: int32\n                              minimum: 0\n                              type: integer\n                            podsPerCore:\n                              description: |-\n                                PodsPerCore is an override for the number of pods that can run on a worker node\n                                instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                                MaxPods is a lower value, that value will be used.\n                              format: int32\n                              minimum: 0\n                              type: integer\n                            systemReserved:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: SystemReserved contains resources reserved for OS system daemons and kernel memory.\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                                  rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                                - message: systemReserved value cannot be a negative resource quantity\n                                  rule: self.all(x, !self[x].startsWith('-'))\n                          type: object\n                          x-kubernetes-validations:\n                            - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent\n                              rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent) ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  : true'\n                            - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod\n                              rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true\n                            - message: evictionSoftGracePeriod OwnerKey does not have a matching evictionSoft\n                              rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e, (e in self.evictionSoft)):true\n                        nodeClassRef:\n                          description: NodeClassRef is a reference to an object that defines provider specific configuration\n                          properties:\n                            apiVersion:\n                              description: API version of the referent\n                              type: string\n                            kind:\n                              description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                              type: string\n                            name:\n                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                              type: string\n                          required:\n                            - name\n                          type: object\n                        requirements:\n                          description: Requirements are layered with GetLabels and applied to every node.\n                          items:\n                            description: |-\n                              A node selector requirement is a selector that contains values, a key, and an operator\n                              that relates the key and values.\n                            properties:\n                              key:\n                                description: The label key that the selector applies to.\n                                type: string\n                                maxLength: 316\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                                x-kubernetes-validations:\n                                  - message: label domain \"kubernetes.io\" is restricted\n                                    rule: self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                                  - message: label domain \"k8s.io\" is restricted\n                                    rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                                  - message: label domain \"karpenter.sh\" is restricted\n                                    rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                                  - message: label \"karpenter.sh/nodepool\" is restricted\n                                    rule: self != \"karpenter.sh/nodepool\"\n                                  - message: label \"kubernetes.io/hostname\" is restricted\n                                    rule: self != \"kubernetes.io/hostname\"\n                                  - message: label domain \"karpenter.k8s.aws\" is restricted\n                                    rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                              operator:\n                                description: |-\n                                  Represents a key's relationship to a set of values.\n                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                                type: string\n                                enum:\n                                  - In\n                                  - NotIn\n                                  - Exists\n                                  - DoesNotExist\n                                  - Gt\n                                  - Lt\n                              values:\n                                description: |-\n                                  An array of string values. If the operator is In or NotIn,\n                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                                  the values array must be empty. If the operator is Gt or Lt, the values\n                                  array must have a single element, which will be interpreted as an integer.\n                                  This array is replaced during a strategic merge patch.\n                                items:\n                                  type: string\n                                type: array\n                                maxLength: 63\n                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                            required:\n                              - key\n                              - operator\n                            type: object\n                          maxItems: 30\n                          type: array\n                          x-kubernetes-validations:\n                            - message: requirements with operator 'In' must have a value defined\n                              rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 : true)'\n                            - message: requirements operator 'Gt' or 'Lt' must have a single positive integer value\n                              rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)'\n                        resources:\n                          description: Resources models the resource requirements for the NodeClaim to launch\n                          properties:\n                            requests:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: Requests describes the minimum required resources for the NodeClaim to launch\n                              type: object\n                          type: object\n                          maxProperties: 0\n                        startupTaints:\n                          description: |-\n                            StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                            within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                            daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                            purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                          items:\n                            description: |-\n                              The node this Taint is attached to has the \"effect\" on\n                              any pod that does not tolerate the Taint.\n                            properties:\n                              effect:\n                                description: |-\n                                  Required. The effect of the taint on pods\n                                  that do not tolerate the taint.\n                                  Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                                type: string\n                                enum:\n                                  - NoSchedule\n                                  - PreferNoSchedule\n                                  - NoExecute\n                              key:\n                                description: Required. The taint key to be applied to a node.\n                                type: string\n                                minLength: 1\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              timeAdded:\n                                description: |-\n                                  TimeAdded represents the time at which the taint was added.\n                                  It is only written for NoExecute taints.\n                                format: date-time\n                                type: string\n                              value:\n                                description: The taint value corresponding to the taint key.\n                                type: string\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                            required:\n                              - effect\n                              - key\n                            type: object\n                          type: array\n                        taints:\n                          description: Taints will be applied to the NodeClaim's node.\n                          items:\n                            description: |-\n                              The node this Taint is attached to has the \"effect\" on\n                              any pod that does not tolerate the Taint.\n                            properties:\n                              effect:\n                                description: |-\n                                  Required. The effect of the taint on pods\n                                  that do not tolerate the taint.\n                                  Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                                type: string\n                                enum:\n                                  - NoSchedule\n                                  - PreferNoSchedule\n                                  - NoExecute\n                              key:\n                                description: Required. The taint key to be applied to a node.\n                                type: string\n                                minLength: 1\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              timeAdded:\n                                description: |-\n                                  TimeAdded represents the time at which the taint was added.\n                                  It is only written for NoExecute taints.\n                                format: date-time\n                                type: string\n                              value:\n                                description: The taint value corresponding to the taint key.\n                                type: string\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                            required:\n                              - effect\n                              - key\n                            type: object\n                          type: array\n                      required:\n                        - nodeClassRef\n                        - requirements\n                      type: object\n                  required:\n                    - spec\n                  type: object\n                weight:\n                  description: |-\n                    Weight is the priority given to the nodepool during scheduling. A higher\n                    numerical weight indicates that this nodepool will be ordered\n                    ahead of other nodepools with lower weights. A nodepool with no weight\n                    will be treated as if it is a nodepool with a weight of 0.\n                  format: int32\n                  maximum: 100\n                  minimum: 1\n                  type: integer\n              required:\n                - template\n              type: object\n            status:\n              description: NodePoolStatus defines the observed state of NodePool\n              properties:\n                resources:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Resources is the list of resources that have been provisioned.\n                  type: object\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\n",
            "ca_cert_pem": null,
            "id": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodepools.yaml",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodepools.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n      - karpenter\n    kind: NodePool\n    listKind: NodePoolList\n    plural: nodepools\n    singular: nodepool\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - jsonPath: .spec.template.spec.nodeClassRef.name\n          name: NodeClass\n          type: string\n        - jsonPath: .spec.weight\n          name: Weight\n          priority: 1\n          type: string\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: NodePool is the Schema for the NodePools API\n          properties:\n            apiVersion:\n              description: |-\n                APIVersion defines the versioned schema of this representation of an object.\n                Servers should convert recognized schemas to the latest internal value, and\n                may reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n              type: string\n            kind:\n              description: |-\n                Kind is a string value representing the REST resource this object represents.\n                Servers may infer this from the endpoint the client submits requests to.\n                Cannot be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: |-\n                NodePoolSpec is the top level nodepool specification. Nodepools\n                launch nodes in response to pods that are unschedulable. A single nodepool\n                is capable of managing a diverse set of nodes. Node properties are determined\n                from a combination of nodepool and pod scheduling constraints.\n              properties:\n                disruption:\n                  default:\n                    consolidationPolicy: WhenUnderutilized\n                    expireAfter: 720h\n                  description: Disruption contains the parameters that relate to Karpenter's disruption logic\n                  properties:\n                    budgets:\n                      default:\n                        - nodes: 10%\n                      description: |-\n                        Budgets is a list of Budgets.\n                        If there are multiple active budgets, Karpenter uses\n                        the most restrictive value. If left undefined,\n                        this will default to one budget with a value to 10%.\n                      items:\n                        description: |-\n                          Budget defines when Karpenter will restrict the\n                          number of Node Claims that can be terminating simultaneously.\n                        properties:\n                          duration:\n                            description: |-\n                              Duration determines how long a Budget is active since each Schedule hit.\n                              Only minutes and hours are accepted, as cron does not work in seconds.\n                              If omitted, the budget is always active.\n                              This is required if Schedule is set.\n                              This regex has an optional 0s at the end since the duration.String() always adds\n                              a 0s at the end.\n                            pattern: ^((([0-9]+(h|m))|([0-9]+h[0-9]+m))(0s)?)$\n                            type: string\n                          nodes:\n                            default: 10%\n                            description: |-\n                              Nodes dictates the maximum number of NodeClaims owned by this NodePool\n                              that can be terminating at once. This is calculated by counting nodes that\n                              have a deletion timestamp set, or are actively being deleted by Karpenter.\n                              This field is required when specifying a budget.\n                              This cannot be of type intstr.IntOrString since kubebuilder doesn't support pattern\n                              checking for int nodes for IntOrString nodes.\n                              Ref: https://github.com/kubernetes-sigs/controller-tools/blob/55efe4be40394a288216dab63156b0a64fb82929/pkg/crd/markers/validation.go#L379-L388\n                            pattern: ^((100|[0-9]{1,2})%|[0-9]+)$\n                            type: string\n                          schedule:\n                            description: |-\n                              Schedule specifies when a budget begins being active, following\n                              the upstream cronjob syntax. If omitted, the budget is always active.\n                              Timezones are not supported.\n                              This field is required if Duration is set.\n                            pattern: ^(@(annually|yearly|monthly|weekly|daily|midnight|hourly))|((.+)\\s(.+)\\s(.+)\\s(.+)\\s(.+))$\n                            type: string\n                        required:\n                          - nodes\n                        type: object\n                      maxItems: 50\n                      type: array\n                      x-kubernetes-validations:\n                        - message: '''schedule'' must be set with ''duration'''\n                          rule: self.all(x, has(x.schedule) == has(x.duration))\n                    consolidateAfter:\n                      description: |-\n                        ConsolidateAfter is the duration the controller will wait\n                        before attempting to terminate nodes that are underutilized.\n                        Refer to ConsolidationPolicy for how underutilization is considered.\n                      pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                      type: string\n                    consolidationPolicy:\n                      default: WhenUnderutilized\n                      description: |-\n                        ConsolidationPolicy describes which nodes Karpenter can disrupt through its consolidation\n                        algorithm. This policy defaults to \"WhenUnderutilized\" if not specified\n                      enum:\n                        - WhenEmpty\n                        - WhenUnderutilized\n                      type: string\n                    expireAfter:\n                      default: 720h\n                      description: |-\n                        ExpireAfter is the duration the controller will wait\n                        before terminating a node, measured from when the node is created. This\n                        is useful to implement features like eventually consistent node upgrade,\n                        memory leak protection, and disruption testing.\n                      pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                      type: string\n                  type: object\n                  x-kubernetes-validations:\n                    - message: consolidateAfter cannot be combined with consolidationPolicy=WhenUnderutilized\n                      rule: 'has(self.consolidateAfter) ? self.consolidationPolicy != ''WhenUnderutilized'' || self.consolidateAfter == ''Never'' : true'\n                    - message: consolidateAfter must be specified with consolidationPolicy=WhenEmpty\n                      rule: 'self.consolidationPolicy == ''WhenEmpty'' ? has(self.consolidateAfter) : true'\n                limits:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Limits define a set of bounds for provisioning capacity.\n                  type: object\n                template:\n                  description: |-\n                    Template contains the template of possibilities for the provisioning logic to launch a NodeClaim with.\n                    NodeClaims launched from this NodePool will often be further constrained than the template specifies.\n                  properties:\n                    metadata:\n                      properties:\n                        annotations:\n                          additionalProperties:\n                            type: string\n                          description: |-\n                            Annotations is an unstructured key value map stored with a resource that may be\n                            set by external tools to store and retrieve arbitrary metadata. They are not\n                            queryable and should be preserved when modifying objects.\n                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n                          type: object\n                        labels:\n                          additionalProperties:\n                            type: string\n                            maxLength: 63\n                            pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                          description: |-\n                            Map of string keys and values that can be used to organize and categorize\n                            (scope and select) objects. May match selectors of replication controllers\n                            and services.\n                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n                          type: object\n                          maxProperties: 100\n                          x-kubernetes-validations:\n                            - message: label domain \"kubernetes.io\" is restricted\n                              rule: self.all(x, x in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\",  \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || x.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || x.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !x.find(\"^([^/]+)\").endsWith(\"kubernetes.io\"))\n                            - message: label domain \"k8s.io\" is restricted\n                              rule: self.all(x, x.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !x.find(\"^([^/]+)\").endsWith(\"k8s.io\"))\n                            - message: label domain \"karpenter.sh\" is restricted\n                              rule: self.all(x, x in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.sh\"))\n                            - message: label \"karpenter.sh/nodepool\" is restricted\n                              rule: self.all(x, x != \"karpenter.sh/nodepool\")\n                            - message: label \"kubernetes.io/hostname\" is restricted\n                              rule: self.all(x, x != \"kubernetes.io/hostname\")\n                            - message: label domain \"karpenter.k8s.aws\" is restricted\n                              rule: self.all(x, x in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\"))\n                      type: object\n                    spec:\n                      description: NodeClaimSpec describes the desired state of the NodeClaim\n                      properties:\n                        kubelet:\n                          description: |-\n                            Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                            They are a subset of the upstream types, recognizing not all options may be supported.\n                            Wherever possible, the types and names should reflect the upstream kubelet types.\n                          properties:\n                            clusterDNS:\n                              description: |-\n                                clusterDNS is a list of IP addresses for the cluster DNS server.\n                                Note that not all providers may use all addresses.\n                              items:\n                                type: string\n                              type: array\n                            cpuCFSQuota:\n                              description: CPUCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits.\n                              type: boolean\n                            evictionHard:\n                              additionalProperties:\n                                type: string\n                                pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              description: EvictionHard is the map of signal names to quantities that define hard eviction thresholds\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            evictionMaxPodGracePeriod:\n                              description: |-\n                                EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                                response to soft eviction thresholds being met.\n                              format: int32\n                              type: integer\n                            evictionSoft:\n                              additionalProperties:\n                                type: string\n                                pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              description: EvictionSoft is the map of signal names to quantities that define soft eviction thresholds\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            evictionSoftGracePeriod:\n                              additionalProperties:\n                                type: string\n                              description: EvictionSoftGracePeriod is the map of signal names to quantities that define grace periods for each eviction signal\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            imageGCHighThresholdPercent:\n                              description: |-\n                                ImageGCHighThresholdPercent is the percent of disk usage after which image\n                                garbage collection is always run. The percent is calculated by dividing this\n                                field value by 100, so this field must be between 0 and 100, inclusive.\n                                When specified, the value must be greater than ImageGCLowThresholdPercent.\n                              format: int32\n                              maximum: 100\n                              minimum: 0\n                              type: integer\n                            imageGCLowThresholdPercent:\n                              description: |-\n                                ImageGCLowThresholdPercent is the percent of disk usage before which image\n                                garbage collection is never run. Lowest disk usage to garbage collect to.\n                                The percent is calculated by dividing this field value by 100,\n                                so the field value must be between 0 and 100, inclusive.\n                                When specified, the value must be less than imageGCHighThresholdPercent\n                              format: int32\n                              maximum: 100\n                              minimum: 0\n                              type: integer\n                            kubeReserved:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: KubeReserved contains resources reserved for Kubernetes system components.\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                                  rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                                - message: kubeReserved value cannot be a negative resource quantity\n                                  rule: self.all(x, !self[x].startsWith('-'))\n                            maxPods:\n                              description: |-\n                                MaxPods is an override for the maximum number of pods that can run on\n                                a worker node instance.\n                              format: int32\n                              minimum: 0\n                              type: integer\n                            podsPerCore:\n                              description: |-\n                                PodsPerCore is an override for the number of pods that can run on a worker node\n                                instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                                MaxPods is a lower value, that value will be used.\n                              format: int32\n                              minimum: 0\n                              type: integer\n                            systemReserved:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: SystemReserved contains resources reserved for OS system daemons and kernel memory.\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                                  rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                                - message: systemReserved value cannot be a negative resource quantity\n                                  rule: self.all(x, !self[x].startsWith('-'))\n                          type: object\n                          x-kubernetes-validations:\n                            - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent\n                              rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent) ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  : true'\n                            - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod\n                              rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true\n                            - message: evictionSoftGracePeriod OwnerKey does not have a matching evictionSoft\n                              rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e, (e in self.evictionSoft)):true\n                        nodeClassRef:\n                          description: NodeClassRef is a reference to an object that defines provider specific configuration\n                          properties:\n                            apiVersion:\n                              description: API version of the referent\n                              type: string\n                            kind:\n                              description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                              type: string\n                            name:\n                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                              type: string\n                          required:\n                            - name\n                          type: object\n                        requirements:\n                          description: Requirements are layered with GetLabels and applied to every node.\n                          items:\n                            description: |-\n                              A node selector requirement is a selector that contains values, a key, and an operator\n                              that relates the key and values.\n                            properties:\n                              key:\n                                description: The label key that the selector applies to.\n                                type: string\n                                maxLength: 316\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                                x-kubernetes-validations:\n                                  - message: label domain \"kubernetes.io\" is restricted\n                                    rule: self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                                  - message: label domain \"k8s.io\" is restricted\n                                    rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                                  - message: label domain \"karpenter.sh\" is restricted\n                                    rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                                  - message: label \"karpenter.sh/nodepool\" is restricted\n                                    rule: self != \"karpenter.sh/nodepool\"\n                                  - message: label \"kubernetes.io/hostname\" is restricted\n                                    rule: self != \"kubernetes.io/hostname\"\n                                  - message: label domain \"karpenter.k8s.aws\" is restricted\n                                    rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                              operator:\n                                description: |-\n                                  Represents a key's relationship to a set of values.\n                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                                type: string\n                                enum:\n                                  - In\n                                  - NotIn\n                                  - Exists\n                                  - DoesNotExist\n                                  - Gt\n                                  - Lt\n                              values:\n                                description: |-\n                                  An array of string values. If the operator is In or NotIn,\n                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                                  the values array must be empty. If the operator is Gt or Lt, the values\n                                  array must have a single element, which will be interpreted as an integer.\n                                  This array is replaced during a strategic merge patch.\n                                items:\n                                  type: string\n                                type: array\n                                maxLength: 63\n                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                            required:\n                              - key\n                              - operator\n                            type: object\n                          maxItems: 30\n                          type: array\n                          x-kubernetes-validations:\n                            - message: requirements with operator 'In' must have a value defined\n                              rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 : true)'\n                            - message: requirements operator 'Gt' or 'Lt' must have a single positive integer value\n                              rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)'\n                        resources:\n                          description: Resources models the resource requirements for the NodeClaim to launch\n                          properties:\n                            requests:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: Requests describes the minimum required resources for the NodeClaim to launch\n                              type: object\n                          type: object\n                          maxProperties: 0\n                        startupTaints:\n                          description: |-\n                            StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                            within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                            daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                            purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                          items:\n                            description: |-\n                              The node this Taint is attached to has the \"effect\" on\n                              any pod that does not tolerate the Taint.\n                            properties:\n                              effect:\n                                description: |-\n                                  Required. The effect of the taint on pods\n                                  that do not tolerate the taint.\n                                  Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                                type: string\n                                enum:\n                                  - NoSchedule\n                                  - PreferNoSchedule\n                                  - NoExecute\n                              key:\n                                description: Required. The taint key to be applied to a node.\n                                type: string\n                                minLength: 1\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              timeAdded:\n                                description: |-\n                                  TimeAdded represents the time at which the taint was added.\n                                  It is only written for NoExecute taints.\n                                format: date-time\n                                type: string\n                              value:\n                                description: The taint value corresponding to the taint key.\n                                type: string\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                            required:\n                              - effect\n                              - key\n                            type: object\n                          type: array\n                        taints:\n                          description: Taints will be applied to the NodeClaim's node.\n                          items:\n                            description: |-\n                              The node this Taint is attached to has the \"effect\" on\n                              any pod that does not tolerate the Taint.\n                            properties:\n                              effect:\n                                description: |-\n                                  Required. The effect of the taint on pods\n                                  that do not tolerate the taint.\n                                  Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                                type: string\n                                enum:\n                                  - NoSchedule\n                                  - PreferNoSchedule\n                                  - NoExecute\n                              key:\n                                description: Required. The taint key to be applied to a node.\n                                type: string\n                                minLength: 1\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              timeAdded:\n                                description: |-\n                                  TimeAdded represents the time at which the taint was added.\n                                  It is only written for NoExecute taints.\n                                format: date-time\n                                type: string\n                              value:\n                                description: The taint value corresponding to the taint key.\n                                type: string\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                            required:\n                              - effect\n                              - key\n                            type: object\n                          type: array\n                      required:\n                        - nodeClassRef\n                        - requirements\n                      type: object\n                  required:\n                    - spec\n                  type: object\n                weight:\n                  description: |-\n                    Weight is the priority given to the nodepool during scheduling. A higher\n                    numerical weight indicates that this nodepool will be ordered\n                    ahead of other nodepools with lower weights. A nodepool with no weight\n                    will be treated as if it is a nodepool with a weight of 0.\n                  format: int32\n                  maximum: 100\n                  minimum: 1\n                  type: integer\n              required:\n                - template\n              type: object\n            status:\n              description: NodePoolStatus defines the observed state of NodePool\n              properties:\n                resources:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Resources is the list of resources that have been provisioned.\n                  type: object\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\n",
            "response_body_base64": "",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Sat, 15 Jun 2024 01:19:26 GMT",
              "Etag": "W/\"907661244e50fbe273c04f3899cb6e55fa65b398c88aa0388f84588b6f859346\"",
              "Expires": "Sat, 15 Jun 2024 01:24:26 GMT",
              "Source-Age": "94",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding,Origin",
              "Via": "1.1 varnish",
              "X-Cache": "HIT",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "0ded8ccc27ca5005b832c4aedb52fae148b2645b",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "630E:498E2:32378D:3CA6C6:666CD77E",
              "X-Served-By": "cache-qpg1237-QPG",
              "X-Timer": "S1718414367.859969,VS0,VE1",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodepools.yaml"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter-crds",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "crd",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.k8s.aws_ec2nodeclasses.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/ec2nodeclasses.karpenter.k8s.aws",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "8654a1a3fe04df8ba0d08ff2504541c80434264d76a4f3207e8f9708ae89cb31",
            "live_uid": "6251ffd6-6d0e-4c36-bfc1-d7b6a587ab8e",
            "name": "ec2nodeclasses.karpenter.k8s.aws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6251ffd6-6d0e-4c36-bfc1-d7b6a587ab8e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.15.0\n  name: ec2nodeclasses.karpenter.k8s.aws\nspec:\n  group: karpenter.k8s.aws\n  names:\n    categories:\n    - karpenter\n    kind: EC2NodeClass\n    listKind: EC2NodeClassList\n    plural: ec2nodeclasses\n    shortNames:\n    - ec2nc\n    - ec2ncs\n    singular: ec2nodeclass\n  scope: Cluster\n  versions:\n  - name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: EC2NodeClass is the Schema for the EC2NodeClass API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: |-\n              EC2NodeClassSpec is the top level specification for the AWS Karpenter Provider.\n              This will contain configuration necessary to launch instances in AWS.\n            properties:\n              amiFamily:\n                description: AMIFamily is the AMI family that instances use.\n                enum:\n                - AL2\n                - Bottlerocket\n                - Ubuntu\n                - Custom\n                - Windows2019\n                - Windows2022\n                type: string\n              amiSelectorTerms:\n                description: AMISelectorTerms is a list of or ami selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    AMISelectorTerm defines selection logic for an ami used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the ami id in EC2\n                      pattern: ami-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the ami name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    owner:\n                      description: |-\n                        Owner is the owner for the ami.\n                        You can specify a combination of AWS account IDs, \"self\", \"amazon\", and \"aws-marketplace\"\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in amiSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name) ||\n                    has(x.owner)))'\n              blockDeviceMappings:\n                description: BlockDeviceMappings to be applied to provisioned nodes.\n                items:\n                  properties:\n                    deviceName:\n                      description: The device name (for example, /dev/sdh or xvdh).\n                      type: string\n                    ebs:\n                      description: EBS contains parameters used to automatically set\n                        up EBS volumes when an instance is launched.\n                      properties:\n                        deleteOnTermination:\n                          description: DeleteOnTermination indicates whether the EBS\n                            volume is deleted on instance termination.\n                          type: boolean\n                        encrypted:\n                          description: |-\n                            Encrypted indicates whether the EBS volume is encrypted. Encrypted volumes can only\n                            be attached to instances that support Amazon EBS encryption. If you are creating\n                            a volume from a snapshot, you can't specify an encryption value.\n                          type: boolean\n                        iops:\n                          description: |-\n                            IOPS is the number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes,\n                            this represents the number of IOPS that are provisioned for the volume. For\n                            gp2 volumes, this represents the baseline performance of the volume and the\n                            rate at which the volume accumulates I/O credits for bursting.\n\n\n                            The following are the supported values for each volume type:\n\n\n                               * gp3: 3,000-16,000 IOPS\n\n\n                               * io1: 100-64,000 IOPS\n\n\n                               * io2: 100-64,000 IOPS\n\n\n                            For io1 and io2 volumes, we guarantee 64,000 IOPS only for Instances built\n                            on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).\n                            Other instance families guarantee performance up to 32,000 IOPS.\n\n\n                            This parameter is supported for io1, io2, and gp3 volumes only. This parameter\n                            is not supported for gp2, st1, sc1, or standard volumes.\n                          format: int64\n                          type: integer\n                        kmsKeyID:\n                          description: KMSKeyID (ARN) of the symmetric Key Management\n                            Service (KMS) CMK used for encryption.\n                          type: string\n                        snapshotID:\n                          description: SnapshotID is the ID of an EBS snapshot\n                          type: string\n                        throughput:\n                          description: |-\n                            Throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s.\n                            Valid Range: Minimum value of 125. Maximum value of 1000.\n                          format: int64\n                          type: integer\n                        volumeSize:\n                          allOf:\n                          - pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                          - pattern: ^((?:[1-9][0-9]{0,3}|[1-4][0-9]{4}|[5][0-8][0-9]{3}|59000)Gi|(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|[6][0-3][0-9]{3}|64000)G|([1-9]||[1-5][0-7]|58)Ti|([1-9]||[1-5][0-9]|6[0-3]|64)T)$\n                          anyOf:\n                          - type: integer\n                          - type: string\n                          description: |-\n                            VolumeSize in `Gi`, `G`, `Ti`, or `T`. You must specify either a snapshot ID or\n                            a volume size. The following are the supported volumes sizes for each volume\n                            type:\n\n\n                               * gp2 and gp3: 1-16,384\n\n\n                               * io1 and io2: 4-16,384\n\n\n                               * st1 and sc1: 125-16,384\n\n\n                               * standard: 1-1,024\n                          x-kubernetes-int-or-string: true\n                        volumeType:\n                          description: |-\n                            VolumeType of the block device.\n                            For more information, see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html)\n                            in the Amazon Elastic Compute Cloud User Guide.\n                          enum:\n                          - standard\n                          - io1\n                          - io2\n                          - gp2\n                          - sc1\n                          - st1\n                          - gp3\n                          type: string\n                      type: object\n                      x-kubernetes-validations:\n                      - message: snapshotID or volumeSize must be defined\n                        rule: has(self.snapshotID) || has(self.volumeSize)\n                    rootVolume:\n                      description: |-\n                        RootVolume is a flag indicating if this device is mounted as kubelet root dir. You can\n                        configure at most one root volume in BlockDeviceMappings.\n                      type: boolean\n                  type: object\n                maxItems: 50\n                type: array\n                x-kubernetes-validations:\n                - message: must have only one blockDeviceMappings with rootVolume\n                  rule: self.filter(x, has(x.rootVolume)?x.rootVolume==true:false).size()\n                    \u003c= 1\n              context:\n                description: |-\n                  Context is a Reserved field in EC2 APIs\n                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html\n                type: string\n              detailedMonitoring:\n                description: DetailedMonitoring controls if detailed monitoring is\n                  enabled for instances that are launched\n                type: boolean\n              instanceProfile:\n                description: |-\n                  InstanceProfile is the AWS entity that instances use.\n                  This field is mutually exclusive from role.\n                  The instance profile should already have a role assigned to it that Karpenter\n                   has PassRole permission on for instance launch using this instanceProfile to succeed.\n                type: string\n                x-kubernetes-validations:\n                - message: instanceProfile cannot be empty\n                  rule: self != ''\n              instanceStorePolicy:\n                description: InstanceStorePolicy specifies how to handle instance-store\n                  disks.\n                enum:\n                - RAID0\n                type: string\n              metadataOptions:\n                default:\n                  httpEndpoint: enabled\n                  httpProtocolIPv6: disabled\n                  httpPutResponseHopLimit: 2\n                  httpTokens: required\n                description: |-\n                  MetadataOptions for the generated launch template of provisioned nodes.\n\n\n                  This specifies the exposure of the Instance Metadata Service to\n                  provisioned EC2 nodes. For more information,\n                  see Instance Metadata and User Data\n                  (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)\n                  in the Amazon Elastic Compute Cloud User Guide.\n\n\n                  Refer to recommended, security best practices\n                  (https://aws.github.io/aws-eks-best-practices/security/docs/iam/#restrict-access-to-the-instance-profile-assigned-to-the-worker-node)\n                  for limiting exposure of Instance Metadata and User Data to pods.\n                  If omitted, defaults to httpEndpoint enabled, with httpProtocolIPv6\n                  disabled, with httpPutResponseLimit of 2, and with httpTokens\n                  required.\n                properties:\n                  httpEndpoint:\n                    default: enabled\n                    description: |-\n                      HTTPEndpoint enables or disables the HTTP metadata endpoint on provisioned\n                      nodes. If metadata options is non-nil, but this parameter is not specified,\n                      the default state is \"enabled\".\n\n\n                      If you specify a value of \"disabled\", instance metadata will not be accessible\n                      on the node.\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpProtocolIPv6:\n                    default: disabled\n                    description: |-\n                      HTTPProtocolIPv6 enables or disables the IPv6 endpoint for the instance metadata\n                      service on provisioned nodes. If metadata options is non-nil, but this parameter\n                      is not specified, the default state is \"disabled\".\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpPutResponseHopLimit:\n                    default: 2\n                    description: |-\n                      HTTPPutResponseHopLimit is the desired HTTP PUT response hop limit for\n                      instance metadata requests. The larger the number, the further instance\n                      metadata requests can travel. Possible values are integers from 1 to 64.\n                      If metadata options is non-nil, but this parameter is not specified, the\n                      default value is 2.\n                    format: int64\n                    maximum: 64\n                    minimum: 1\n                    type: integer\n                  httpTokens:\n                    default: required\n                    description: |-\n                      HTTPTokens determines the state of token usage for instance metadata\n                      requests. If metadata options is non-nil, but this parameter is not\n                      specified, the default state is \"required\".\n\n\n                      If the state is optional, one can choose to retrieve instance metadata with\n                      or without a signed token header on the request. If one retrieves the IAM\n                      role credentials without a token, the version 1.0 role credentials are\n                      returned. If one retrieves the IAM role credentials using a valid signed\n                      token, the version 2.0 role credentials are returned.\n\n\n                      If the state is \"required\", one must send a signed token header with any\n                      instance metadata retrieval requests. In this state, retrieving the IAM\n                      role credentials always returns the version 2.0 credentials; the version\n                      1.0 credentials are not available.\n                    enum:\n                    - required\n                    - optional\n                    type: string\n                type: object\n              role:\n                description: |-\n                  Role is the AWS identity that nodes use. This field is immutable.\n                  This field is mutually exclusive from instanceProfile.\n                  Marking this field as immutable avoids concerns around terminating managed instance profiles from running instances.\n                  This field may be made mutable in the future, assuming the correct garbage collection and drift handling is implemented\n                  for the old instance profiles on an update.\n                type: string\n                x-kubernetes-validations:\n                - message: role cannot be empty\n                  rule: self != ''\n                - message: immutable field changed\n                  rule: self == oldSelf\n              securityGroupSelectorTerms:\n                description: SecurityGroupSelectorTerms is a list of or security group\n                  selector terms. The terms are ORed.\n                items:\n                  description: |-\n                    SecurityGroupSelectorTerm defines selection logic for a security group used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the security group id in EC2\n                      pattern: sg-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the security group name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: securityGroupSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name)))'\n                - message: '''name'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.name) \u0026\u0026 (has(x.tags) || has(x.id)))'\n              subnetSelectorTerms:\n                description: SubnetSelectorTerms is a list of or subnet selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    SubnetSelectorTerm defines selection logic for a subnet used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the subnet id in EC2\n                      pattern: subnet-[0-9a-z]+\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: subnetSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id']\n                  rule: self.all(x, has(x.tags) || has(x.id))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in subnetSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 has(x.tags))'\n              tags:\n                additionalProperties:\n                  type: string\n                description: Tags to be applied on ec2 resources like instances and\n                  launch templates.\n                type: object\n                x-kubernetes-validations:\n                - message: empty tag keys aren't supported\n                  rule: self.all(k, k != '')\n                - message: tag contains a restricted tag matching kubernetes.io/cluster/\n                  rule: self.all(k, !k.startsWith('kubernetes.io/cluster') )\n                - message: tag contains a restricted tag matching karpenter.sh/provisioner-name\n                  rule: self.all(k, k != 'karpenter.sh/provisioner-name')\n                - message: tag contains a restricted tag matching karpenter.sh/nodepool\n                  rule: self.all(k, k != 'karpenter.sh/nodepool')\n                - message: tag contains a restricted tag matching karpenter.sh/managed-by\n                  rule: self.all(k, k !='karpenter.sh/managed-by')\n              userData:\n                description: |-\n                  UserData to be applied to the provisioned nodes.\n                  It must be in the appropriate format based on the AMIFamily in use. Karpenter will merge certain fields into\n                  this UserData to ensure nodes are being provisioned with the correct configuration.\n                type: string\n            required:\n            - amiFamily\n            - securityGroupSelectorTerms\n            - subnetSelectorTerms\n            type: object\n            x-kubernetes-validations:\n            - message: amiSelectorTerms is required when amiFamily == 'Custom'\n              rule: 'self.amiFamily == ''Custom'' ? self.amiSelectorTerms.size() !=\n                0 : true'\n            - message: must specify exactly one of ['role', 'instanceProfile']\n              rule: (has(self.role) \u0026\u0026 !has(self.instanceProfile)) || (!has(self.role)\n                \u0026\u0026 has(self.instanceProfile))\n            - message: changing from 'instanceProfile' to 'role' is not supported.\n                You must delete and recreate this node class if you want to change\n                this.\n              rule: (has(oldSelf.role) \u0026\u0026 has(self.role)) || (has(oldSelf.instanceProfile)\n                \u0026\u0026 has(self.instanceProfile))\n          status:\n            description: EC2NodeClassStatus contains the resolved state of the EC2NodeClass\n            properties:\n              amis:\n                description: |-\n                  AMI contains the current AMI values that are available to the\n                  cluster under the AMI selectors.\n                items:\n                  description: AMI contains resolved AMI selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the AMI\n                      type: string\n                    name:\n                      description: Name of the AMI\n                      type: string\n                    requirements:\n                      description: Requirements of the AMI to be utilized on an instance\n                        type\n                      items:\n                        description: |-\n                          A node selector requirement is a selector that contains values, a key, and an operator\n                          that relates the key and values.\n                        properties:\n                          key:\n                            description: The label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: |-\n                              Represents a key's relationship to a set of values.\n                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                            type: string\n                          values:\n                            description: |-\n                              An array of string values. If the operator is In or NotIn,\n                              the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                              the values array must be empty. If the operator is Gt or Lt, the values\n                              array must have a single element, which will be interpreted as an integer.\n                              This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                        - key\n                        - operator\n                        type: object\n                      type: array\n                  required:\n                  - id\n                  - requirements\n                  type: object\n                type: array\n              instanceProfile:\n                description: InstanceProfile contains the resolved instance profile\n                  for the role\n                type: string\n              securityGroups:\n                description: |-\n                  SecurityGroups contains the current Security Groups values that are available to the\n                  cluster under the SecurityGroups selectors.\n                items:\n                  description: SecurityGroup contains resolved SecurityGroup selector\n                    values utilized for node launch\n                  properties:\n                    id:\n                      description: ID of the security group\n                      type: string\n                    name:\n                      description: Name of the security group\n                      type: string\n                  required:\n                  - id\n                  type: object\n                type: array\n              subnets:\n                description: |-\n                  Subnets contains the current Subnet values that are available to the\n                  cluster under the subnet selectors.\n                items:\n                  description: Subnet contains resolved Subnet selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the subnet\n                      type: string\n                    zone:\n                      description: The associated availability zone\n                      type: string\n                  required:\n                  - id\n                  - zone\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.15.0\n  name: ec2nodeclasses.karpenter.k8s.aws\nspec:\n  group: karpenter.k8s.aws\n  names:\n    categories:\n    - karpenter\n    kind: EC2NodeClass\n    listKind: EC2NodeClassList\n    plural: ec2nodeclasses\n    shortNames:\n    - ec2nc\n    - ec2ncs\n    singular: ec2nodeclass\n  scope: Cluster\n  versions:\n  - name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: EC2NodeClass is the Schema for the EC2NodeClass API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: |-\n              EC2NodeClassSpec is the top level specification for the AWS Karpenter Provider.\n              This will contain configuration necessary to launch instances in AWS.\n            properties:\n              amiFamily:\n                description: AMIFamily is the AMI family that instances use.\n                enum:\n                - AL2\n                - Bottlerocket\n                - Ubuntu\n                - Custom\n                - Windows2019\n                - Windows2022\n                type: string\n              amiSelectorTerms:\n                description: AMISelectorTerms is a list of or ami selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    AMISelectorTerm defines selection logic for an ami used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the ami id in EC2\n                      pattern: ami-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the ami name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    owner:\n                      description: |-\n                        Owner is the owner for the ami.\n                        You can specify a combination of AWS account IDs, \"self\", \"amazon\", and \"aws-marketplace\"\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in amiSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name) ||\n                    has(x.owner)))'\n              blockDeviceMappings:\n                description: BlockDeviceMappings to be applied to provisioned nodes.\n                items:\n                  properties:\n                    deviceName:\n                      description: The device name (for example, /dev/sdh or xvdh).\n                      type: string\n                    ebs:\n                      description: EBS contains parameters used to automatically set\n                        up EBS volumes when an instance is launched.\n                      properties:\n                        deleteOnTermination:\n                          description: DeleteOnTermination indicates whether the EBS\n                            volume is deleted on instance termination.\n                          type: boolean\n                        encrypted:\n                          description: |-\n                            Encrypted indicates whether the EBS volume is encrypted. Encrypted volumes can only\n                            be attached to instances that support Amazon EBS encryption. If you are creating\n                            a volume from a snapshot, you can't specify an encryption value.\n                          type: boolean\n                        iops:\n                          description: |-\n                            IOPS is the number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes,\n                            this represents the number of IOPS that are provisioned for the volume. For\n                            gp2 volumes, this represents the baseline performance of the volume and the\n                            rate at which the volume accumulates I/O credits for bursting.\n\n\n                            The following are the supported values for each volume type:\n\n\n                               * gp3: 3,000-16,000 IOPS\n\n\n                               * io1: 100-64,000 IOPS\n\n\n                               * io2: 100-64,000 IOPS\n\n\n                            For io1 and io2 volumes, we guarantee 64,000 IOPS only for Instances built\n                            on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).\n                            Other instance families guarantee performance up to 32,000 IOPS.\n\n\n                            This parameter is supported for io1, io2, and gp3 volumes only. This parameter\n                            is not supported for gp2, st1, sc1, or standard volumes.\n                          format: int64\n                          type: integer\n                        kmsKeyID:\n                          description: KMSKeyID (ARN) of the symmetric Key Management\n                            Service (KMS) CMK used for encryption.\n                          type: string\n                        snapshotID:\n                          description: SnapshotID is the ID of an EBS snapshot\n                          type: string\n                        throughput:\n                          description: |-\n                            Throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s.\n                            Valid Range: Minimum value of 125. Maximum value of 1000.\n                          format: int64\n                          type: integer\n                        volumeSize:\n                          allOf:\n                          - pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                          - pattern: ^((?:[1-9][0-9]{0,3}|[1-4][0-9]{4}|[5][0-8][0-9]{3}|59000)Gi|(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|[6][0-3][0-9]{3}|64000)G|([1-9]||[1-5][0-7]|58)Ti|([1-9]||[1-5][0-9]|6[0-3]|64)T)$\n                          anyOf:\n                          - type: integer\n                          - type: string\n                          description: |-\n                            VolumeSize in `Gi`, `G`, `Ti`, or `T`. You must specify either a snapshot ID or\n                            a volume size. The following are the supported volumes sizes for each volume\n                            type:\n\n\n                               * gp2 and gp3: 1-16,384\n\n\n                               * io1 and io2: 4-16,384\n\n\n                               * st1 and sc1: 125-16,384\n\n\n                               * standard: 1-1,024\n                          x-kubernetes-int-or-string: true\n                        volumeType:\n                          description: |-\n                            VolumeType of the block device.\n                            For more information, see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html)\n                            in the Amazon Elastic Compute Cloud User Guide.\n                          enum:\n                          - standard\n                          - io1\n                          - io2\n                          - gp2\n                          - sc1\n                          - st1\n                          - gp3\n                          type: string\n                      type: object\n                      x-kubernetes-validations:\n                      - message: snapshotID or volumeSize must be defined\n                        rule: has(self.snapshotID) || has(self.volumeSize)\n                    rootVolume:\n                      description: |-\n                        RootVolume is a flag indicating if this device is mounted as kubelet root dir. You can\n                        configure at most one root volume in BlockDeviceMappings.\n                      type: boolean\n                  type: object\n                maxItems: 50\n                type: array\n                x-kubernetes-validations:\n                - message: must have only one blockDeviceMappings with rootVolume\n                  rule: self.filter(x, has(x.rootVolume)?x.rootVolume==true:false).size()\n                    \u003c= 1\n              context:\n                description: |-\n                  Context is a Reserved field in EC2 APIs\n                  https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html\n                type: string\n              detailedMonitoring:\n                description: DetailedMonitoring controls if detailed monitoring is\n                  enabled for instances that are launched\n                type: boolean\n              instanceProfile:\n                description: |-\n                  InstanceProfile is the AWS entity that instances use.\n                  This field is mutually exclusive from role.\n                  The instance profile should already have a role assigned to it that Karpenter\n                   has PassRole permission on for instance launch using this instanceProfile to succeed.\n                type: string\n                x-kubernetes-validations:\n                - message: instanceProfile cannot be empty\n                  rule: self != ''\n              instanceStorePolicy:\n                description: InstanceStorePolicy specifies how to handle instance-store\n                  disks.\n                enum:\n                - RAID0\n                type: string\n              metadataOptions:\n                default:\n                  httpEndpoint: enabled\n                  httpProtocolIPv6: disabled\n                  httpPutResponseHopLimit: 2\n                  httpTokens: required\n                description: |-\n                  MetadataOptions for the generated launch template of provisioned nodes.\n\n\n                  This specifies the exposure of the Instance Metadata Service to\n                  provisioned EC2 nodes. For more information,\n                  see Instance Metadata and User Data\n                  (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)\n                  in the Amazon Elastic Compute Cloud User Guide.\n\n\n                  Refer to recommended, security best practices\n                  (https://aws.github.io/aws-eks-best-practices/security/docs/iam/#restrict-access-to-the-instance-profile-assigned-to-the-worker-node)\n                  for limiting exposure of Instance Metadata and User Data to pods.\n                  If omitted, defaults to httpEndpoint enabled, with httpProtocolIPv6\n                  disabled, with httpPutResponseLimit of 2, and with httpTokens\n                  required.\n                properties:\n                  httpEndpoint:\n                    default: enabled\n                    description: |-\n                      HTTPEndpoint enables or disables the HTTP metadata endpoint on provisioned\n                      nodes. If metadata options is non-nil, but this parameter is not specified,\n                      the default state is \"enabled\".\n\n\n                      If you specify a value of \"disabled\", instance metadata will not be accessible\n                      on the node.\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpProtocolIPv6:\n                    default: disabled\n                    description: |-\n                      HTTPProtocolIPv6 enables or disables the IPv6 endpoint for the instance metadata\n                      service on provisioned nodes. If metadata options is non-nil, but this parameter\n                      is not specified, the default state is \"disabled\".\n                    enum:\n                    - enabled\n                    - disabled\n                    type: string\n                  httpPutResponseHopLimit:\n                    default: 2\n                    description: |-\n                      HTTPPutResponseHopLimit is the desired HTTP PUT response hop limit for\n                      instance metadata requests. The larger the number, the further instance\n                      metadata requests can travel. Possible values are integers from 1 to 64.\n                      If metadata options is non-nil, but this parameter is not specified, the\n                      default value is 2.\n                    format: int64\n                    maximum: 64\n                    minimum: 1\n                    type: integer\n                  httpTokens:\n                    default: required\n                    description: |-\n                      HTTPTokens determines the state of token usage for instance metadata\n                      requests. If metadata options is non-nil, but this parameter is not\n                      specified, the default state is \"required\".\n\n\n                      If the state is optional, one can choose to retrieve instance metadata with\n                      or without a signed token header on the request. If one retrieves the IAM\n                      role credentials without a token, the version 1.0 role credentials are\n                      returned. If one retrieves the IAM role credentials using a valid signed\n                      token, the version 2.0 role credentials are returned.\n\n\n                      If the state is \"required\", one must send a signed token header with any\n                      instance metadata retrieval requests. In this state, retrieving the IAM\n                      role credentials always returns the version 2.0 credentials; the version\n                      1.0 credentials are not available.\n                    enum:\n                    - required\n                    - optional\n                    type: string\n                type: object\n              role:\n                description: |-\n                  Role is the AWS identity that nodes use. This field is immutable.\n                  This field is mutually exclusive from instanceProfile.\n                  Marking this field as immutable avoids concerns around terminating managed instance profiles from running instances.\n                  This field may be made mutable in the future, assuming the correct garbage collection and drift handling is implemented\n                  for the old instance profiles on an update.\n                type: string\n                x-kubernetes-validations:\n                - message: role cannot be empty\n                  rule: self != ''\n                - message: immutable field changed\n                  rule: self == oldSelf\n              securityGroupSelectorTerms:\n                description: SecurityGroupSelectorTerms is a list of or security group\n                  selector terms. The terms are ORed.\n                items:\n                  description: |-\n                    SecurityGroupSelectorTerm defines selection logic for a security group used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the security group id in EC2\n                      pattern: sg-[0-9a-z]+\n                      type: string\n                    name:\n                      description: |-\n                        Name is the security group name in EC2.\n                        This value is the name field, which is different from the name tag.\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: securityGroupSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id', 'name']\n                  rule: self.all(x, has(x.tags) || has(x.id) || has(x.name))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 (has(x.tags) || has(x.name)))'\n                - message: '''name'' is mutually exclusive, cannot be set with a combination\n                    of other fields in securityGroupSelectorTerms'\n                  rule: '!self.all(x, has(x.name) \u0026\u0026 (has(x.tags) || has(x.id)))'\n              subnetSelectorTerms:\n                description: SubnetSelectorTerms is a list of or subnet selector terms.\n                  The terms are ORed.\n                items:\n                  description: |-\n                    SubnetSelectorTerm defines selection logic for a subnet used by Karpenter to launch nodes.\n                    If multiple fields are used for selection, the requirements are ANDed.\n                  properties:\n                    id:\n                      description: ID is the subnet id in EC2\n                      pattern: subnet-[0-9a-z]+\n                      type: string\n                    tags:\n                      additionalProperties:\n                        type: string\n                      description: |-\n                        Tags is a map of key/value tags used to select subnets\n                        Specifying '*' for a value selects all values for a given tag key.\n                      maxProperties: 20\n                      type: object\n                      x-kubernetes-validations:\n                      - message: empty tag keys or values aren't supported\n                        rule: self.all(k, k != '' \u0026\u0026 self[k] != '')\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: subnetSelectorTerms cannot be empty\n                  rule: self.size() != 0\n                - message: expected at least one, got none, ['tags', 'id']\n                  rule: self.all(x, has(x.tags) || has(x.id))\n                - message: '''id'' is mutually exclusive, cannot be set with a combination\n                    of other fields in subnetSelectorTerms'\n                  rule: '!self.all(x, has(x.id) \u0026\u0026 has(x.tags))'\n              tags:\n                additionalProperties:\n                  type: string\n                description: Tags to be applied on ec2 resources like instances and\n                  launch templates.\n                type: object\n                x-kubernetes-validations:\n                - message: empty tag keys aren't supported\n                  rule: self.all(k, k != '')\n                - message: tag contains a restricted tag matching kubernetes.io/cluster/\n                  rule: self.all(k, !k.startsWith('kubernetes.io/cluster') )\n                - message: tag contains a restricted tag matching karpenter.sh/provisioner-name\n                  rule: self.all(k, k != 'karpenter.sh/provisioner-name')\n                - message: tag contains a restricted tag matching karpenter.sh/nodepool\n                  rule: self.all(k, k != 'karpenter.sh/nodepool')\n                - message: tag contains a restricted tag matching karpenter.sh/managed-by\n                  rule: self.all(k, k !='karpenter.sh/managed-by')\n              userData:\n                description: |-\n                  UserData to be applied to the provisioned nodes.\n                  It must be in the appropriate format based on the AMIFamily in use. Karpenter will merge certain fields into\n                  this UserData to ensure nodes are being provisioned with the correct configuration.\n                type: string\n            required:\n            - amiFamily\n            - securityGroupSelectorTerms\n            - subnetSelectorTerms\n            type: object\n            x-kubernetes-validations:\n            - message: amiSelectorTerms is required when amiFamily == 'Custom'\n              rule: 'self.amiFamily == ''Custom'' ? self.amiSelectorTerms.size() !=\n                0 : true'\n            - message: must specify exactly one of ['role', 'instanceProfile']\n              rule: (has(self.role) \u0026\u0026 !has(self.instanceProfile)) || (!has(self.role)\n                \u0026\u0026 has(self.instanceProfile))\n            - message: changing from 'instanceProfile' to 'role' is not supported.\n                You must delete and recreate this node class if you want to change\n                this.\n              rule: (has(oldSelf.role) \u0026\u0026 has(self.role)) || (has(oldSelf.instanceProfile)\n                \u0026\u0026 has(self.instanceProfile))\n          status:\n            description: EC2NodeClassStatus contains the resolved state of the EC2NodeClass\n            properties:\n              amis:\n                description: |-\n                  AMI contains the current AMI values that are available to the\n                  cluster under the AMI selectors.\n                items:\n                  description: AMI contains resolved AMI selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the AMI\n                      type: string\n                    name:\n                      description: Name of the AMI\n                      type: string\n                    requirements:\n                      description: Requirements of the AMI to be utilized on an instance\n                        type\n                      items:\n                        description: |-\n                          A node selector requirement is a selector that contains values, a key, and an operator\n                          that relates the key and values.\n                        properties:\n                          key:\n                            description: The label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: |-\n                              Represents a key's relationship to a set of values.\n                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                            type: string\n                          values:\n                            description: |-\n                              An array of string values. If the operator is In or NotIn,\n                              the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                              the values array must be empty. If the operator is Gt or Lt, the values\n                              array must have a single element, which will be interpreted as an integer.\n                              This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                        - key\n                        - operator\n                        type: object\n                      type: array\n                  required:\n                  - id\n                  - requirements\n                  type: object\n                type: array\n              instanceProfile:\n                description: InstanceProfile contains the resolved instance profile\n                  for the role\n                type: string\n              securityGroups:\n                description: |-\n                  SecurityGroups contains the current Security Groups values that are available to the\n                  cluster under the SecurityGroups selectors.\n                items:\n                  description: SecurityGroup contains resolved SecurityGroup selector\n                    values utilized for node launch\n                  properties:\n                    id:\n                      description: ID of the security group\n                      type: string\n                    name:\n                      description: Name of the security group\n                      type: string\n                  required:\n                  - id\n                  type: object\n                type: array\n              subnets:\n                description: |-\n                  Subnets contains the current Subnet values that are available to the\n                  cluster under the subnet selectors.\n                items:\n                  description: Subnet contains resolved Subnet selector values utilized\n                    for node launch\n                  properties:\n                    id:\n                      description: ID of the subnet\n                      type: string\n                    zone:\n                      description: The associated availability zone\n                      type: string\n                  required:\n                  - id\n                  - zone\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "yaml_incluster": "8654a1a3fe04df8ba0d08ff2504541c80434264d76a4f3207e8f9708ae89cb31"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter-crds.data.http.yaml_file",
            "module.karpenter.module.karpenter-crds.null_resource.status_check",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodeclaims.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/nodeclaims.karpenter.sh",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "b1e3afbc36bac8a15bc8c82d2fa82dbf1f7725febdc50419ba4bd633f4369244",
            "live_uid": "e1e85a45-2c77-454a-945f-506c4e6e70fa",
            "name": "nodeclaims.karpenter.sh",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "e1e85a45-2c77-454a-945f-506c4e6e70fa",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodeclaims.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n      - karpenter\n    kind: NodeClaim\n    listKind: NodeClaimList\n    plural: nodeclaims\n    singular: nodeclaim\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - jsonPath: .metadata.labels.node\\.kubernetes\\.io/instance-type\n          name: Type\n          type: string\n        - jsonPath: .metadata.labels.topology\\.kubernetes\\.io/zone\n          name: Zone\n          type: string\n        - jsonPath: .status.nodeName\n          name: Node\n          type: string\n        - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n          name: Ready\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: Age\n          type: date\n        - jsonPath: .metadata.labels.karpenter\\.sh/capacity-type\n          name: Capacity\n          priority: 1\n          type: string\n        - jsonPath: .metadata.labels.karpenter\\.sh/nodepool\n          name: NodePool\n          priority: 1\n          type: string\n        - jsonPath: .spec.nodeClassRef.name\n          name: NodeClass\n          priority: 1\n          type: string\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: NodeClaim is the Schema for the NodeClaims API\n          properties:\n            apiVersion:\n              description: |-\n                APIVersion defines the versioned schema of this representation of an object.\n                Servers should convert recognized schemas to the latest internal value, and\n                may reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n              type: string\n            kind:\n              description: |-\n                Kind is a string value representing the REST resource this object represents.\n                Servers may infer this from the endpoint the client submits requests to.\n                Cannot be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: NodeClaimSpec describes the desired state of the NodeClaim\n              properties:\n                kubelet:\n                  description: |-\n                    Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                    They are a subset of the upstream types, recognizing not all options may be supported.\n                    Wherever possible, the types and names should reflect the upstream kubelet types.\n                  properties:\n                    clusterDNS:\n                      description: |-\n                        clusterDNS is a list of IP addresses for the cluster DNS server.\n                        Note that not all providers may use all addresses.\n                      items:\n                        type: string\n                      type: array\n                    cpuCFSQuota:\n                      description: CPUCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits.\n                      type: boolean\n                    evictionHard:\n                      additionalProperties:\n                        type: string\n                        pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      description: EvictionHard is the map of signal names to quantities that define hard eviction thresholds\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    evictionMaxPodGracePeriod:\n                      description: |-\n                        EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                        response to soft eviction thresholds being met.\n                      format: int32\n                      type: integer\n                    evictionSoft:\n                      additionalProperties:\n                        type: string\n                        pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      description: EvictionSoft is the map of signal names to quantities that define soft eviction thresholds\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    evictionSoftGracePeriod:\n                      additionalProperties:\n                        type: string\n                      description: EvictionSoftGracePeriod is the map of signal names to quantities that define grace periods for each eviction signal\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                          rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                    imageGCHighThresholdPercent:\n                      description: |-\n                        ImageGCHighThresholdPercent is the percent of disk usage after which image\n                        garbage collection is always run. The percent is calculated by dividing this\n                        field value by 100, so this field must be between 0 and 100, inclusive.\n                        When specified, the value must be greater than ImageGCLowThresholdPercent.\n                      format: int32\n                      maximum: 100\n                      minimum: 0\n                      type: integer\n                    imageGCLowThresholdPercent:\n                      description: |-\n                        ImageGCLowThresholdPercent is the percent of disk usage before which image\n                        garbage collection is never run. Lowest disk usage to garbage collect to.\n                        The percent is calculated by dividing this field value by 100,\n                        so the field value must be between 0 and 100, inclusive.\n                        When specified, the value must be less than imageGCHighThresholdPercent\n                      format: int32\n                      maximum: 100\n                      minimum: 0\n                      type: integer\n                    kubeReserved:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: KubeReserved contains resources reserved for Kubernetes system components.\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                          rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                        - message: kubeReserved value cannot be a negative resource quantity\n                          rule: self.all(x, !self[x].startsWith('-'))\n                    maxPods:\n                      description: |-\n                        MaxPods is an override for the maximum number of pods that can run on\n                        a worker node instance.\n                      format: int32\n                      minimum: 0\n                      type: integer\n                    podsPerCore:\n                      description: |-\n                        PodsPerCore is an override for the number of pods that can run on a worker node\n                        instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                        MaxPods is a lower value, that value will be used.\n                      format: int32\n                      minimum: 0\n                      type: integer\n                    systemReserved:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: SystemReserved contains resources reserved for OS system daemons and kernel memory.\n                      type: object\n                      x-kubernetes-validations:\n                        - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                          rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                        - message: systemReserved value cannot be a negative resource quantity\n                          rule: self.all(x, !self[x].startsWith('-'))\n                  type: object\n                  x-kubernetes-validations:\n                    - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent\n                      rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent) ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  : true'\n                    - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod\n                      rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true\n                    - message: evictionSoftGracePeriod OwnerKey does not have a matching evictionSoft\n                      rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e, (e in self.evictionSoft)):true\n                nodeClassRef:\n                  description: NodeClassRef is a reference to an object that defines provider specific configuration\n                  properties:\n                    apiVersion:\n                      description: API version of the referent\n                      type: string\n                    kind:\n                      description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                      type: string\n                    name:\n                      description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                      type: string\n                  required:\n                    - name\n                  type: object\n                requirements:\n                  description: Requirements are layered with GetLabels and applied to every node.\n                  items:\n                    description: |-\n                      A node selector requirement is a selector that contains values, a key, and an operator\n                      that relates the key and values.\n                    properties:\n                      key:\n                        description: The label key that the selector applies to.\n                        type: string\n                        maxLength: 316\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                        x-kubernetes-validations:\n                          - message: label domain \"kubernetes.io\" is restricted\n                            rule: self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                          - message: label domain \"k8s.io\" is restricted\n                            rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                          - message: label domain \"karpenter.sh\" is restricted\n                            rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                          - message: label \"kubernetes.io/hostname\" is restricted\n                            rule: self != \"kubernetes.io/hostname\"\n                          - message: label domain \"karpenter.k8s.aws\" is restricted\n                            rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                      operator:\n                        description: |-\n                          Represents a key's relationship to a set of values.\n                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                        type: string\n                        enum:\n                          - In\n                          - NotIn\n                          - Exists\n                          - DoesNotExist\n                          - Gt\n                          - Lt\n                      values:\n                        description: |-\n                          An array of string values. If the operator is In or NotIn,\n                          the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                          the values array must be empty. If the operator is Gt or Lt, the values\n                          array must have a single element, which will be interpreted as an integer.\n                          This array is replaced during a strategic merge patch.\n                        items:\n                          type: string\n                        type: array\n                        maxLength: 63\n                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                    required:\n                      - key\n                      - operator\n                    type: object\n                  maxItems: 30\n                  type: array\n                  x-kubernetes-validations:\n                    - message: requirements with operator 'In' must have a value defined\n                      rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 : true)'\n                    - message: requirements operator 'Gt' or 'Lt' must have a single positive integer value\n                      rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)'\n                resources:\n                  description: Resources models the resource requirements for the NodeClaim to launch\n                  properties:\n                    requests:\n                      additionalProperties:\n                        anyOf:\n                          - type: integer\n                          - type: string\n                        pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                        x-kubernetes-int-or-string: true\n                      description: Requests describes the minimum required resources for the NodeClaim to launch\n                      type: object\n                  type: object\n                startupTaints:\n                  description: |-\n                    StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                    within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                    daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                    purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                  items:\n                    description: |-\n                      The node this Taint is attached to has the \"effect\" on\n                      any pod that does not tolerate the Taint.\n                    properties:\n                      effect:\n                        description: |-\n                          Required. The effect of the taint on pods\n                          that do not tolerate the taint.\n                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                        type: string\n                        enum:\n                          - NoSchedule\n                          - PreferNoSchedule\n                          - NoExecute\n                      key:\n                        description: Required. The taint key to be applied to a node.\n                        type: string\n                        minLength: 1\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      timeAdded:\n                        description: |-\n                          TimeAdded represents the time at which the taint was added.\n                          It is only written for NoExecute taints.\n                        format: date-time\n                        type: string\n                      value:\n                        description: The taint value corresponding to the taint key.\n                        type: string\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                    required:\n                      - effect\n                      - key\n                    type: object\n                  type: array\n                taints:\n                  description: Taints will be applied to the NodeClaim's node.\n                  items:\n                    description: |-\n                      The node this Taint is attached to has the \"effect\" on\n                      any pod that does not tolerate the Taint.\n                    properties:\n                      effect:\n                        description: |-\n                          Required. The effect of the taint on pods\n                          that do not tolerate the taint.\n                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                        type: string\n                        enum:\n                          - NoSchedule\n                          - PreferNoSchedule\n                          - NoExecute\n                      key:\n                        description: Required. The taint key to be applied to a node.\n                        type: string\n                        minLength: 1\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      timeAdded:\n                        description: |-\n                          TimeAdded represents the time at which the taint was added.\n                          It is only written for NoExecute taints.\n                        format: date-time\n                        type: string\n                      value:\n                        description: The taint value corresponding to the taint key.\n                        type: string\n                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                    required:\n                      - effect\n                      - key\n                    type: object\n                  type: array\n              required:\n                - nodeClassRef\n                - requirements\n              type: object\n            status:\n              description: NodeClaimStatus defines the observed state of NodeClaim\n              properties:\n                allocatable:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Allocatable is the estimated allocatable capacity of the node\n                  type: object\n                capacity:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Capacity is the estimated full capacity of the node\n                  type: object\n                conditions:\n                  description: Conditions contains signals for health and readiness\n                  items:\n                    description: |-\n                      Condition defines a readiness condition for a Knative resource.\n                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties\n                    properties:\n                      lastTransitionTime:\n                        description: |-\n                          LastTransitionTime is the last time the condition transitioned from one status to another.\n                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\n                          differences (all other things held constant).\n                        type: string\n                      message:\n                        description: A human readable message indicating details about the transition.\n                        type: string\n                      reason:\n                        description: The reason for the condition's last transition.\n                        type: string\n                      severity:\n                        description: |-\n                          Severity with which to treat failures of this type of condition.\n                          When this is not specified, it defaults to Error.\n                        type: string\n                      status:\n                        description: Status of the condition, one of True, False, Unknown.\n                        type: string\n                      type:\n                        description: Type of condition.\n                        type: string\n                    required:\n                      - status\n                      - type\n                    type: object\n                  type: array\n                imageID:\n                  description: ImageID is an identifier for the image that runs on the node\n                  type: string\n                nodeName:\n                  description: NodeName is the name of the corresponding node object\n                  type: string\n                providerID:\n                  description: ProviderID of the corresponding node object\n                  type: string\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\n",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodeclaims.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n    - karpenter\n    kind: NodeClaim\n    listKind: NodeClaimList\n    plural: nodeclaims\n    singular: nodeclaim\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.labels.node\\.kubernetes\\.io/instance-type\n      name: Type\n      type: string\n    - jsonPath: .metadata.labels.topology\\.kubernetes\\.io/zone\n      name: Zone\n      type: string\n    - jsonPath: .status.nodeName\n      name: Node\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    - jsonPath: .metadata.labels.karpenter\\.sh/capacity-type\n      name: Capacity\n      priority: 1\n      type: string\n    - jsonPath: .metadata.labels.karpenter\\.sh/nodepool\n      name: NodePool\n      priority: 1\n      type: string\n    - jsonPath: .spec.nodeClassRef.name\n      name: NodeClass\n      priority: 1\n      type: string\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: NodeClaim is the Schema for the NodeClaims API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: NodeClaimSpec describes the desired state of the NodeClaim\n            properties:\n              kubelet:\n                description: |-\n                  Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                  They are a subset of the upstream types, recognizing not all options may be supported.\n                  Wherever possible, the types and names should reflect the upstream kubelet types.\n                properties:\n                  clusterDNS:\n                    description: |-\n                      clusterDNS is a list of IP addresses for the cluster DNS server.\n                      Note that not all providers may use all addresses.\n                    items:\n                      type: string\n                    type: array\n                  cpuCFSQuota:\n                    description: CPUCFSQuota enables CPU CFS quota enforcement for\n                      containers that specify CPU limits.\n                    type: boolean\n                  evictionHard:\n                    additionalProperties:\n                      pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      type: string\n                    description: EvictionHard is the map of signal names to quantities\n                      that define hard eviction thresholds\n                    type: object\n                    x-kubernetes-validations:\n                    - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                  evictionMaxPodGracePeriod:\n                    description: |-\n                      EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                      response to soft eviction thresholds being met.\n                    format: int32\n                    type: integer\n                  evictionSoft:\n                    additionalProperties:\n                      pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                      type: string\n                    description: EvictionSoft is the map of signal names to quantities\n                      that define soft eviction thresholds\n                    type: object\n                    x-kubernetes-validations:\n                    - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                  evictionSoftGracePeriod:\n                    additionalProperties:\n                      type: string\n                    description: EvictionSoftGracePeriod is the map of signal names\n                      to quantities that define grace periods for each eviction signal\n                    type: object\n                    x-kubernetes-validations:\n                    - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                  imageGCHighThresholdPercent:\n                    description: |-\n                      ImageGCHighThresholdPercent is the percent of disk usage after which image\n                      garbage collection is always run. The percent is calculated by dividing this\n                      field value by 100, so this field must be between 0 and 100, inclusive.\n                      When specified, the value must be greater than ImageGCLowThresholdPercent.\n                    format: int32\n                    maximum: 100\n                    minimum: 0\n                    type: integer\n                  imageGCLowThresholdPercent:\n                    description: |-\n                      ImageGCLowThresholdPercent is the percent of disk usage before which image\n                      garbage collection is never run. Lowest disk usage to garbage collect to.\n                      The percent is calculated by dividing this field value by 100,\n                      so the field value must be between 0 and 100, inclusive.\n                      When specified, the value must be less than imageGCHighThresholdPercent\n                    format: int32\n                    maximum: 100\n                    minimum: 0\n                    type: integer\n                  kubeReserved:\n                    additionalProperties:\n                      anyOf:\n                      - type: integer\n                      - type: string\n                      pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                      x-kubernetes-int-or-string: true\n                    description: KubeReserved contains resources reserved for Kubernetes\n                      system components.\n                    type: object\n                    x-kubernetes-validations:\n                    - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                      rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'\n                        || x=='pid')\n                    - message: kubeReserved value cannot be a negative resource quantity\n                      rule: self.all(x, !self[x].startsWith('-'))\n                  maxPods:\n                    description: |-\n                      MaxPods is an override for the maximum number of pods that can run on\n                      a worker node instance.\n                    format: int32\n                    minimum: 0\n                    type: integer\n                  podsPerCore:\n                    description: |-\n                      PodsPerCore is an override for the number of pods that can run on a worker node\n                      instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                      MaxPods is a lower value, that value will be used.\n                    format: int32\n                    minimum: 0\n                    type: integer\n                  systemReserved:\n                    additionalProperties:\n                      anyOf:\n                      - type: integer\n                      - type: string\n                      pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                      x-kubernetes-int-or-string: true\n                    description: SystemReserved contains resources reserved for OS\n                      system daemons and kernel memory.\n                    type: object\n                    x-kubernetes-validations:\n                    - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                      rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'\n                        || x=='pid')\n                    - message: systemReserved value cannot be a negative resource\n                        quantity\n                      rule: self.all(x, !self[x].startsWith('-'))\n                type: object\n                x-kubernetes-validations:\n                - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent\n                  rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent)\n                    ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  :\n                    true'\n                - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod\n                  rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true\n                - message: evictionSoftGracePeriod OwnerKey does not have a matching\n                    evictionSoft\n                  rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e,\n                    (e in self.evictionSoft)):true\n              nodeClassRef:\n                description: NodeClassRef is a reference to an object that defines\n                  provider specific configuration\n                properties:\n                  apiVersion:\n                    description: API version of the referent\n                    type: string\n                  kind:\n                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                    type: string\n                  name:\n                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                    type: string\n                required:\n                - name\n                type: object\n              requirements:\n                description: Requirements are layered with GetLabels and applied to\n                  every node.\n                items:\n                  description: |-\n                    A node selector requirement is a selector that contains values, a key, and an operator\n                    that relates the key and values.\n                  properties:\n                    key:\n                      description: The label key that the selector applies to.\n                      maxLength: 316\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      type: string\n                      x-kubernetes-validations:\n                      - message: label domain \"kubernetes.io\" is restricted\n                        rule: self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\",\n                          \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\",\n                          \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\",\n                          \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\",\n                          \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"]\n                          || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\")\n                          || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\")\n                          || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                      - message: label domain \"k8s.io\" is restricted\n                        rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                      - message: label domain \"karpenter.sh\" is restricted\n                        rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"]\n                          || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                      - message: label \"kubernetes.io/hostname\" is restricted\n                        rule: self != \"kubernetes.io/hostname\"\n                      - message: label domain \"karpenter.k8s.aws\" is restricted\n                        rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\",\n                          \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\",\n                          \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\",\n                          \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\",\n                          \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\",\n                          \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\",\n                          \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\",\n                          \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\",\n                          \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"]\n                          || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                    operator:\n                      description: |-\n                        Represents a key's relationship to a set of values.\n                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                      enum:\n                      - In\n                      - NotIn\n                      - Exists\n                      - DoesNotExist\n                      - Gt\n                      - Lt\n                      type: string\n                    values:\n                      description: |-\n                        An array of string values. If the operator is In or NotIn,\n                        the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                        the values array must be empty. If the operator is Gt or Lt, the values\n                        array must have a single element, which will be interpreted as an integer.\n                        This array is replaced during a strategic merge patch.\n                      items:\n                        type: string\n                      maxLength: 63\n                      pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                      type: array\n                  required:\n                  - key\n                  - operator\n                  type: object\n                maxItems: 30\n                type: array\n                x-kubernetes-validations:\n                - message: requirements with operator 'In' must have a value defined\n                  rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 :\n                    true)'\n                - message: requirements operator 'Gt' or 'Lt' must have a single positive\n                    integer value\n                  rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'')\n                    ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)'\n              resources:\n                description: Resources models the resource requirements for the NodeClaim\n                  to launch\n                properties:\n                  requests:\n                    additionalProperties:\n                      anyOf:\n                      - type: integer\n                      - type: string\n                      pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                      x-kubernetes-int-or-string: true\n                    description: Requests describes the minimum required resources\n                      for the NodeClaim to launch\n                    type: object\n                type: object\n              startupTaints:\n                description: |-\n                  StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                  within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                  daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                  purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                items:\n                  description: |-\n                    The node this Taint is attached to has the \"effect\" on\n                    any pod that does not tolerate the Taint.\n                  properties:\n                    effect:\n                      description: |-\n                        Required. The effect of the taint on pods\n                        that do not tolerate the taint.\n                        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                      enum:\n                      - NoSchedule\n                      - PreferNoSchedule\n                      - NoExecute\n                      type: string\n                    key:\n                      description: Required. The taint key to be applied to a node.\n                      minLength: 1\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      type: string\n                    timeAdded:\n                      description: |-\n                        TimeAdded represents the time at which the taint was added.\n                        It is only written for NoExecute taints.\n                      format: date-time\n                      type: string\n                    value:\n                      description: The taint value corresponding to the taint key.\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      type: string\n                  required:\n                  - effect\n                  - key\n                  type: object\n                type: array\n              taints:\n                description: Taints will be applied to the NodeClaim's node.\n                items:\n                  description: |-\n                    The node this Taint is attached to has the \"effect\" on\n                    any pod that does not tolerate the Taint.\n                  properties:\n                    effect:\n                      description: |-\n                        Required. The effect of the taint on pods\n                        that do not tolerate the taint.\n                        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                      enum:\n                      - NoSchedule\n                      - PreferNoSchedule\n                      - NoExecute\n                      type: string\n                    key:\n                      description: Required. The taint key to be applied to a node.\n                      minLength: 1\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      type: string\n                    timeAdded:\n                      description: |-\n                        TimeAdded represents the time at which the taint was added.\n                        It is only written for NoExecute taints.\n                      format: date-time\n                      type: string\n                    value:\n                      description: The taint value corresponding to the taint key.\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                      type: string\n                  required:\n                  - effect\n                  - key\n                  type: object\n                type: array\n            required:\n            - nodeClassRef\n            - requirements\n            type: object\n          status:\n            description: NodeClaimStatus defines the observed state of NodeClaim\n            properties:\n              allocatable:\n                additionalProperties:\n                  anyOf:\n                  - type: integer\n                  - type: string\n                  pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                  x-kubernetes-int-or-string: true\n                description: Allocatable is the estimated allocatable capacity of\n                  the node\n                type: object\n              capacity:\n                additionalProperties:\n                  anyOf:\n                  - type: integer\n                  - type: string\n                  pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                  x-kubernetes-int-or-string: true\n                description: Capacity is the estimated full capacity of the node\n                type: object\n              conditions:\n                description: Conditions contains signals for health and readiness\n                items:\n                  description: |-\n                    Condition defines a readiness condition for a Knative resource.\n                    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties\n                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        LastTransitionTime is the last time the condition transitioned from one status to another.\n                        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\n                        differences (all other things held constant).\n                      type: string\n                    message:\n                      description: A human readable message indicating details about\n                        the transition.\n                      type: string\n                    reason:\n                      description: The reason for the condition's last transition.\n                      type: string\n                    severity:\n                      description: |-\n                        Severity with which to treat failures of this type of condition.\n                        When this is not specified, it defaults to Error.\n                      type: string\n                    status:\n                      description: Status of the condition, one of True, False, Unknown.\n                      type: string\n                    type:\n                      description: Type of condition.\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n              imageID:\n                description: ImageID is an identifier for the image that runs on the\n                  node\n                type: string\n              nodeName:\n                description: NodeName is the name of the corresponding node object\n                type: string\n              providerID:\n                description: ProviderID of the corresponding node object\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "yaml_incluster": "b1e3afbc36bac8a15bc8c82d2fa82dbf1f7725febdc50419ba4bd633f4369244"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter-crds.data.http.yaml_file",
            "module.karpenter.module.karpenter-crds.null_resource.status_check",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodepools.yaml",
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/nodepools.karpenter.sh",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "20cf6ae27829e577597b83b68e2d5ac5c7e364332887929f1cd68f09b42f2e46",
            "live_uid": "2416f9da-2974-4879-bf86-ee8585beb957",
            "name": "nodepools.karpenter.sh",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "2416f9da-2974-4879-bf86-ee8585beb957",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodepools.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n      - karpenter\n    kind: NodePool\n    listKind: NodePoolList\n    plural: nodepools\n    singular: nodepool\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - jsonPath: .spec.template.spec.nodeClassRef.name\n          name: NodeClass\n          type: string\n        - jsonPath: .spec.weight\n          name: Weight\n          priority: 1\n          type: string\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: NodePool is the Schema for the NodePools API\n          properties:\n            apiVersion:\n              description: |-\n                APIVersion defines the versioned schema of this representation of an object.\n                Servers should convert recognized schemas to the latest internal value, and\n                may reject unrecognized values.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n              type: string\n            kind:\n              description: |-\n                Kind is a string value representing the REST resource this object represents.\n                Servers may infer this from the endpoint the client submits requests to.\n                Cannot be updated.\n                In CamelCase.\n                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: |-\n                NodePoolSpec is the top level nodepool specification. Nodepools\n                launch nodes in response to pods that are unschedulable. A single nodepool\n                is capable of managing a diverse set of nodes. Node properties are determined\n                from a combination of nodepool and pod scheduling constraints.\n              properties:\n                disruption:\n                  default:\n                    consolidationPolicy: WhenUnderutilized\n                    expireAfter: 720h\n                  description: Disruption contains the parameters that relate to Karpenter's disruption logic\n                  properties:\n                    budgets:\n                      default:\n                        - nodes: 10%\n                      description: |-\n                        Budgets is a list of Budgets.\n                        If there are multiple active budgets, Karpenter uses\n                        the most restrictive value. If left undefined,\n                        this will default to one budget with a value to 10%.\n                      items:\n                        description: |-\n                          Budget defines when Karpenter will restrict the\n                          number of Node Claims that can be terminating simultaneously.\n                        properties:\n                          duration:\n                            description: |-\n                              Duration determines how long a Budget is active since each Schedule hit.\n                              Only minutes and hours are accepted, as cron does not work in seconds.\n                              If omitted, the budget is always active.\n                              This is required if Schedule is set.\n                              This regex has an optional 0s at the end since the duration.String() always adds\n                              a 0s at the end.\n                            pattern: ^((([0-9]+(h|m))|([0-9]+h[0-9]+m))(0s)?)$\n                            type: string\n                          nodes:\n                            default: 10%\n                            description: |-\n                              Nodes dictates the maximum number of NodeClaims owned by this NodePool\n                              that can be terminating at once. This is calculated by counting nodes that\n                              have a deletion timestamp set, or are actively being deleted by Karpenter.\n                              This field is required when specifying a budget.\n                              This cannot be of type intstr.IntOrString since kubebuilder doesn't support pattern\n                              checking for int nodes for IntOrString nodes.\n                              Ref: https://github.com/kubernetes-sigs/controller-tools/blob/55efe4be40394a288216dab63156b0a64fb82929/pkg/crd/markers/validation.go#L379-L388\n                            pattern: ^((100|[0-9]{1,2})%|[0-9]+)$\n                            type: string\n                          schedule:\n                            description: |-\n                              Schedule specifies when a budget begins being active, following\n                              the upstream cronjob syntax. If omitted, the budget is always active.\n                              Timezones are not supported.\n                              This field is required if Duration is set.\n                            pattern: ^(@(annually|yearly|monthly|weekly|daily|midnight|hourly))|((.+)\\s(.+)\\s(.+)\\s(.+)\\s(.+))$\n                            type: string\n                        required:\n                          - nodes\n                        type: object\n                      maxItems: 50\n                      type: array\n                      x-kubernetes-validations:\n                        - message: '''schedule'' must be set with ''duration'''\n                          rule: self.all(x, has(x.schedule) == has(x.duration))\n                    consolidateAfter:\n                      description: |-\n                        ConsolidateAfter is the duration the controller will wait\n                        before attempting to terminate nodes that are underutilized.\n                        Refer to ConsolidationPolicy for how underutilization is considered.\n                      pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                      type: string\n                    consolidationPolicy:\n                      default: WhenUnderutilized\n                      description: |-\n                        ConsolidationPolicy describes which nodes Karpenter can disrupt through its consolidation\n                        algorithm. This policy defaults to \"WhenUnderutilized\" if not specified\n                      enum:\n                        - WhenEmpty\n                        - WhenUnderutilized\n                      type: string\n                    expireAfter:\n                      default: 720h\n                      description: |-\n                        ExpireAfter is the duration the controller will wait\n                        before terminating a node, measured from when the node is created. This\n                        is useful to implement features like eventually consistent node upgrade,\n                        memory leak protection, and disruption testing.\n                      pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                      type: string\n                  type: object\n                  x-kubernetes-validations:\n                    - message: consolidateAfter cannot be combined with consolidationPolicy=WhenUnderutilized\n                      rule: 'has(self.consolidateAfter) ? self.consolidationPolicy != ''WhenUnderutilized'' || self.consolidateAfter == ''Never'' : true'\n                    - message: consolidateAfter must be specified with consolidationPolicy=WhenEmpty\n                      rule: 'self.consolidationPolicy == ''WhenEmpty'' ? has(self.consolidateAfter) : true'\n                limits:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Limits define a set of bounds for provisioning capacity.\n                  type: object\n                template:\n                  description: |-\n                    Template contains the template of possibilities for the provisioning logic to launch a NodeClaim with.\n                    NodeClaims launched from this NodePool will often be further constrained than the template specifies.\n                  properties:\n                    metadata:\n                      properties:\n                        annotations:\n                          additionalProperties:\n                            type: string\n                          description: |-\n                            Annotations is an unstructured key value map stored with a resource that may be\n                            set by external tools to store and retrieve arbitrary metadata. They are not\n                            queryable and should be preserved when modifying objects.\n                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n                          type: object\n                        labels:\n                          additionalProperties:\n                            type: string\n                            maxLength: 63\n                            pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                          description: |-\n                            Map of string keys and values that can be used to organize and categorize\n                            (scope and select) objects. May match selectors of replication controllers\n                            and services.\n                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n                          type: object\n                          maxProperties: 100\n                          x-kubernetes-validations:\n                            - message: label domain \"kubernetes.io\" is restricted\n                              rule: self.all(x, x in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\",  \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || x.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || x.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !x.find(\"^([^/]+)\").endsWith(\"kubernetes.io\"))\n                            - message: label domain \"k8s.io\" is restricted\n                              rule: self.all(x, x.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !x.find(\"^([^/]+)\").endsWith(\"k8s.io\"))\n                            - message: label domain \"karpenter.sh\" is restricted\n                              rule: self.all(x, x in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.sh\"))\n                            - message: label \"karpenter.sh/nodepool\" is restricted\n                              rule: self.all(x, x != \"karpenter.sh/nodepool\")\n                            - message: label \"kubernetes.io/hostname\" is restricted\n                              rule: self.all(x, x != \"kubernetes.io/hostname\")\n                            - message: label domain \"karpenter.k8s.aws\" is restricted\n                              rule: self.all(x, x in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\"))\n                      type: object\n                    spec:\n                      description: NodeClaimSpec describes the desired state of the NodeClaim\n                      properties:\n                        kubelet:\n                          description: |-\n                            Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                            They are a subset of the upstream types, recognizing not all options may be supported.\n                            Wherever possible, the types and names should reflect the upstream kubelet types.\n                          properties:\n                            clusterDNS:\n                              description: |-\n                                clusterDNS is a list of IP addresses for the cluster DNS server.\n                                Note that not all providers may use all addresses.\n                              items:\n                                type: string\n                              type: array\n                            cpuCFSQuota:\n                              description: CPUCFSQuota enables CPU CFS quota enforcement for containers that specify CPU limits.\n                              type: boolean\n                            evictionHard:\n                              additionalProperties:\n                                type: string\n                                pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              description: EvictionHard is the map of signal names to quantities that define hard eviction thresholds\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            evictionMaxPodGracePeriod:\n                              description: |-\n                                EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                                response to soft eviction thresholds being met.\n                              format: int32\n                              type: integer\n                            evictionSoft:\n                              additionalProperties:\n                                type: string\n                                pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              description: EvictionSoft is the map of signal names to quantities that define soft eviction thresholds\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            evictionSoftGracePeriod:\n                              additionalProperties:\n                                type: string\n                              description: EvictionSoftGracePeriod is the map of signal names to quantities that define grace periods for each eviction signal\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                                  rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                            imageGCHighThresholdPercent:\n                              description: |-\n                                ImageGCHighThresholdPercent is the percent of disk usage after which image\n                                garbage collection is always run. The percent is calculated by dividing this\n                                field value by 100, so this field must be between 0 and 100, inclusive.\n                                When specified, the value must be greater than ImageGCLowThresholdPercent.\n                              format: int32\n                              maximum: 100\n                              minimum: 0\n                              type: integer\n                            imageGCLowThresholdPercent:\n                              description: |-\n                                ImageGCLowThresholdPercent is the percent of disk usage before which image\n                                garbage collection is never run. Lowest disk usage to garbage collect to.\n                                The percent is calculated by dividing this field value by 100,\n                                so the field value must be between 0 and 100, inclusive.\n                                When specified, the value must be less than imageGCHighThresholdPercent\n                              format: int32\n                              maximum: 100\n                              minimum: 0\n                              type: integer\n                            kubeReserved:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: KubeReserved contains resources reserved for Kubernetes system components.\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                                  rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                                - message: kubeReserved value cannot be a negative resource quantity\n                                  rule: self.all(x, !self[x].startsWith('-'))\n                            maxPods:\n                              description: |-\n                                MaxPods is an override for the maximum number of pods that can run on\n                                a worker node instance.\n                              format: int32\n                              minimum: 0\n                              type: integer\n                            podsPerCore:\n                              description: |-\n                                PodsPerCore is an override for the number of pods that can run on a worker node\n                                instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                                MaxPods is a lower value, that value will be used.\n                              format: int32\n                              minimum: 0\n                              type: integer\n                            systemReserved:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: SystemReserved contains resources reserved for OS system daemons and kernel memory.\n                              type: object\n                              x-kubernetes-validations:\n                                - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                                  rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')\n                                - message: systemReserved value cannot be a negative resource quantity\n                                  rule: self.all(x, !self[x].startsWith('-'))\n                          type: object\n                          x-kubernetes-validations:\n                            - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent\n                              rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent) ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  : true'\n                            - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod\n                              rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true\n                            - message: evictionSoftGracePeriod OwnerKey does not have a matching evictionSoft\n                              rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e, (e in self.evictionSoft)):true\n                        nodeClassRef:\n                          description: NodeClassRef is a reference to an object that defines provider specific configuration\n                          properties:\n                            apiVersion:\n                              description: API version of the referent\n                              type: string\n                            kind:\n                              description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                              type: string\n                            name:\n                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                              type: string\n                          required:\n                            - name\n                          type: object\n                        requirements:\n                          description: Requirements are layered with GetLabels and applied to every node.\n                          items:\n                            description: |-\n                              A node selector requirement is a selector that contains values, a key, and an operator\n                              that relates the key and values.\n                            properties:\n                              key:\n                                description: The label key that the selector applies to.\n                                type: string\n                                maxLength: 316\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                                x-kubernetes-validations:\n                                  - message: label domain \"kubernetes.io\" is restricted\n                                    rule: self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                                  - message: label domain \"k8s.io\" is restricted\n                                    rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                                  - message: label domain \"karpenter.sh\" is restricted\n                                    rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                                  - message: label \"karpenter.sh/nodepool\" is restricted\n                                    rule: self != \"karpenter.sh/nodepool\"\n                                  - message: label \"kubernetes.io/hostname\" is restricted\n                                    rule: self != \"kubernetes.io/hostname\"\n                                  - message: label domain \"karpenter.k8s.aws\" is restricted\n                                    rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                              operator:\n                                description: |-\n                                  Represents a key's relationship to a set of values.\n                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                                type: string\n                                enum:\n                                  - In\n                                  - NotIn\n                                  - Exists\n                                  - DoesNotExist\n                                  - Gt\n                                  - Lt\n                              values:\n                                description: |-\n                                  An array of string values. If the operator is In or NotIn,\n                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                                  the values array must be empty. If the operator is Gt or Lt, the values\n                                  array must have a single element, which will be interpreted as an integer.\n                                  This array is replaced during a strategic merge patch.\n                                items:\n                                  type: string\n                                type: array\n                                maxLength: 63\n                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                            required:\n                              - key\n                              - operator\n                            type: object\n                          maxItems: 30\n                          type: array\n                          x-kubernetes-validations:\n                            - message: requirements with operator 'In' must have a value defined\n                              rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 : true)'\n                            - message: requirements operator 'Gt' or 'Lt' must have a single positive integer value\n                              rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)'\n                        resources:\n                          description: Resources models the resource requirements for the NodeClaim to launch\n                          properties:\n                            requests:\n                              additionalProperties:\n                                anyOf:\n                                  - type: integer\n                                  - type: string\n                                pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                                x-kubernetes-int-or-string: true\n                              description: Requests describes the minimum required resources for the NodeClaim to launch\n                              type: object\n                          type: object\n                          maxProperties: 0\n                        startupTaints:\n                          description: |-\n                            StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                            within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                            daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                            purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                          items:\n                            description: |-\n                              The node this Taint is attached to has the \"effect\" on\n                              any pod that does not tolerate the Taint.\n                            properties:\n                              effect:\n                                description: |-\n                                  Required. The effect of the taint on pods\n                                  that do not tolerate the taint.\n                                  Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                                type: string\n                                enum:\n                                  - NoSchedule\n                                  - PreferNoSchedule\n                                  - NoExecute\n                              key:\n                                description: Required. The taint key to be applied to a node.\n                                type: string\n                                minLength: 1\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              timeAdded:\n                                description: |-\n                                  TimeAdded represents the time at which the taint was added.\n                                  It is only written for NoExecute taints.\n                                format: date-time\n                                type: string\n                              value:\n                                description: The taint value corresponding to the taint key.\n                                type: string\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                            required:\n                              - effect\n                              - key\n                            type: object\n                          type: array\n                        taints:\n                          description: Taints will be applied to the NodeClaim's node.\n                          items:\n                            description: |-\n                              The node this Taint is attached to has the \"effect\" on\n                              any pod that does not tolerate the Taint.\n                            properties:\n                              effect:\n                                description: |-\n                                  Required. The effect of the taint on pods\n                                  that do not tolerate the taint.\n                                  Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                                type: string\n                                enum:\n                                  - NoSchedule\n                                  - PreferNoSchedule\n                                  - NoExecute\n                              key:\n                                description: Required. The taint key to be applied to a node.\n                                type: string\n                                minLength: 1\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              timeAdded:\n                                description: |-\n                                  TimeAdded represents the time at which the taint was added.\n                                  It is only written for NoExecute taints.\n                                format: date-time\n                                type: string\n                              value:\n                                description: The taint value corresponding to the taint key.\n                                type: string\n                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                            required:\n                              - effect\n                              - key\n                            type: object\n                          type: array\n                      required:\n                        - nodeClassRef\n                        - requirements\n                      type: object\n                  required:\n                    - spec\n                  type: object\n                weight:\n                  description: |-\n                    Weight is the priority given to the nodepool during scheduling. A higher\n                    numerical weight indicates that this nodepool will be ordered\n                    ahead of other nodepools with lower weights. A nodepool with no weight\n                    will be treated as if it is a nodepool with a weight of 0.\n                  format: int32\n                  maximum: 100\n                  minimum: 1\n                  type: integer\n              required:\n                - template\n              type: object\n            status:\n              description: NodePoolStatus defines the observed state of NodePool\n              properties:\n                resources:\n                  additionalProperties:\n                    anyOf:\n                      - type: integer\n                      - type: string\n                    pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                    x-kubernetes-int-or-string: true\n                  description: Resources is the list of resources that have been provisioned.\n                  type: object\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\n",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.14.0\n  name: nodepools.karpenter.sh\nspec:\n  group: karpenter.sh\n  names:\n    categories:\n    - karpenter\n    kind: NodePool\n    listKind: NodePoolList\n    plural: nodepools\n    singular: nodepool\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .spec.template.spec.nodeClassRef.name\n      name: NodeClass\n      type: string\n    - jsonPath: .spec.weight\n      name: Weight\n      priority: 1\n      type: string\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: NodePool is the Schema for the NodePools API\n        properties:\n          apiVersion:\n            description: |-\n              APIVersion defines the versioned schema of this representation of an object.\n              Servers should convert recognized schemas to the latest internal value, and\n              may reject unrecognized values.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n            type: string\n          kind:\n            description: |-\n              Kind is a string value representing the REST resource this object represents.\n              Servers may infer this from the endpoint the client submits requests to.\n              Cannot be updated.\n              In CamelCase.\n              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: |-\n              NodePoolSpec is the top level nodepool specification. Nodepools\n              launch nodes in response to pods that are unschedulable. A single nodepool\n              is capable of managing a diverse set of nodes. Node properties are determined\n              from a combination of nodepool and pod scheduling constraints.\n            properties:\n              disruption:\n                default:\n                  consolidationPolicy: WhenUnderutilized\n                  expireAfter: 720h\n                description: Disruption contains the parameters that relate to Karpenter's\n                  disruption logic\n                properties:\n                  budgets:\n                    default:\n                    - nodes: 10%\n                    description: |-\n                      Budgets is a list of Budgets.\n                      If there are multiple active budgets, Karpenter uses\n                      the most restrictive value. If left undefined,\n                      this will default to one budget with a value to 10%.\n                    items:\n                      description: |-\n                        Budget defines when Karpenter will restrict the\n                        number of Node Claims that can be terminating simultaneously.\n                      properties:\n                        duration:\n                          description: |-\n                            Duration determines how long a Budget is active since each Schedule hit.\n                            Only minutes and hours are accepted, as cron does not work in seconds.\n                            If omitted, the budget is always active.\n                            This is required if Schedule is set.\n                            This regex has an optional 0s at the end since the duration.String() always adds\n                            a 0s at the end.\n                          pattern: ^((([0-9]+(h|m))|([0-9]+h[0-9]+m))(0s)?)$\n                          type: string\n                        nodes:\n                          default: 10%\n                          description: |-\n                            Nodes dictates the maximum number of NodeClaims owned by this NodePool\n                            that can be terminating at once. This is calculated by counting nodes that\n                            have a deletion timestamp set, or are actively being deleted by Karpenter.\n                            This field is required when specifying a budget.\n                            This cannot be of type intstr.IntOrString since kubebuilder doesn't support pattern\n                            checking for int nodes for IntOrString nodes.\n                            Ref: https://github.com/kubernetes-sigs/controller-tools/blob/55efe4be40394a288216dab63156b0a64fb82929/pkg/crd/markers/validation.go#L379-L388\n                          pattern: ^((100|[0-9]{1,2})%|[0-9]+)$\n                          type: string\n                        schedule:\n                          description: |-\n                            Schedule specifies when a budget begins being active, following\n                            the upstream cronjob syntax. If omitted, the budget is always active.\n                            Timezones are not supported.\n                            This field is required if Duration is set.\n                          pattern: ^(@(annually|yearly|monthly|weekly|daily|midnight|hourly))|((.+)\\s(.+)\\s(.+)\\s(.+)\\s(.+))$\n                          type: string\n                      required:\n                      - nodes\n                      type: object\n                    maxItems: 50\n                    type: array\n                    x-kubernetes-validations:\n                    - message: '''schedule'' must be set with ''duration'''\n                      rule: self.all(x, has(x.schedule) == has(x.duration))\n                  consolidateAfter:\n                    description: |-\n                      ConsolidateAfter is the duration the controller will wait\n                      before attempting to terminate nodes that are underutilized.\n                      Refer to ConsolidationPolicy for how underutilization is considered.\n                    pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                    type: string\n                  consolidationPolicy:\n                    default: WhenUnderutilized\n                    description: |-\n                      ConsolidationPolicy describes which nodes Karpenter can disrupt through its consolidation\n                      algorithm. This policy defaults to \"WhenUnderutilized\" if not specified\n                    enum:\n                    - WhenEmpty\n                    - WhenUnderutilized\n                    type: string\n                  expireAfter:\n                    default: 720h\n                    description: |-\n                      ExpireAfter is the duration the controller will wait\n                      before terminating a node, measured from when the node is created. This\n                      is useful to implement features like eventually consistent node upgrade,\n                      memory leak protection, and disruption testing.\n                    pattern: ^(([0-9]+(s|m|h))+)|(Never)$\n                    type: string\n                type: object\n                x-kubernetes-validations:\n                - message: consolidateAfter cannot be combined with consolidationPolicy=WhenUnderutilized\n                  rule: 'has(self.consolidateAfter) ? self.consolidationPolicy !=\n                    ''WhenUnderutilized'' || self.consolidateAfter == ''Never'' :\n                    true'\n                - message: consolidateAfter must be specified with consolidationPolicy=WhenEmpty\n                  rule: 'self.consolidationPolicy == ''WhenEmpty'' ? has(self.consolidateAfter)\n                    : true'\n              limits:\n                additionalProperties:\n                  anyOf:\n                  - type: integer\n                  - type: string\n                  pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                  x-kubernetes-int-or-string: true\n                description: Limits define a set of bounds for provisioning capacity.\n                type: object\n              template:\n                description: |-\n                  Template contains the template of possibilities for the provisioning logic to launch a NodeClaim with.\n                  NodeClaims launched from this NodePool will often be further constrained than the template specifies.\n                properties:\n                  metadata:\n                    properties:\n                      annotations:\n                        additionalProperties:\n                          type: string\n                        description: |-\n                          Annotations is an unstructured key value map stored with a resource that may be\n                          set by external tools to store and retrieve arbitrary metadata. They are not\n                          queryable and should be preserved when modifying objects.\n                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n                        type: object\n                      labels:\n                        additionalProperties:\n                          maxLength: 63\n                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                          type: string\n                        description: |-\n                          Map of string keys and values that can be used to organize and categorize\n                          (scope and select) objects. May match selectors of replication controllers\n                          and services.\n                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n                        maxProperties: 100\n                        type: object\n                        x-kubernetes-validations:\n                        - message: label domain \"kubernetes.io\" is restricted\n                          rule: self.all(x, x in [\"beta.kubernetes.io/instance-type\",\n                            \"failure-domain.beta.kubernetes.io/region\",  \"beta.kubernetes.io/os\",\n                            \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\",\n                            \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\",\n                            \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"]\n                            || x.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") ||\n                            x.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\")\n                            || !x.find(\"^([^/]+)\").endsWith(\"kubernetes.io\"))\n                        - message: label domain \"k8s.io\" is restricted\n                          rule: self.all(x, x.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\")\n                            || !x.find(\"^([^/]+)\").endsWith(\"k8s.io\"))\n                        - message: label domain \"karpenter.sh\" is restricted\n                          rule: self.all(x, x in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"]\n                            || !x.find(\"^([^/]+)\").endsWith(\"karpenter.sh\"))\n                        - message: label \"karpenter.sh/nodepool\" is restricted\n                          rule: self.all(x, x != \"karpenter.sh/nodepool\")\n                        - message: label \"kubernetes.io/hostname\" is restricted\n                          rule: self.all(x, x != \"kubernetes.io/hostname\")\n                        - message: label domain \"karpenter.k8s.aws\" is restricted\n                          rule: self.all(x, x in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\",\n                            \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\",\n                            \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\",\n                            \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\",\n                            \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\",\n                            \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\",\n                            \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\",\n                            \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\",\n                            \"karpenter.k8s.aws/instance-accelerator-manufacturer\",\n                            \"karpenter.k8s.aws/instance-accelerator-count\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\"))\n                    type: object\n                  spec:\n                    description: NodeClaimSpec describes the desired state of the\n                      NodeClaim\n                    properties:\n                      kubelet:\n                        description: |-\n                          Kubelet defines args to be used when configuring kubelet on provisioned nodes.\n                          They are a subset of the upstream types, recognizing not all options may be supported.\n                          Wherever possible, the types and names should reflect the upstream kubelet types.\n                        properties:\n                          clusterDNS:\n                            description: |-\n                              clusterDNS is a list of IP addresses for the cluster DNS server.\n                              Note that not all providers may use all addresses.\n                            items:\n                              type: string\n                            type: array\n                          cpuCFSQuota:\n                            description: CPUCFSQuota enables CPU CFS quota enforcement\n                              for containers that specify CPU limits.\n                            type: boolean\n                          evictionHard:\n                            additionalProperties:\n                              pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              type: string\n                            description: EvictionHard is the map of signal names to\n                              quantities that define hard eviction thresholds\n                            type: object\n                            x-kubernetes-validations:\n                            - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                              rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                          evictionMaxPodGracePeriod:\n                            description: |-\n                              EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in\n                              response to soft eviction thresholds being met.\n                            format: int32\n                            type: integer\n                          evictionSoft:\n                            additionalProperties:\n                              pattern: ^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$\n                              type: string\n                            description: EvictionSoft is the map of signal names to\n                              quantities that define soft eviction thresholds\n                            type: object\n                            x-kubernetes-validations:\n                            - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                              rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                          evictionSoftGracePeriod:\n                            additionalProperties:\n                              type: string\n                            description: EvictionSoftGracePeriod is the map of signal\n                              names to quantities that define grace periods for each\n                              eviction signal\n                            type: object\n                            x-kubernetes-validations:\n                            - message: valid keys for evictionSoftGracePeriod are\n                                ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']\n                              rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])\n                          imageGCHighThresholdPercent:\n                            description: |-\n                              ImageGCHighThresholdPercent is the percent of disk usage after which image\n                              garbage collection is always run. The percent is calculated by dividing this\n                              field value by 100, so this field must be between 0 and 100, inclusive.\n                              When specified, the value must be greater than ImageGCLowThresholdPercent.\n                            format: int32\n                            maximum: 100\n                            minimum: 0\n                            type: integer\n                          imageGCLowThresholdPercent:\n                            description: |-\n                              ImageGCLowThresholdPercent is the percent of disk usage before which image\n                              garbage collection is never run. Lowest disk usage to garbage collect to.\n                              The percent is calculated by dividing this field value by 100,\n                              so the field value must be between 0 and 100, inclusive.\n                              When specified, the value must be less than imageGCHighThresholdPercent\n                            format: int32\n                            maximum: 100\n                            minimum: 0\n                            type: integer\n                          kubeReserved:\n                            additionalProperties:\n                              anyOf:\n                              - type: integer\n                              - type: string\n                              pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                              x-kubernetes-int-or-string: true\n                            description: KubeReserved contains resources reserved\n                              for Kubernetes system components.\n                            type: object\n                            x-kubernetes-validations:\n                            - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']\n                              rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'\n                                || x=='pid')\n                            - message: kubeReserved value cannot be a negative resource\n                                quantity\n                              rule: self.all(x, !self[x].startsWith('-'))\n                          maxPods:\n                            description: |-\n                              MaxPods is an override for the maximum number of pods that can run on\n                              a worker node instance.\n                            format: int32\n                            minimum: 0\n                            type: integer\n                          podsPerCore:\n                            description: |-\n                              PodsPerCore is an override for the number of pods that can run on a worker node\n                              instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if\n                              MaxPods is a lower value, that value will be used.\n                            format: int32\n                            minimum: 0\n                            type: integer\n                          systemReserved:\n                            additionalProperties:\n                              anyOf:\n                              - type: integer\n                              - type: string\n                              pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                              x-kubernetes-int-or-string: true\n                            description: SystemReserved contains resources reserved\n                              for OS system daemons and kernel memory.\n                            type: object\n                            x-kubernetes-validations:\n                            - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']\n                              rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'\n                                || x=='pid')\n                            - message: systemReserved value cannot be a negative resource\n                                quantity\n                              rule: self.all(x, !self[x].startsWith('-'))\n                        type: object\n                        x-kubernetes-validations:\n                        - message: imageGCHighThresholdPercent must be greater than\n                            imageGCLowThresholdPercent\n                          rule: 'has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent)\n                            ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  :\n                            true'\n                        - message: evictionSoft OwnerKey does not have a matching\n                            evictionSoftGracePeriod\n                          rule: has(self.evictionSoft) ? self.evictionSoft.all(e,\n                            (e in self.evictionSoftGracePeriod)):true\n                        - message: evictionSoftGracePeriod OwnerKey does not have\n                            a matching evictionSoft\n                          rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e,\n                            (e in self.evictionSoft)):true\n                      nodeClassRef:\n                        description: NodeClassRef is a reference to an object that\n                          defines provider specific configuration\n                        properties:\n                          apiVersion:\n                            description: API version of the referent\n                            type: string\n                          kind:\n                            description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                            type: string\n                          name:\n                            description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      requirements:\n                        description: Requirements are layered with GetLabels and applied\n                          to every node.\n                        items:\n                          description: |-\n                            A node selector requirement is a selector that contains values, a key, and an operator\n                            that relates the key and values.\n                          properties:\n                            key:\n                              description: The label key that the selector applies\n                                to.\n                              maxLength: 316\n                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              type: string\n                              x-kubernetes-validations:\n                              - message: label domain \"kubernetes.io\" is restricted\n                                rule: self in [\"beta.kubernetes.io/instance-type\",\n                                  \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\",\n                                  \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\",\n                                  \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\",\n                                  \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\",\n                                  \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"]\n                                  || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\")\n                                  || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\")\n                                  || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")\n                              - message: label domain \"k8s.io\" is restricted\n                                rule: self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\")\n                                  || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")\n                              - message: label domain \"karpenter.sh\" is restricted\n                                rule: self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"]\n                                  || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")\n                              - message: label \"karpenter.sh/nodepool\" is restricted\n                                rule: self != \"karpenter.sh/nodepool\"\n                              - message: label \"kubernetes.io/hostname\" is restricted\n                                rule: self != \"kubernetes.io/hostname\"\n                              - message: label domain \"karpenter.k8s.aws\" is restricted\n                                rule: self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\",\n                                  \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\",\n                                  \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\",\n                                  \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\",\n                                  \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-memory\",\n                                  \"karpenter.k8s.aws/instance-network-bandwidth\",\n                                  \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\",\n                                  \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\",\n                                  \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\",\n                                  \"karpenter.k8s.aws/instance-accelerator-count\"]\n                                  || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")\n                            operator:\n                              description: |-\n                                Represents a key's relationship to a set of values.\n                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n                              enum:\n                              - In\n                              - NotIn\n                              - Exists\n                              - DoesNotExist\n                              - Gt\n                              - Lt\n                              type: string\n                            values:\n                              description: |-\n                                An array of string values. If the operator is In or NotIn,\n                                the values array must be non-empty. If the operator is Exists or DoesNotExist,\n                                the values array must be empty. If the operator is Gt or Lt, the values\n                                array must have a single element, which will be interpreted as an integer.\n                                This array is replaced during a strategic merge patch.\n                              items:\n                                type: string\n                              maxLength: 63\n                              pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n                              type: array\n                          required:\n                          - key\n                          - operator\n                          type: object\n                        maxItems: 30\n                        type: array\n                        x-kubernetes-validations:\n                        - message: requirements with operator 'In' must have a value\n                            defined\n                          rule: 'self.all(x, x.operator == ''In'' ? x.values.size()\n                            != 0 : true)'\n                        - message: requirements operator 'Gt' or 'Lt' must have a\n                            single positive integer value\n                          rule: 'self.all(x, (x.operator == ''Gt'' || x.operator ==\n                            ''Lt'') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e=\n                            0) : true)'\n                      resources:\n                        description: Resources models the resource requirements for\n                          the NodeClaim to launch\n                        maxProperties: 0\n                        properties:\n                          requests:\n                            additionalProperties:\n                              anyOf:\n                              - type: integer\n                              - type: string\n                              pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                              x-kubernetes-int-or-string: true\n                            description: Requests describes the minimum required resources\n                              for the NodeClaim to launch\n                            type: object\n                        type: object\n                      startupTaints:\n                        description: |-\n                          StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\n                          within a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\n                          daemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\n                          purposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.\n                        items:\n                          description: |-\n                            The node this Taint is attached to has the \"effect\" on\n                            any pod that does not tolerate the Taint.\n                          properties:\n                            effect:\n                              description: |-\n                                Required. The effect of the taint on pods\n                                that do not tolerate the taint.\n                                Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                              enum:\n                              - NoSchedule\n                              - PreferNoSchedule\n                              - NoExecute\n                              type: string\n                            key:\n                              description: Required. The taint key to be applied to\n                                a node.\n                              minLength: 1\n                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              type: string\n                            timeAdded:\n                              description: |-\n                                TimeAdded represents the time at which the taint was added.\n                                It is only written for NoExecute taints.\n                              format: date-time\n                              type: string\n                            value:\n                              description: The taint value corresponding to the taint\n                                key.\n                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              type: string\n                          required:\n                          - effect\n                          - key\n                          type: object\n                        type: array\n                      taints:\n                        description: Taints will be applied to the NodeClaim's node.\n                        items:\n                          description: |-\n                            The node this Taint is attached to has the \"effect\" on\n                            any pod that does not tolerate the Taint.\n                          properties:\n                            effect:\n                              description: |-\n                                Required. The effect of the taint on pods\n                                that do not tolerate the taint.\n                                Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\n                              enum:\n                              - NoSchedule\n                              - PreferNoSchedule\n                              - NoExecute\n                              type: string\n                            key:\n                              description: Required. The taint key to be applied to\n                                a node.\n                              minLength: 1\n                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              type: string\n                            timeAdded:\n                              description: |-\n                                TimeAdded represents the time at which the taint was added.\n                                It is only written for NoExecute taints.\n                              format: date-time\n                              type: string\n                            value:\n                              description: The taint value corresponding to the taint\n                                key.\n                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\n                              type: string\n                          required:\n                          - effect\n                          - key\n                          type: object\n                        type: array\n                    required:\n                    - nodeClassRef\n                    - requirements\n                    type: object\n                required:\n                - spec\n                type: object\n              weight:\n                description: |-\n                  Weight is the priority given to the nodepool during scheduling. A higher\n                  numerical weight indicates that this nodepool will be ordered\n                  ahead of other nodepools with lower weights. A nodepool with no weight\n                  will be treated as if it is a nodepool with a weight of 0.\n                format: int32\n                maximum: 100\n                minimum: 1\n                type: integer\n            required:\n            - template\n            type: object\n          status:\n            description: NodePoolStatus defines the observed state of NodePool\n            properties:\n              resources:\n                additionalProperties:\n                  anyOf:\n                  - type: integer\n                  - type: string\n                  pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                  x-kubernetes-int-or-string: true\n                description: Resources is the list of resources that have been provisioned.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n",
            "yaml_incluster": "20cf6ae27829e577597b83b68e2d5ac5c7e364332887929f1cd68f09b42f2e46"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.karpenter.module.karpenter-crds.data.http.yaml_file",
            "module.karpenter.module.karpenter-crds.null_resource.status_check",
            "module.vpc.aws_subnet.intra",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.karpenter.module.karpenter-crds",
      "mode": "managed",
      "type": "null_resource",
      "name": "status_check",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.k8s.aws_ec2nodeclasses.yaml",
          "schema_version": 0,
          "attributes": {
            "id": "1153552523800705365",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.karpenter.module.karpenter-crds.data.http.yaml_file"
          ]
        },
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodeclaims.yaml",
          "schema_version": 0,
          "attributes": {
            "id": "82593356791861144",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.karpenter.module.karpenter-crds.data.http.yaml_file"
          ]
        },
        {
          "index_key": "https://raw.githubusercontent.com/aws/karpenter/v0.34.6/pkg/apis/crds/karpenter.sh_nodepools.yaml",
          "schema_version": 0,
          "attributes": {
            "id": "7751561871436853788",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.karpenter.module.karpenter-crds.data.http.yaml_file"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:network-acl/acl-0ce9c22ee847cd369",
            "default_network_acl_id": "acl-0ce9c22ee847cd369",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-0ce9c22ee847cd369",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "793209430381",
            "subnet_ids": [
              "subnet-008ee45c040760f01",
              "subnet-06377c3228e0d7b11",
              "subnet-0870db52464bc8e5a",
              "subnet-090a3d88a1facf850",
              "subnet-09e93245d4455e3b1",
              "subnet-0c89a6236d81ebeb6"
            ],
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:route-table/rtb-04e79929072d8e302",
            "default_route_table_id": "rtb-04e79929072d8e302",
            "id": "rtb-04e79929072d8e302",
            "owner_id": "793209430381",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:security-group/sg-084dda5871a4a2c5a",
            "description": "default VPC security group",
            "egress": [],
            "id": "sg-084dda5871a4a2c5a",
            "ingress": [],
            "name": "default",
            "name_prefix": "",
            "owner_id": "793209430381",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0d89da2348b994ba9",
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:elastic-ip/eipalloc-0d89da2348b994ba9",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0f7f82cb2c1ce13ad",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0d89da2348b994ba9",
            "instance": "",
            "network_border_group": "ap-southeast-1",
            "network_interface": "eni-0c5810dd82d052413",
            "private_dns": "ip-10-0-101-69.ap-southeast-1.compute.internal",
            "private_ip": "10.0.101.69",
            "ptr_record": "",
            "public_dns": "ec2-54-151-245-126.ap-southeast-1.compute.amazonaws.com",
            "public_ip": "54.151.245.126",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:internet-gateway/igw-02cc2038caa031bb3",
            "id": "igw-02cc2038caa031bb3",
            "owner_id": "793209430381",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0d89da2348b994ba9",
            "association_id": "eipassoc-0f7f82cb2c1ce13ad",
            "connectivity_type": "public",
            "id": "nat-0aca74740a2cd675d",
            "network_interface_id": "eni-0c5810dd82d052413",
            "private_ip": "10.0.101.69",
            "public_ip": "54.151.245.126",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-090a3d88a1facf850",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-01984796cadf9a9a31080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0aca74740a2cd675d",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-01984796cadf9a9a3",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-02cc2038caa031bb3",
            "id": "r-rtb-0508dce3d0d9a86841080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0508dce3d0d9a8684",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:route-table/rtb-01984796cadf9a9a3",
            "id": "rtb-01984796cadf9a9a3",
            "owner_id": "793209430381",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-0aca74740a2cd675d",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:route-table/rtb-0508dce3d0d9a8684",
            "id": "rtb-0508dce3d0d9a8684",
            "owner_id": "793209430381",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-02cc2038caa031bb3",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-030002f2c8df29fdd",
            "route_table_id": "rtb-01984796cadf9a9a3",
            "subnet_id": "subnet-0870db52464bc8e5a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-017fd9b26e68f10dc",
            "route_table_id": "rtb-01984796cadf9a9a3",
            "subnet_id": "subnet-0c89a6236d81ebeb6",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0082cc79f85f4c02c",
            "route_table_id": "rtb-01984796cadf9a9a3",
            "subnet_id": "subnet-008ee45c040760f01",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0f1e967821f21a86d",
            "route_table_id": "rtb-0508dce3d0d9a8684",
            "subnet_id": "subnet-090a3d88a1facf850",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-09f63f3cb376d44a0",
            "route_table_id": "rtb-0508dce3d0d9a8684",
            "subnet_id": "subnet-09e93245d4455e3b1",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0bed924b6b1940bec",
            "route_table_id": "rtb-0508dce3d0d9a8684",
            "subnet_id": "subnet-06377c3228e0d7b11",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:subnet/subnet-0870db52464bc8e5a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-1a",
            "availability_zone_id": "apse1-az2",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0870db52464bc8e5a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "793209430381",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:subnet/subnet-0c89a6236d81ebeb6",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-1b",
            "availability_zone_id": "apse1-az1",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0c89a6236d81ebeb6",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "793209430381",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:subnet/subnet-008ee45c040760f01",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-1c",
            "availability_zone_id": "apse1-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-008ee45c040760f01",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "793209430381",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:subnet/subnet-090a3d88a1facf850",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-1a",
            "availability_zone_id": "apse1-az2",
            "cidr_block": "10.0.101.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-090a3d88a1facf850",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "793209430381",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:subnet/subnet-09e93245d4455e3b1",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-1b",
            "availability_zone_id": "apse1-az1",
            "cidr_block": "10.0.102.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-09e93245d4455e3b1",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "793209430381",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:subnet/subnet-06377c3228e0d7b11",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-1c",
            "availability_zone_id": "apse1-az3",
            "cidr_block": "10.0.103.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-06377c3228e0d7b11",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "793209430381",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0045450fd1200b1a6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-1:793209430381:vpc/vpc-0045450fd1200b1a6",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0ce9c22ee847cd369",
            "default_route_table_id": "rtb-04e79929072d8e302",
            "default_security_group_id": "sg-084dda5871a4a2c5a",
            "dhcp_options_id": "dopt-2c804f4a",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0045450fd1200b1a6",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-04e79929072d8e302",
            "owner_id": "793209430381",
            "tags": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "eks-karpenter",
              "Name": "dev",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.eks.module.eks_managed_node_group[\"karpenter\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    }
  ]
}
